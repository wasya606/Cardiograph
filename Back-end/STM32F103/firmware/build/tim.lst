ARM GAS  /tmp/ccfhO7pz.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"tim.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_TIM_MspPostInit.part.0,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_TIM_MspPostInit.part.0:
  24              	.LFB71:
  25              		.file 1 "src/HAL/tim.c"
   1:src/HAL/tim.c **** /**
   2:src/HAL/tim.c ****   ******************************************************************************
   3:src/HAL/tim.c ****   * File Name          : TIM.c
   4:src/HAL/tim.c ****   * Description        : This file provides code for the configuration
   5:src/HAL/tim.c ****   *                      of the TIM instances.
   6:src/HAL/tim.c ****   ******************************************************************************
   7:src/HAL/tim.c ****   ** This notice applies to any and all portions of this file
   8:src/HAL/tim.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:src/HAL/tim.c ****   * USER CODE END. Other portions of this file, whether 
  10:src/HAL/tim.c ****   * inserted by the user or by software development tools
  11:src/HAL/tim.c ****   * are owned by their respective copyright owners.
  12:src/HAL/tim.c ****   *
  13:src/HAL/tim.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:src/HAL/tim.c ****   *
  15:src/HAL/tim.c ****   * Redistribution and use in source and binary forms, with or without modification,
  16:src/HAL/tim.c ****   * are permitted provided that the following conditions are met:
  17:src/HAL/tim.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:src/HAL/tim.c ****   *      this list of conditions and the following disclaimer.
  19:src/HAL/tim.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:src/HAL/tim.c ****   *      this list of conditions and the following disclaimer in the documentation
  21:src/HAL/tim.c ****   *      and/or other materials provided with the distribution.
  22:src/HAL/tim.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:src/HAL/tim.c ****   *      may be used to endorse or promote products derived from this software
  24:src/HAL/tim.c ****   *      without specific prior written permission.
  25:src/HAL/tim.c ****   *
  26:src/HAL/tim.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:src/HAL/tim.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:src/HAL/tim.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:src/HAL/tim.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:src/HAL/tim.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:src/HAL/tim.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:src/HAL/tim.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:src/HAL/tim.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccfhO7pz.s 			page 2


  34:src/HAL/tim.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:src/HAL/tim.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:src/HAL/tim.c ****   *
  37:src/HAL/tim.c ****   ******************************************************************************
  38:src/HAL/tim.c ****   */
  39:src/HAL/tim.c **** 
  40:src/HAL/tim.c **** /* Includes ------------------------------------------------------------------*/
  41:src/HAL/tim.c **** #include "tim.h"
  42:src/HAL/tim.c **** 
  43:src/HAL/tim.c **** #include "dma.h"
  44:src/HAL/tim.c **** 
  45:src/HAL/tim.c **** /* USER CODE BEGIN 0 */
  46:src/HAL/tim.c **** 
  47:src/HAL/tim.c **** /* USER CODE END 0 */
  48:src/HAL/tim.c **** 
  49:src/HAL/tim.c **** TIM_HandleTypeDef htim1;
  50:src/HAL/tim.c **** TIM_HandleTypeDef htim2;
  51:src/HAL/tim.c **** DMA_HandleTypeDef hdma_tim1_ch1;
  52:src/HAL/tim.c **** 
  53:src/HAL/tim.c **** /* TIM1 init function */
  54:src/HAL/tim.c **** void MX_TIM1_Init(void)
  55:src/HAL/tim.c **** {
  56:src/HAL/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  57:src/HAL/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig;
  58:src/HAL/tim.c ****   TIM_OC_InitTypeDef sConfigOC;
  59:src/HAL/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
  60:src/HAL/tim.c **** 
  61:src/HAL/tim.c ****   htim1.Instance = TIM1;
  62:src/HAL/tim.c ****   htim1.Init.Prescaler = 36000;
  63:src/HAL/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  64:src/HAL/tim.c ****   htim1.Init.Period = 999;
  65:src/HAL/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  66:src/HAL/tim.c ****   htim1.Init.RepetitionCounter = 0;
  67:src/HAL/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  68:src/HAL/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  69:src/HAL/tim.c ****   {
  70:src/HAL/tim.c ****     _Error_Handler(__FILE__, __LINE__);
  71:src/HAL/tim.c ****   }
  72:src/HAL/tim.c **** 
  73:src/HAL/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  74:src/HAL/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  75:src/HAL/tim.c ****   {
  76:src/HAL/tim.c ****     _Error_Handler(__FILE__, __LINE__);
  77:src/HAL/tim.c ****   }
  78:src/HAL/tim.c **** 
  79:src/HAL/tim.c ****   if (HAL_TIM_OC_Init(&htim1) != HAL_OK)
  80:src/HAL/tim.c ****   {
  81:src/HAL/tim.c ****     _Error_Handler(__FILE__, __LINE__);
  82:src/HAL/tim.c ****   }
  83:src/HAL/tim.c **** 
  84:src/HAL/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  85:src/HAL/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  86:src/HAL/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  87:src/HAL/tim.c ****   {
  88:src/HAL/tim.c ****     _Error_Handler(__FILE__, __LINE__);
  89:src/HAL/tim.c ****   }
  90:src/HAL/tim.c **** 
ARM GAS  /tmp/ccfhO7pz.s 			page 3


  91:src/HAL/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_FORCED_ACTIVE;
  92:src/HAL/tim.c ****   sConfigOC.Pulse = 0;
  93:src/HAL/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  94:src/HAL/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  95:src/HAL/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  96:src/HAL/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  97:src/HAL/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  98:src/HAL/tim.c ****   if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  99:src/HAL/tim.c ****   {
 100:src/HAL/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 101:src/HAL/tim.c ****   }
 102:src/HAL/tim.c **** 
 103:src/HAL/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 104:src/HAL/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 105:src/HAL/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 106:src/HAL/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 107:src/HAL/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 108:src/HAL/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 109:src/HAL/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 110:src/HAL/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 111:src/HAL/tim.c ****   {
 112:src/HAL/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 113:src/HAL/tim.c ****   }
 114:src/HAL/tim.c **** 
 115:src/HAL/tim.c ****   HAL_TIM_MspPostInit(&htim1);
 116:src/HAL/tim.c **** 
 117:src/HAL/tim.c **** }
 118:src/HAL/tim.c **** /* TIM2 init function */
 119:src/HAL/tim.c **** void MX_TIM2_Init(void)
 120:src/HAL/tim.c **** {
 121:src/HAL/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 122:src/HAL/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig;
 123:src/HAL/tim.c **** 
 124:src/HAL/tim.c ****   htim2.Instance = TIM2;
 125:src/HAL/tim.c ****   htim2.Init.Prescaler = 72;
 126:src/HAL/tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 127:src/HAL/tim.c ****   htim2.Init.Period = 999;
 128:src/HAL/tim.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 129:src/HAL/tim.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 130:src/HAL/tim.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 131:src/HAL/tim.c ****   {
 132:src/HAL/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 133:src/HAL/tim.c ****   }
 134:src/HAL/tim.c **** 
 135:src/HAL/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 136:src/HAL/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 137:src/HAL/tim.c ****   {
 138:src/HAL/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 139:src/HAL/tim.c ****   }
 140:src/HAL/tim.c **** 
 141:src/HAL/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 142:src/HAL/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 143:src/HAL/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 144:src/HAL/tim.c ****   {
 145:src/HAL/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 146:src/HAL/tim.c ****   }
 147:src/HAL/tim.c **** 
ARM GAS  /tmp/ccfhO7pz.s 			page 4


 148:src/HAL/tim.c **** }
 149:src/HAL/tim.c **** 
 150:src/HAL/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 151:src/HAL/tim.c **** {
 152:src/HAL/tim.c **** 
 153:src/HAL/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 154:src/HAL/tim.c ****   {
 155:src/HAL/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 156:src/HAL/tim.c **** 
 157:src/HAL/tim.c ****   /* USER CODE END TIM1_MspInit 0 */
 158:src/HAL/tim.c ****     /* TIM1 clock enable */
 159:src/HAL/tim.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
 160:src/HAL/tim.c ****   
 161:src/HAL/tim.c ****     /* TIM1 DMA Init */
 162:src/HAL/tim.c ****     /* TIM1_CH1 Init */
 163:src/HAL/tim.c ****     hdma_tim1_ch1.Instance = DMA1_Channel2;
 164:src/HAL/tim.c ****     hdma_tim1_ch1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 165:src/HAL/tim.c ****     hdma_tim1_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 166:src/HAL/tim.c ****     hdma_tim1_ch1.Init.MemInc = DMA_MINC_ENABLE;
 167:src/HAL/tim.c ****     hdma_tim1_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 168:src/HAL/tim.c ****     hdma_tim1_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 169:src/HAL/tim.c ****     hdma_tim1_ch1.Init.Mode = DMA_CIRCULAR;
 170:src/HAL/tim.c ****     hdma_tim1_ch1.Init.Priority = DMA_PRIORITY_LOW;
 171:src/HAL/tim.c ****     if (HAL_DMA_Init(&hdma_tim1_ch1) != HAL_OK)
 172:src/HAL/tim.c ****     {
 173:src/HAL/tim.c ****       _Error_Handler(__FILE__, __LINE__);
 174:src/HAL/tim.c ****     }
 175:src/HAL/tim.c **** 
 176:src/HAL/tim.c ****     __HAL_LINKDMA(tim_baseHandle,hdma[TIM_DMA_ID_CC1],hdma_tim1_ch1);
 177:src/HAL/tim.c **** 
 178:src/HAL/tim.c ****     /* TIM1 interrupt Init */
 179:src/HAL/tim.c ****     HAL_NVIC_SetPriority(TIM1_UP_IRQn, 0, 0);
 180:src/HAL/tim.c ****     HAL_NVIC_EnableIRQ(TIM1_UP_IRQn);
 181:src/HAL/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 182:src/HAL/tim.c **** 
 183:src/HAL/tim.c ****   /* USER CODE END TIM1_MspInit 1 */
 184:src/HAL/tim.c ****   }
 185:src/HAL/tim.c ****   else if(tim_baseHandle->Instance==TIM2)
 186:src/HAL/tim.c ****   {
 187:src/HAL/tim.c ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 188:src/HAL/tim.c **** 
 189:src/HAL/tim.c ****   /* USER CODE END TIM2_MspInit 0 */
 190:src/HAL/tim.c ****     /* TIM2 clock enable */
 191:src/HAL/tim.c ****     __HAL_RCC_TIM2_CLK_ENABLE();
 192:src/HAL/tim.c **** 
 193:src/HAL/tim.c ****     /* TIM2 interrupt Init */
 194:src/HAL/tim.c ****     HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 195:src/HAL/tim.c ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 196:src/HAL/tim.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 197:src/HAL/tim.c **** 
 198:src/HAL/tim.c ****   /* USER CODE END TIM2_MspInit 1 */
 199:src/HAL/tim.c ****   }
 200:src/HAL/tim.c **** }
 201:src/HAL/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
  26              		.loc 1 201 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccfhO7pz.s 			page 5


  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
 202:src/HAL/tim.c **** {
 203:src/HAL/tim.c **** 
 204:src/HAL/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 205:src/HAL/tim.c ****   if(timHandle->Instance==TIM1)
 206:src/HAL/tim.c ****   {
 207:src/HAL/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 208:src/HAL/tim.c **** 
 209:src/HAL/tim.c ****   /* USER CODE END TIM1_MspPostInit 0 */
 210:src/HAL/tim.c ****   
 211:src/HAL/tim.c ****     /**TIM1 GPIO Configuration    
 212:src/HAL/tim.c ****     PA8     ------> TIM1_CH1 
 213:src/HAL/tim.c ****     */
 214:src/HAL/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_8;
 215:src/HAL/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  31              		.loc 1 215 0
  32 0000 0223     		movs	r3, #2
 214:src/HAL/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  33              		.loc 1 214 0
  34 0002 4FF48072 		mov	r2, #256
 201:src/HAL/tim.c **** {
  35              		.loc 1 201 0
  36 0006 00B5     		push	{lr}
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0008 85B0     		sub	sp, sp, #20
  40              		.cfi_def_cfa_offset 24
 216:src/HAL/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 217:src/HAL/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  41              		.loc 1 217 0
  42 000a 6946     		mov	r1, sp
  43 000c 0448     		ldr	r0, .L3
 215:src/HAL/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  44              		.loc 1 215 0
  45 000e 8DE80C00 		stm	sp, {r2, r3}
 216:src/HAL/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  46              		.loc 1 216 0
  47 0012 0393     		str	r3, [sp, #12]
  48              		.loc 1 217 0
  49 0014 FFF7FEFF 		bl	HAL_GPIO_Init
  50              	.LVL1:
 218:src/HAL/tim.c **** 
 219:src/HAL/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 220:src/HAL/tim.c **** 
 221:src/HAL/tim.c ****   /* USER CODE END TIM1_MspPostInit 1 */
 222:src/HAL/tim.c ****   }
 223:src/HAL/tim.c **** 
 224:src/HAL/tim.c **** }
  51              		.loc 1 224 0
  52 0018 05B0     		add	sp, sp, #20
  53              		.cfi_def_cfa_offset 4
  54              		@ sp needed
  55 001a 5DF804FB 		ldr	pc, [sp], #4
  56              	.L4:
  57 001e 00BF     		.align	2
  58              	.L3:
ARM GAS  /tmp/ccfhO7pz.s 			page 6


  59 0020 00080140 		.word	1073809408
  60              		.cfi_endproc
  61              	.LFE71:
  63              		.section	.text.MX_TIM1_Init,"ax",%progbits
  64              		.align	1
  65              		.p2align 2,,3
  66              		.global	MX_TIM1_Init
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu softvfp
  72              	MX_TIM1_Init:
  73              	.LFB64:
  55:src/HAL/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  74              		.loc 1 55 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 80
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 30B5     		push	{r4, r5, lr}
  79              		.cfi_def_cfa_offset 12
  80              		.cfi_offset 4, -12
  81              		.cfi_offset 5, -8
  82              		.cfi_offset 14, -4
  63:src/HAL/tim.c ****   htim1.Init.Period = 999;
  83              		.loc 1 63 0
  84 0002 0023     		movs	r3, #0
  62:src/HAL/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  85              		.loc 1 62 0
  86 0004 48F6A045 		movw	r5, #36000
  64:src/HAL/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  87              		.loc 1 64 0
  88 0008 40F2E732 		movw	r2, #999
  61:src/HAL/tim.c ****   htim1.Init.Prescaler = 36000;
  89              		.loc 1 61 0
  90 000c 374C     		ldr	r4, .L40
  91 000e 3849     		ldr	r1, .L40+4
  55:src/HAL/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  92              		.loc 1 55 0
  93 0010 95B0     		sub	sp, sp, #84
  94              		.cfi_def_cfa_offset 96
  68:src/HAL/tim.c ****   {
  95              		.loc 1 68 0
  96 0012 2046     		mov	r0, r4
  61:src/HAL/tim.c ****   htim1.Init.Prescaler = 36000;
  97              		.loc 1 61 0
  98 0014 84E82200 		stm	r4, {r1, r5}
  64:src/HAL/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  99              		.loc 1 64 0
 100 0018 E260     		str	r2, [r4, #12]
  63:src/HAL/tim.c ****   htim1.Init.Period = 999;
 101              		.loc 1 63 0
 102 001a A360     		str	r3, [r4, #8]
  65:src/HAL/tim.c ****   htim1.Init.RepetitionCounter = 0;
 103              		.loc 1 65 0
 104 001c 2361     		str	r3, [r4, #16]
  66:src/HAL/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 105              		.loc 1 66 0
ARM GAS  /tmp/ccfhO7pz.s 			page 7


 106 001e 6361     		str	r3, [r4, #20]
  67:src/HAL/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 107              		.loc 1 67 0
 108 0020 A361     		str	r3, [r4, #24]
  68:src/HAL/tim.c ****   {
 109              		.loc 1 68 0
 110 0022 FFF7FEFF 		bl	HAL_TIM_Base_Init
 111              	.LVL2:
 112 0026 0028     		cmp	r0, #0
 113 0028 3BD1     		bne	.L33
 114              	.L6:
  73:src/HAL/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 115              		.loc 1 73 0
 116 002a 4FF48053 		mov	r3, #4096
 117 002e 14A9     		add	r1, sp, #80
 118 0030 41F8483D 		str	r3, [r1, #-72]!
  74:src/HAL/tim.c ****   {
 119              		.loc 1 74 0
 120 0034 2D48     		ldr	r0, .L40
 121 0036 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 122              	.LVL3:
 123 003a 0028     		cmp	r0, #0
 124 003c 51D1     		bne	.L34
 125              	.L7:
  79:src/HAL/tim.c ****   {
 126              		.loc 1 79 0
 127 003e 2B48     		ldr	r0, .L40
 128 0040 FFF7FEFF 		bl	HAL_TIM_OC_Init
 129              	.LVL4:
 130 0044 0028     		cmp	r0, #0
 131 0046 47D1     		bne	.L35
 132              	.L8:
  84:src/HAL/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 133              		.loc 1 84 0
 134 0048 0023     		movs	r3, #0
  86:src/HAL/tim.c ****   {
 135              		.loc 1 86 0
 136 004a 6946     		mov	r1, sp
 137 004c 2748     		ldr	r0, .L40
  84:src/HAL/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 138              		.loc 1 84 0
 139 004e 0093     		str	r3, [sp]
  85:src/HAL/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 140              		.loc 1 85 0
 141 0050 0193     		str	r3, [sp, #4]
  86:src/HAL/tim.c ****   {
 142              		.loc 1 86 0
 143 0052 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 144              	.LVL5:
 145 0056 0028     		cmp	r0, #0
 146 0058 39D1     		bne	.L36
 147              	.L9:
  92:src/HAL/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 148              		.loc 1 92 0
 149 005a 0023     		movs	r3, #0
  91:src/HAL/tim.c ****   sConfigOC.Pulse = 0;
 150              		.loc 1 91 0
ARM GAS  /tmp/ccfhO7pz.s 			page 8


 151 005c 5025     		movs	r5, #80
  98:src/HAL/tim.c ****   {
 152              		.loc 1 98 0
 153 005e 1A46     		mov	r2, r3
 154 0060 06A9     		add	r1, sp, #24
 155 0062 2248     		ldr	r0, .L40
  92:src/HAL/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 156              		.loc 1 92 0
 157 0064 0793     		str	r3, [sp, #28]
  93:src/HAL/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 158              		.loc 1 93 0
 159 0066 0893     		str	r3, [sp, #32]
  94:src/HAL/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 160              		.loc 1 94 0
 161 0068 0993     		str	r3, [sp, #36]
  95:src/HAL/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 162              		.loc 1 95 0
 163 006a 0A93     		str	r3, [sp, #40]
  96:src/HAL/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 164              		.loc 1 96 0
 165 006c 0B93     		str	r3, [sp, #44]
  97:src/HAL/tim.c ****   if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 166              		.loc 1 97 0
 167 006e 0C93     		str	r3, [sp, #48]
  91:src/HAL/tim.c ****   sConfigOC.Pulse = 0;
 168              		.loc 1 91 0
 169 0070 0695     		str	r5, [sp, #24]
  98:src/HAL/tim.c ****   {
 170              		.loc 1 98 0
 171 0072 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 172              	.LVL6:
 173 0076 28BB     		cbnz	r0, .L37
 174              	.L10:
 103:src/HAL/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 175              		.loc 1 103 0
 176 0078 0023     		movs	r3, #0
 108:src/HAL/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 177              		.loc 1 108 0
 178 007a 4FF40052 		mov	r2, #8192
 110:src/HAL/tim.c ****   {
 179              		.loc 1 110 0
 180 007e 0DA9     		add	r1, sp, #52
 181 0080 1A48     		ldr	r0, .L40
 103:src/HAL/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 182              		.loc 1 103 0
 183 0082 0D93     		str	r3, [sp, #52]
 104:src/HAL/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 184              		.loc 1 104 0
 185 0084 0E93     		str	r3, [sp, #56]
 105:src/HAL/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 186              		.loc 1 105 0
 187 0086 0F93     		str	r3, [sp, #60]
 106:src/HAL/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 188              		.loc 1 106 0
 189 0088 1093     		str	r3, [sp, #64]
 107:src/HAL/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 190              		.loc 1 107 0
ARM GAS  /tmp/ccfhO7pz.s 			page 9


 191 008a 1193     		str	r3, [sp, #68]
 109:src/HAL/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 192              		.loc 1 109 0
 193 008c 1393     		str	r3, [sp, #76]
 108:src/HAL/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 194              		.loc 1 108 0
 195 008e 1292     		str	r2, [sp, #72]
 110:src/HAL/tim.c ****   {
 196              		.loc 1 110 0
 197 0090 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 198              	.LVL7:
 199 0094 50B9     		cbnz	r0, .L38
 200              	.LVL8:
 201              	.LBB6:
 202              	.LBB7:
 205:src/HAL/tim.c ****   {
 203              		.loc 1 205 0
 204 0096 2268     		ldr	r2, [r4]
 205 0098 154B     		ldr	r3, .L40+4
 206 009a 9A42     		cmp	r2, r3
 207 009c 0ED0     		beq	.L39
 208              	.L5:
 209              	.LBE7:
 210              	.LBE6:
 117:src/HAL/tim.c **** /* TIM2 init function */
 211              		.loc 1 117 0
 212 009e 15B0     		add	sp, sp, #84
 213              		.cfi_remember_state
 214              		.cfi_def_cfa_offset 12
 215              		@ sp needed
 216 00a0 30BD     		pop	{r4, r5, pc}
 217              	.LVL9:
 218              	.L33:
 219              		.cfi_restore_state
  70:src/HAL/tim.c ****   }
 220              		.loc 1 70 0
 221 00a2 4621     		movs	r1, #70
 222 00a4 1348     		ldr	r0, .L40+8
 223 00a6 FFF7FEFF 		bl	_Error_Handler
 224              	.LVL10:
 225 00aa BEE7     		b	.L6
 226              	.L38:
 112:src/HAL/tim.c ****   }
 227              		.loc 1 112 0
 228 00ac 7021     		movs	r1, #112
 229 00ae 1148     		ldr	r0, .L40+8
 230 00b0 FFF7FEFF 		bl	_Error_Handler
 231              	.LVL11:
 232              	.LBB9:
 233              	.LBB8:
 205:src/HAL/tim.c ****   {
 234              		.loc 1 205 0
 235 00b4 2268     		ldr	r2, [r4]
 236 00b6 0E4B     		ldr	r3, .L40+4
 237 00b8 9A42     		cmp	r2, r3
 238 00ba F0D1     		bne	.L5
 239              	.L39:
ARM GAS  /tmp/ccfhO7pz.s 			page 10


 240 00bc FFF7FEFF 		bl	HAL_TIM_MspPostInit.part.0
 241              	.LVL12:
 242              	.LBE8:
 243              	.LBE9:
 117:src/HAL/tim.c **** /* TIM2 init function */
 244              		.loc 1 117 0
 245 00c0 15B0     		add	sp, sp, #84
 246              		.cfi_remember_state
 247              		.cfi_def_cfa_offset 12
 248              		@ sp needed
 249 00c2 30BD     		pop	{r4, r5, pc}
 250              	.L37:
 251              		.cfi_restore_state
 100:src/HAL/tim.c ****   }
 252              		.loc 1 100 0
 253 00c4 6421     		movs	r1, #100
 254 00c6 0B48     		ldr	r0, .L40+8
 255 00c8 FFF7FEFF 		bl	_Error_Handler
 256              	.LVL13:
 257 00cc D4E7     		b	.L10
 258              	.L36:
  88:src/HAL/tim.c ****   }
 259              		.loc 1 88 0
 260 00ce 5821     		movs	r1, #88
 261 00d0 0848     		ldr	r0, .L40+8
 262 00d2 FFF7FEFF 		bl	_Error_Handler
 263              	.LVL14:
 264 00d6 C0E7     		b	.L9
 265              	.L35:
  81:src/HAL/tim.c ****   }
 266              		.loc 1 81 0
 267 00d8 5121     		movs	r1, #81
 268 00da 0648     		ldr	r0, .L40+8
 269 00dc FFF7FEFF 		bl	_Error_Handler
 270              	.LVL15:
 271 00e0 B2E7     		b	.L8
 272              	.L34:
  76:src/HAL/tim.c ****   }
 273              		.loc 1 76 0
 274 00e2 4C21     		movs	r1, #76
 275 00e4 0348     		ldr	r0, .L40+8
 276 00e6 FFF7FEFF 		bl	_Error_Handler
 277              	.LVL16:
 278 00ea A8E7     		b	.L7
 279              	.L41:
 280              		.align	2
 281              	.L40:
 282 00ec 00000000 		.word	.LANCHOR0
 283 00f0 002C0140 		.word	1073818624
 284 00f4 00000000 		.word	.LC0
 285              		.cfi_endproc
 286              	.LFE64:
 288              		.section	.text.MX_TIM2_Init,"ax",%progbits
 289              		.align	1
 290              		.p2align 2,,3
 291              		.global	MX_TIM2_Init
 292              		.syntax unified
ARM GAS  /tmp/ccfhO7pz.s 			page 11


 293              		.thumb
 294              		.thumb_func
 295              		.fpu softvfp
 297              	MX_TIM2_Init:
 298              	.LFB65:
 120:src/HAL/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 299              		.loc 1 120 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 24
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303 0000 30B5     		push	{r4, r5, lr}
 304              		.cfi_def_cfa_offset 12
 305              		.cfi_offset 4, -12
 306              		.cfi_offset 5, -8
 307              		.cfi_offset 14, -4
 126:src/HAL/tim.c ****   htim2.Init.Period = 999;
 308              		.loc 1 126 0
 309 0002 0022     		movs	r2, #0
 124:src/HAL/tim.c ****   htim2.Init.Prescaler = 72;
 310              		.loc 1 124 0
 311 0004 4FF08045 		mov	r5, #1073741824
 125:src/HAL/tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 312              		.loc 1 125 0
 313 0008 4824     		movs	r4, #72
 127:src/HAL/tim.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 314              		.loc 1 127 0
 315 000a 40F2E731 		movw	r1, #999
 124:src/HAL/tim.c ****   htim2.Init.Prescaler = 72;
 316              		.loc 1 124 0
 317 000e 164B     		ldr	r3, .L58
 120:src/HAL/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 318              		.loc 1 120 0
 319 0010 87B0     		sub	sp, sp, #28
 320              		.cfi_def_cfa_offset 40
 130:src/HAL/tim.c ****   {
 321              		.loc 1 130 0
 322 0012 1846     		mov	r0, r3
 124:src/HAL/tim.c ****   htim2.Init.Prescaler = 72;
 323              		.loc 1 124 0
 324 0014 1D60     		str	r5, [r3]
 125:src/HAL/tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 325              		.loc 1 125 0
 326 0016 5C60     		str	r4, [r3, #4]
 127:src/HAL/tim.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 327              		.loc 1 127 0
 328 0018 D960     		str	r1, [r3, #12]
 126:src/HAL/tim.c ****   htim2.Init.Period = 999;
 329              		.loc 1 126 0
 330 001a 9A60     		str	r2, [r3, #8]
 128:src/HAL/tim.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 331              		.loc 1 128 0
 332 001c 1A61     		str	r2, [r3, #16]
 129:src/HAL/tim.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 333              		.loc 1 129 0
 334 001e 9A61     		str	r2, [r3, #24]
 130:src/HAL/tim.c ****   {
 335              		.loc 1 130 0
ARM GAS  /tmp/ccfhO7pz.s 			page 12


 336 0020 FFF7FEFF 		bl	HAL_TIM_Base_Init
 337              	.LVL17:
 338 0024 D8B9     		cbnz	r0, .L56
 339              	.L43:
 135:src/HAL/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 340              		.loc 1 135 0
 341 0026 4FF48053 		mov	r3, #4096
 342 002a 06A9     		add	r1, sp, #24
 343 002c 41F8103D 		str	r3, [r1, #-16]!
 136:src/HAL/tim.c ****   {
 344              		.loc 1 136 0
 345 0030 0D48     		ldr	r0, .L58
 346 0032 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 347              	.LVL18:
 348 0036 68B9     		cbnz	r0, .L57
 349              	.L44:
 141:src/HAL/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 350              		.loc 1 141 0
 351 0038 0023     		movs	r3, #0
 143:src/HAL/tim.c ****   {
 352              		.loc 1 143 0
 353 003a 6946     		mov	r1, sp
 354 003c 0A48     		ldr	r0, .L58
 141:src/HAL/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 355              		.loc 1 141 0
 356 003e 0093     		str	r3, [sp]
 142:src/HAL/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 357              		.loc 1 142 0
 358 0040 0193     		str	r3, [sp, #4]
 143:src/HAL/tim.c ****   {
 359              		.loc 1 143 0
 360 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 361              	.LVL19:
 362 0046 18B1     		cbz	r0, .L42
 145:src/HAL/tim.c ****   }
 363              		.loc 1 145 0
 364 0048 9121     		movs	r1, #145
 365 004a 0848     		ldr	r0, .L58+4
 366 004c FFF7FEFF 		bl	_Error_Handler
 367              	.LVL20:
 368              	.L42:
 148:src/HAL/tim.c **** 
 369              		.loc 1 148 0
 370 0050 07B0     		add	sp, sp, #28
 371              		.cfi_remember_state
 372              		.cfi_def_cfa_offset 12
 373              		@ sp needed
 374 0052 30BD     		pop	{r4, r5, pc}
 375              	.L57:
 376              		.cfi_restore_state
 138:src/HAL/tim.c ****   }
 377              		.loc 1 138 0
 378 0054 8A21     		movs	r1, #138
 379 0056 0548     		ldr	r0, .L58+4
 380 0058 FFF7FEFF 		bl	_Error_Handler
 381              	.LVL21:
 382 005c ECE7     		b	.L44
ARM GAS  /tmp/ccfhO7pz.s 			page 13


 383              	.L56:
 132:src/HAL/tim.c ****   }
 384              		.loc 1 132 0
 385 005e 8421     		movs	r1, #132
 386 0060 0248     		ldr	r0, .L58+4
 387 0062 FFF7FEFF 		bl	_Error_Handler
 388              	.LVL22:
 389 0066 DEE7     		b	.L43
 390              	.L59:
 391              		.align	2
 392              	.L58:
 393 0068 00000000 		.word	.LANCHOR1
 394 006c 00000000 		.word	.LC0
 395              		.cfi_endproc
 396              	.LFE65:
 398              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 399              		.align	1
 400              		.p2align 2,,3
 401              		.global	HAL_TIM_Base_MspInit
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu softvfp
 407              	HAL_TIM_Base_MspInit:
 408              	.LFB66:
 151:src/HAL/tim.c **** 
 409              		.loc 1 151 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 8
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              	.LVL23:
 414 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 415              		.cfi_def_cfa_offset 20
 416              		.cfi_offset 4, -20
 417              		.cfi_offset 5, -16
 418              		.cfi_offset 6, -12
 419              		.cfi_offset 7, -8
 420              		.cfi_offset 14, -4
 153:src/HAL/tim.c ****   {
 421              		.loc 1 153 0
 422 0002 294A     		ldr	r2, .L71
 423 0004 0368     		ldr	r3, [r0]
 151:src/HAL/tim.c **** 
 424              		.loc 1 151 0
 425 0006 83B0     		sub	sp, sp, #12
 426              		.cfi_def_cfa_offset 32
 153:src/HAL/tim.c ****   {
 427              		.loc 1 153 0
 428 0008 9342     		cmp	r3, r2
 429 000a 18D0     		beq	.L68
 185:src/HAL/tim.c ****   {
 430              		.loc 1 185 0
 431 000c B3F1804F 		cmp	r3, #1073741824
 432 0010 01D0     		beq	.L69
 433              	.LVL24:
 434              	.L60:
 200:src/HAL/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
ARM GAS  /tmp/ccfhO7pz.s 			page 14


 435              		.loc 1 200 0
 436 0012 03B0     		add	sp, sp, #12
 437              		.cfi_remember_state
 438              		.cfi_def_cfa_offset 20
 439              		@ sp needed
 440 0014 F0BD     		pop	{r4, r5, r6, r7, pc}
 441              	.LVL25:
 442              	.L69:
 443              		.cfi_restore_state
 194:src/HAL/tim.c ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 444              		.loc 1 194 0
 445 0016 0022     		movs	r2, #0
 446              	.LBB10:
 191:src/HAL/tim.c **** 
 447              		.loc 1 191 0
 448 0018 03F50433 		add	r3, r3, #135168
 449 001c DC69     		ldr	r4, [r3, #28]
 450              	.LBE10:
 194:src/HAL/tim.c ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 451              		.loc 1 194 0
 452 001e 1146     		mov	r1, r2
 453              	.LBB11:
 191:src/HAL/tim.c **** 
 454              		.loc 1 191 0
 455 0020 44F00104 		orr	r4, r4, #1
 456 0024 DC61     		str	r4, [r3, #28]
 457 0026 DB69     		ldr	r3, [r3, #28]
 458              	.LBE11:
 194:src/HAL/tim.c ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 459              		.loc 1 194 0
 460 0028 1C20     		movs	r0, #28
 461              	.LVL26:
 462              	.LBB12:
 191:src/HAL/tim.c **** 
 463              		.loc 1 191 0
 464 002a 03F00103 		and	r3, r3, #1
 465 002e 0193     		str	r3, [sp, #4]
 466 0030 019B     		ldr	r3, [sp, #4]
 467              	.LBE12:
 194:src/HAL/tim.c ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 468              		.loc 1 194 0
 469 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 470              	.LVL27:
 195:src/HAL/tim.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 471              		.loc 1 195 0
 472 0036 1C20     		movs	r0, #28
 473 0038 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 474              	.LVL28:
 200:src/HAL/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 475              		.loc 1 200 0
 476 003c E9E7     		b	.L60
 477              	.LVL29:
 478              	.L68:
 164:src/HAL/tim.c ****     hdma_tim1_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 479              		.loc 1 164 0
 480 003e 0023     		movs	r3, #0
 166:src/HAL/tim.c ****     hdma_tim1_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
ARM GAS  /tmp/ccfhO7pz.s 			page 15


 481              		.loc 1 166 0
 482 0040 4FF0800C 		mov	ip, #128
 167:src/HAL/tim.c ****     hdma_tim1_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 483              		.loc 1 167 0
 484 0044 4FF4807E 		mov	lr, #256
 168:src/HAL/tim.c ****     hdma_tim1_ch1.Init.Mode = DMA_CIRCULAR;
 485              		.loc 1 168 0
 486 0048 4FF48067 		mov	r7, #1024
 169:src/HAL/tim.c ****     hdma_tim1_ch1.Init.Priority = DMA_PRIORITY_LOW;
 487              		.loc 1 169 0
 488 004c 2026     		movs	r6, #32
 489              	.LBB13:
 159:src/HAL/tim.c ****   
 490              		.loc 1 159 0
 491 004e 02F56442 		add	r2, r2, #58368
 492 0052 9169     		ldr	r1, [r2, #24]
 493              	.LBE13:
 163:src/HAL/tim.c ****     hdma_tim1_ch1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 494              		.loc 1 163 0
 495 0054 154D     		ldr	r5, .L71+4
 496              	.LBB14:
 159:src/HAL/tim.c ****   
 497              		.loc 1 159 0
 498 0056 41F40061 		orr	r1, r1, #2048
 499 005a 9161     		str	r1, [r2, #24]
 500 005c 9269     		ldr	r2, [r2, #24]
 501 005e 0446     		mov	r4, r0
 502 0060 02F40062 		and	r2, r2, #2048
 503 0064 0092     		str	r2, [sp]
 504              	.LBE14:
 163:src/HAL/tim.c ****     hdma_tim1_ch1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 505              		.loc 1 163 0
 506 0066 124A     		ldr	r2, .L71+8
 171:src/HAL/tim.c ****     {
 507              		.loc 1 171 0
 508 0068 2846     		mov	r0, r5
 509              	.LVL30:
 510              	.LBB15:
 159:src/HAL/tim.c ****   
 511              		.loc 1 159 0
 512 006a 0099     		ldr	r1, [sp]
 513              	.LBE15:
 164:src/HAL/tim.c ****     hdma_tim1_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 514              		.loc 1 164 0
 515 006c 6B60     		str	r3, [r5, #4]
 165:src/HAL/tim.c ****     hdma_tim1_ch1.Init.MemInc = DMA_MINC_ENABLE;
 516              		.loc 1 165 0
 517 006e AB60     		str	r3, [r5, #8]
 170:src/HAL/tim.c ****     if (HAL_DMA_Init(&hdma_tim1_ch1) != HAL_OK)
 518              		.loc 1 170 0
 519 0070 EB61     		str	r3, [r5, #28]
 163:src/HAL/tim.c ****     hdma_tim1_ch1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 520              		.loc 1 163 0
 521 0072 2A60     		str	r2, [r5]
 166:src/HAL/tim.c ****     hdma_tim1_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 522              		.loc 1 166 0
 523 0074 C5F80CC0 		str	ip, [r5, #12]
ARM GAS  /tmp/ccfhO7pz.s 			page 16


 167:src/HAL/tim.c ****     hdma_tim1_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 524              		.loc 1 167 0
 525 0078 C5F810E0 		str	lr, [r5, #16]
 168:src/HAL/tim.c ****     hdma_tim1_ch1.Init.Mode = DMA_CIRCULAR;
 526              		.loc 1 168 0
 527 007c 6F61     		str	r7, [r5, #20]
 169:src/HAL/tim.c ****     hdma_tim1_ch1.Init.Priority = DMA_PRIORITY_LOW;
 528              		.loc 1 169 0
 529 007e AE61     		str	r6, [r5, #24]
 171:src/HAL/tim.c ****     {
 530              		.loc 1 171 0
 531 0080 FFF7FEFF 		bl	HAL_DMA_Init
 532              	.LVL31:
 533 0084 50B9     		cbnz	r0, .L70
 534              	.L62:
 179:src/HAL/tim.c ****     HAL_NVIC_EnableIRQ(TIM1_UP_IRQn);
 535              		.loc 1 179 0
 536 0086 0022     		movs	r2, #0
 176:src/HAL/tim.c **** 
 537              		.loc 1 176 0
 538 0088 6562     		str	r5, [r4, #36]
 179:src/HAL/tim.c ****     HAL_NVIC_EnableIRQ(TIM1_UP_IRQn);
 539              		.loc 1 179 0
 540 008a 1146     		mov	r1, r2
 541 008c 1920     		movs	r0, #25
 176:src/HAL/tim.c **** 
 542              		.loc 1 176 0
 543 008e 6C62     		str	r4, [r5, #36]
 179:src/HAL/tim.c ****     HAL_NVIC_EnableIRQ(TIM1_UP_IRQn);
 544              		.loc 1 179 0
 545 0090 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 546              	.LVL32:
 180:src/HAL/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 547              		.loc 1 180 0
 548 0094 1920     		movs	r0, #25
 549 0096 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 550              	.LVL33:
 551 009a BAE7     		b	.L60
 552              	.L70:
 173:src/HAL/tim.c ****     }
 553              		.loc 1 173 0
 554 009c AD21     		movs	r1, #173
 555 009e 0548     		ldr	r0, .L71+12
 556 00a0 FFF7FEFF 		bl	_Error_Handler
 557              	.LVL34:
 558 00a4 EFE7     		b	.L62
 559              	.L72:
 560 00a6 00BF     		.align	2
 561              	.L71:
 562 00a8 002C0140 		.word	1073818624
 563 00ac 00000000 		.word	.LANCHOR2
 564 00b0 1C000240 		.word	1073872924
 565 00b4 00000000 		.word	.LC0
 566              		.cfi_endproc
 567              	.LFE66:
 569              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 570              		.align	1
ARM GAS  /tmp/ccfhO7pz.s 			page 17


 571              		.p2align 2,,3
 572              		.global	HAL_TIM_MspPostInit
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 576              		.fpu softvfp
 578              	HAL_TIM_MspPostInit:
 579              	.LFB67:
 202:src/HAL/tim.c **** 
 580              		.loc 1 202 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 585              	.LVL35:
 205:src/HAL/tim.c ****   {
 586              		.loc 1 205 0
 587 0000 0268     		ldr	r2, [r0]
 588 0002 034B     		ldr	r3, .L76
 589 0004 9A42     		cmp	r2, r3
 590 0006 00D0     		beq	.L75
 591 0008 7047     		bx	lr
 592              	.L75:
 593 000a FFF7FEBF 		b	HAL_TIM_MspPostInit.part.0
 594              	.LVL36:
 595              	.L77:
 596 000e 00BF     		.align	2
 597              	.L76:
 598 0010 002C0140 		.word	1073818624
 599              		.cfi_endproc
 600              	.LFE67:
 602              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 603              		.align	1
 604              		.p2align 2,,3
 605              		.global	HAL_TIM_Base_MspDeInit
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 609              		.fpu softvfp
 611              	HAL_TIM_Base_MspDeInit:
 612              	.LFB68:
 225:src/HAL/tim.c **** 
 226:src/HAL/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 227:src/HAL/tim.c **** {
 613              		.loc 1 227 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              	.LVL37:
 618 0000 08B5     		push	{r3, lr}
 619              		.cfi_def_cfa_offset 8
 620              		.cfi_offset 3, -8
 621              		.cfi_offset 14, -4
 228:src/HAL/tim.c **** 
 229:src/HAL/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 622              		.loc 1 229 0
 623 0002 104A     		ldr	r2, .L84
ARM GAS  /tmp/ccfhO7pz.s 			page 18


 624 0004 0368     		ldr	r3, [r0]
 625 0006 9342     		cmp	r3, r2
 626 0008 0DD0     		beq	.L82
 230:src/HAL/tim.c ****   {
 231:src/HAL/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 232:src/HAL/tim.c **** 
 233:src/HAL/tim.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 234:src/HAL/tim.c ****     /* Peripheral clock disable */
 235:src/HAL/tim.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 236:src/HAL/tim.c **** 
 237:src/HAL/tim.c ****     /* TIM1 DMA DeInit */
 238:src/HAL/tim.c ****     HAL_DMA_DeInit(tim_baseHandle->hdma[TIM_DMA_ID_CC1]);
 239:src/HAL/tim.c **** 
 240:src/HAL/tim.c ****     /* TIM1 interrupt Deinit */
 241:src/HAL/tim.c ****     HAL_NVIC_DisableIRQ(TIM1_UP_IRQn);
 242:src/HAL/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 243:src/HAL/tim.c **** 
 244:src/HAL/tim.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 245:src/HAL/tim.c ****   }
 246:src/HAL/tim.c ****   else if(tim_baseHandle->Instance==TIM2)
 627              		.loc 1 246 0
 628 000a B3F1804F 		cmp	r3, #1073741824
 629 000e 00D0     		beq	.L83
 630 0010 08BD     		pop	{r3, pc}
 631              	.L83:
 247:src/HAL/tim.c ****   {
 248:src/HAL/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 249:src/HAL/tim.c **** 
 250:src/HAL/tim.c ****   /* USER CODE END TIM2_MspDeInit 0 */
 251:src/HAL/tim.c ****     /* Peripheral clock disable */
 252:src/HAL/tim.c ****     __HAL_RCC_TIM2_CLK_DISABLE();
 632              		.loc 1 252 0
 633 0012 0D4A     		ldr	r2, .L84+4
 253:src/HAL/tim.c **** 
 254:src/HAL/tim.c ****     /* TIM2 interrupt Deinit */
 255:src/HAL/tim.c ****     HAL_NVIC_DisableIRQ(TIM2_IRQn);
 634              		.loc 1 255 0
 635 0014 1C20     		movs	r0, #28
 636              	.LVL38:
 252:src/HAL/tim.c **** 
 637              		.loc 1 252 0
 638 0016 D369     		ldr	r3, [r2, #28]
 639 0018 23F00103 		bic	r3, r3, #1
 640 001c D361     		str	r3, [r2, #28]
 256:src/HAL/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 257:src/HAL/tim.c **** 
 258:src/HAL/tim.c ****   /* USER CODE END TIM2_MspDeInit 1 */
 259:src/HAL/tim.c ****   }
 260:src/HAL/tim.c **** } 
 641              		.loc 1 260 0
 642 001e BDE80840 		pop	{r3, lr}
 643              		.cfi_remember_state
 644              		.cfi_restore 14
 645              		.cfi_restore 3
 646              		.cfi_def_cfa_offset 0
 255:src/HAL/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 647              		.loc 1 255 0
ARM GAS  /tmp/ccfhO7pz.s 			page 19


 648 0022 FFF7FEBF 		b	HAL_NVIC_DisableIRQ
 649              	.LVL39:
 650              	.L82:
 651              		.cfi_restore_state
 235:src/HAL/tim.c **** 
 652              		.loc 1 235 0
 653 0026 02F56442 		add	r2, r2, #58368
 654 002a 9369     		ldr	r3, [r2, #24]
 238:src/HAL/tim.c **** 
 655              		.loc 1 238 0
 656 002c 406A     		ldr	r0, [r0, #36]
 657              	.LVL40:
 235:src/HAL/tim.c **** 
 658              		.loc 1 235 0
 659 002e 23F40063 		bic	r3, r3, #2048
 660 0032 9361     		str	r3, [r2, #24]
 238:src/HAL/tim.c **** 
 661              		.loc 1 238 0
 662 0034 FFF7FEFF 		bl	HAL_DMA_DeInit
 663              	.LVL41:
 664              		.loc 1 260 0
 665 0038 BDE80840 		pop	{r3, lr}
 666              		.cfi_restore 14
 667              		.cfi_restore 3
 668              		.cfi_def_cfa_offset 0
 241:src/HAL/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 669              		.loc 1 241 0
 670 003c 1920     		movs	r0, #25
 671 003e FFF7FEBF 		b	HAL_NVIC_DisableIRQ
 672              	.LVL42:
 673              	.L85:
 674 0042 00BF     		.align	2
 675              	.L84:
 676 0044 002C0140 		.word	1073818624
 677 0048 00100240 		.word	1073876992
 678              		.cfi_endproc
 679              	.LFE68:
 681              		.section	.text.MX_TIM1_Init_Custom,"ax",%progbits
 682              		.align	1
 683              		.p2align 2,,3
 684              		.global	MX_TIM1_Init_Custom
 685              		.syntax unified
 686              		.thumb
 687              		.thumb_func
 688              		.fpu softvfp
 690              	MX_TIM1_Init_Custom:
 691              	.LFB69:
 261:src/HAL/tim.c **** 
 262:src/HAL/tim.c **** /* USER CODE BEGIN 1 */
 263:src/HAL/tim.c **** 
 264:src/HAL/tim.c **** void MX_TIM1_Init_Custom(const uint16_t prescaler, const uint16_t period)
 265:src/HAL/tim.c **** {
 692              		.loc 1 265 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 80
 695              		@ frame_needed = 0, uses_anonymous_args = 0
 696              	.LVL43:
ARM GAS  /tmp/ccfhO7pz.s 			page 20


 266:src/HAL/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 267:src/HAL/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig;
 268:src/HAL/tim.c ****   TIM_OC_InitTypeDef sConfigOC;
 269:src/HAL/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 270:src/HAL/tim.c **** 
 271:src/HAL/tim.c ****   htim1.Instance = TIM1;
 272:src/HAL/tim.c ****   htim1.Init.Prescaler = prescaler;
 273:src/HAL/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 697              		.loc 1 273 0
 698 0000 0023     		movs	r3, #0
 265:src/HAL/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 699              		.loc 1 265 0
 700 0002 70B5     		push	{r4, r5, r6, lr}
 701              		.cfi_def_cfa_offset 16
 702              		.cfi_offset 4, -16
 703              		.cfi_offset 5, -12
 704              		.cfi_offset 6, -8
 705              		.cfi_offset 14, -4
 271:src/HAL/tim.c ****   htim1.Init.Prescaler = prescaler;
 706              		.loc 1 271 0
 707 0004 3B4C     		ldr	r4, .L120
 708 0006 3C4A     		ldr	r2, .L120+4
 265:src/HAL/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 709              		.loc 1 265 0
 710 0008 94B0     		sub	sp, sp, #80
 711              		.cfi_def_cfa_offset 96
 272:src/HAL/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 712              		.loc 1 272 0
 713 000a 6060     		str	r0, [r4, #4]
 274:src/HAL/tim.c ****   htim1.Init.Period = period;
 275:src/HAL/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 276:src/HAL/tim.c ****   htim1.Init.RepetitionCounter = 0;
 277:src/HAL/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 278:src/HAL/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 714              		.loc 1 278 0
 715 000c 2046     		mov	r0, r4
 716              	.LVL44:
 274:src/HAL/tim.c ****   htim1.Init.Period = period;
 717              		.loc 1 274 0
 718 000e E160     		str	r1, [r4, #12]
 271:src/HAL/tim.c ****   htim1.Init.Prescaler = prescaler;
 719              		.loc 1 271 0
 720 0010 2260     		str	r2, [r4]
 273:src/HAL/tim.c ****   htim1.Init.Period = period;
 721              		.loc 1 273 0
 722 0012 A360     		str	r3, [r4, #8]
 275:src/HAL/tim.c ****   htim1.Init.RepetitionCounter = 0;
 723              		.loc 1 275 0
 724 0014 2361     		str	r3, [r4, #16]
 276:src/HAL/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 725              		.loc 1 276 0
 726 0016 6361     		str	r3, [r4, #20]
 277:src/HAL/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 727              		.loc 1 277 0
 728 0018 A361     		str	r3, [r4, #24]
 729              		.loc 1 278 0
 730 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
ARM GAS  /tmp/ccfhO7pz.s 			page 21


 731              	.LVL45:
 732 001e 0028     		cmp	r0, #0
 733 0020 3CD1     		bne	.L113
 734              	.L87:
 279:src/HAL/tim.c ****   {
 280:src/HAL/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 281:src/HAL/tim.c ****   }
 282:src/HAL/tim.c **** 
 283:src/HAL/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 735              		.loc 1 283 0
 736 0022 4FF48053 		mov	r3, #4096
 737 0026 14A9     		add	r1, sp, #80
 738 0028 41F8483D 		str	r3, [r1, #-72]!
 284:src/HAL/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 739              		.loc 1 284 0
 740 002c 3148     		ldr	r0, .L120
 741 002e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 742              	.LVL46:
 743 0032 0028     		cmp	r0, #0
 744 0034 57D1     		bne	.L114
 745              	.L88:
 285:src/HAL/tim.c ****   {
 286:src/HAL/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 287:src/HAL/tim.c ****   }
 288:src/HAL/tim.c **** 
 289:src/HAL/tim.c ****   if (HAL_TIM_OC_Init(&htim1) != HAL_OK)
 746              		.loc 1 289 0
 747 0036 2F48     		ldr	r0, .L120
 748 0038 FFF7FEFF 		bl	HAL_TIM_OC_Init
 749              	.LVL47:
 750 003c 0028     		cmp	r0, #0
 751 003e 4CD1     		bne	.L115
 752              	.L89:
 290:src/HAL/tim.c ****   {
 291:src/HAL/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 292:src/HAL/tim.c ****   }
 293:src/HAL/tim.c **** 
 294:src/HAL/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 753              		.loc 1 294 0
 754 0040 0023     		movs	r3, #0
 295:src/HAL/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 296:src/HAL/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 755              		.loc 1 296 0
 756 0042 6946     		mov	r1, sp
 757 0044 2B48     		ldr	r0, .L120
 294:src/HAL/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 758              		.loc 1 294 0
 759 0046 0093     		str	r3, [sp]
 295:src/HAL/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 760              		.loc 1 295 0
 761 0048 0193     		str	r3, [sp, #4]
 762              		.loc 1 296 0
 763 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 764              	.LVL48:
 765 004e 0028     		cmp	r0, #0
 766 0050 3DD1     		bne	.L116
 767              	.L90:
ARM GAS  /tmp/ccfhO7pz.s 			page 22


 297:src/HAL/tim.c ****   {
 298:src/HAL/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 299:src/HAL/tim.c ****   }
 300:src/HAL/tim.c **** 
 301:src/HAL/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_TOGGLE;
 302:src/HAL/tim.c ****   sConfigOC.Pulse = 0;
 768              		.loc 1 302 0
 769 0052 0023     		movs	r3, #0
 301:src/HAL/tim.c ****   sConfigOC.Pulse = 0;
 770              		.loc 1 301 0
 771 0054 3026     		movs	r6, #48
 303:src/HAL/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 304:src/HAL/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_LOW;
 772              		.loc 1 304 0
 773 0056 0825     		movs	r5, #8
 305:src/HAL/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 306:src/HAL/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 307:src/HAL/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 308:src/HAL/tim.c ****   if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 774              		.loc 1 308 0
 775 0058 1A46     		mov	r2, r3
 776 005a 06A9     		add	r1, sp, #24
 777 005c 2548     		ldr	r0, .L120
 302:src/HAL/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 778              		.loc 1 302 0
 779 005e 0793     		str	r3, [sp, #28]
 303:src/HAL/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 780              		.loc 1 303 0
 781 0060 0893     		str	r3, [sp, #32]
 305:src/HAL/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 782              		.loc 1 305 0
 783 0062 0A93     		str	r3, [sp, #40]
 306:src/HAL/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 784              		.loc 1 306 0
 785 0064 0B93     		str	r3, [sp, #44]
 307:src/HAL/tim.c ****   if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 786              		.loc 1 307 0
 787 0066 0C93     		str	r3, [sp, #48]
 301:src/HAL/tim.c ****   sConfigOC.Pulse = 0;
 788              		.loc 1 301 0
 789 0068 0696     		str	r6, [sp, #24]
 304:src/HAL/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 790              		.loc 1 304 0
 791 006a 0995     		str	r5, [sp, #36]
 792              		.loc 1 308 0
 793 006c FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 794              	.LVL49:
 795 0070 38BB     		cbnz	r0, .L117
 796              	.L91:
 309:src/HAL/tim.c ****   {
 310:src/HAL/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 311:src/HAL/tim.c ****   }
 312:src/HAL/tim.c **** 
 313:src/HAL/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 797              		.loc 1 313 0
 798 0072 0023     		movs	r3, #0
 314:src/HAL/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
ARM GAS  /tmp/ccfhO7pz.s 			page 23


 315:src/HAL/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 316:src/HAL/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 317:src/HAL/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 318:src/HAL/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 799              		.loc 1 318 0
 800 0074 4FF40052 		mov	r2, #8192
 319:src/HAL/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 320:src/HAL/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 801              		.loc 1 320 0
 802 0078 0DA9     		add	r1, sp, #52
 803 007a 1E48     		ldr	r0, .L120
 313:src/HAL/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 804              		.loc 1 313 0
 805 007c 0D93     		str	r3, [sp, #52]
 314:src/HAL/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 806              		.loc 1 314 0
 807 007e 0E93     		str	r3, [sp, #56]
 315:src/HAL/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 808              		.loc 1 315 0
 809 0080 0F93     		str	r3, [sp, #60]
 316:src/HAL/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 810              		.loc 1 316 0
 811 0082 1093     		str	r3, [sp, #64]
 317:src/HAL/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 812              		.loc 1 317 0
 813 0084 1193     		str	r3, [sp, #68]
 319:src/HAL/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 814              		.loc 1 319 0
 815 0086 1393     		str	r3, [sp, #76]
 318:src/HAL/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 816              		.loc 1 318 0
 817 0088 1292     		str	r2, [sp, #72]
 818              		.loc 1 320 0
 819 008a FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 820              	.LVL50:
 821 008e 58B9     		cbnz	r0, .L118
 822              	.LVL51:
 823              	.LBB16:
 824              	.LBB17:
 205:src/HAL/tim.c ****   {
 825              		.loc 1 205 0
 826 0090 2268     		ldr	r2, [r4]
 827 0092 194B     		ldr	r3, .L120+4
 828 0094 9A42     		cmp	r2, r3
 829 0096 10D0     		beq	.L119
 830              	.L86:
 831              	.LBE17:
 832              	.LBE16:
 321:src/HAL/tim.c ****   {
 322:src/HAL/tim.c ****     _Error_Handler(__FILE__, __LINE__);
 323:src/HAL/tim.c ****   }
 324:src/HAL/tim.c **** 
 325:src/HAL/tim.c ****   HAL_TIM_MspPostInit(&htim1);
 326:src/HAL/tim.c **** 
 327:src/HAL/tim.c **** }
 833              		.loc 1 327 0
 834 0098 14B0     		add	sp, sp, #80
ARM GAS  /tmp/ccfhO7pz.s 			page 24


 835              		.cfi_remember_state
 836              		.cfi_def_cfa_offset 16
 837              		@ sp needed
 838 009a 70BD     		pop	{r4, r5, r6, pc}
 839              	.LVL52:
 840              	.L113:
 841              		.cfi_restore_state
 280:src/HAL/tim.c ****   }
 842              		.loc 1 280 0
 843 009c 4FF48C71 		mov	r1, #280
 844 00a0 1648     		ldr	r0, .L120+8
 845 00a2 FFF7FEFF 		bl	_Error_Handler
 846              	.LVL53:
 847 00a6 BCE7     		b	.L87
 848              	.L118:
 322:src/HAL/tim.c ****   }
 849              		.loc 1 322 0
 850 00a8 4FF4A171 		mov	r1, #322
 851 00ac 1348     		ldr	r0, .L120+8
 852 00ae FFF7FEFF 		bl	_Error_Handler
 853              	.LVL54:
 854              	.LBB19:
 855              	.LBB18:
 205:src/HAL/tim.c ****   {
 856              		.loc 1 205 0
 857 00b2 2268     		ldr	r2, [r4]
 858 00b4 104B     		ldr	r3, .L120+4
 859 00b6 9A42     		cmp	r2, r3
 860 00b8 EED1     		bne	.L86
 861              	.L119:
 862 00ba FFF7FEFF 		bl	HAL_TIM_MspPostInit.part.0
 863              	.LVL55:
 864              	.LBE18:
 865              	.LBE19:
 866              		.loc 1 327 0
 867 00be 14B0     		add	sp, sp, #80
 868              		.cfi_remember_state
 869              		.cfi_def_cfa_offset 16
 870              		@ sp needed
 871 00c0 70BD     		pop	{r4, r5, r6, pc}
 872              	.L117:
 873              		.cfi_restore_state
 310:src/HAL/tim.c ****   }
 874              		.loc 1 310 0
 875 00c2 4FF49B71 		mov	r1, #310
 876 00c6 0D48     		ldr	r0, .L120+8
 877 00c8 FFF7FEFF 		bl	_Error_Handler
 878              	.LVL56:
 879 00cc D1E7     		b	.L91
 880              	.L116:
 298:src/HAL/tim.c ****   }
 881              		.loc 1 298 0
 882 00ce 4FF49571 		mov	r1, #298
 883 00d2 0A48     		ldr	r0, .L120+8
 884 00d4 FFF7FEFF 		bl	_Error_Handler
 885              	.LVL57:
 886 00d8 BBE7     		b	.L90
ARM GAS  /tmp/ccfhO7pz.s 			page 25


 887              	.L115:
 291:src/HAL/tim.c ****   }
 888              		.loc 1 291 0
 889 00da 40F22311 		movw	r1, #291
 890 00de 0748     		ldr	r0, .L120+8
 891 00e0 FFF7FEFF 		bl	_Error_Handler
 892              	.LVL58:
 893 00e4 ACE7     		b	.L89
 894              	.L114:
 286:src/HAL/tim.c ****   }
 895              		.loc 1 286 0
 896 00e6 4FF48F71 		mov	r1, #286
 897 00ea 0448     		ldr	r0, .L120+8
 898 00ec FFF7FEFF 		bl	_Error_Handler
 899              	.LVL59:
 900 00f0 A1E7     		b	.L88
 901              	.L121:
 902 00f2 00BF     		.align	2
 903              	.L120:
 904 00f4 00000000 		.word	.LANCHOR0
 905 00f8 002C0140 		.word	1073818624
 906 00fc 00000000 		.word	.LC0
 907              		.cfi_endproc
 908              	.LFE69:
 910              		.section	.text.MX_TIM2_Init_Custom,"ax",%progbits
 911              		.align	1
 912              		.p2align 2,,3
 913              		.global	MX_TIM2_Init_Custom
 914              		.syntax unified
 915              		.thumb
 916              		.thumb_func
 917              		.fpu softvfp
 919              	MX_TIM2_Init_Custom:
 920              	.LFB70:
 328:src/HAL/tim.c **** 
 329:src/HAL/tim.c **** void MX_TIM2_Init_Custom(const uint16_t prescaler, const uint16_t period)
 330:src/HAL/tim.c **** {
 921              		.loc 1 330 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 24
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              	.LVL60:
 926 0000 10B5     		push	{r4, lr}
 927              		.cfi_def_cfa_offset 8
 928              		.cfi_offset 4, -8
 929              		.cfi_offset 14, -4
 331:src/HAL/tim.c ****     TIM_ClockConfigTypeDef sClockSourceConfig;
 332:src/HAL/tim.c ****     TIM_MasterConfigTypeDef sMasterConfig;
 333:src/HAL/tim.c **** 
 334:src/HAL/tim.c ****     htim2.Instance = TIM2;
 335:src/HAL/tim.c ****     htim2.Init.Prescaler = prescaler;
 336:src/HAL/tim.c ****     htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 930              		.loc 1 336 0
 931 0002 0022     		movs	r2, #0
 334:src/HAL/tim.c ****     htim2.Init.Prescaler = prescaler;
 932              		.loc 1 334 0
 933 0004 4FF08044 		mov	r4, #1073741824
ARM GAS  /tmp/ccfhO7pz.s 			page 26


 934 0008 174B     		ldr	r3, .L138
 330:src/HAL/tim.c ****     TIM_ClockConfigTypeDef sClockSourceConfig;
 935              		.loc 1 330 0
 936 000a 86B0     		sub	sp, sp, #24
 937              		.cfi_def_cfa_offset 32
 335:src/HAL/tim.c ****     htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 938              		.loc 1 335 0
 939 000c 5860     		str	r0, [r3, #4]
 337:src/HAL/tim.c ****     htim2.Init.Period = period;
 338:src/HAL/tim.c ****     htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 339:src/HAL/tim.c ****     htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 340:src/HAL/tim.c ****     if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 940              		.loc 1 340 0
 941 000e 1846     		mov	r0, r3
 942              	.LVL61:
 337:src/HAL/tim.c ****     htim2.Init.Period = period;
 943              		.loc 1 337 0
 944 0010 D960     		str	r1, [r3, #12]
 334:src/HAL/tim.c ****     htim2.Init.Prescaler = prescaler;
 945              		.loc 1 334 0
 946 0012 1C60     		str	r4, [r3]
 336:src/HAL/tim.c ****     htim2.Init.Period = period;
 947              		.loc 1 336 0
 948 0014 9A60     		str	r2, [r3, #8]
 338:src/HAL/tim.c ****     htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 949              		.loc 1 338 0
 950 0016 1A61     		str	r2, [r3, #16]
 339:src/HAL/tim.c ****     if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 951              		.loc 1 339 0
 952 0018 9A61     		str	r2, [r3, #24]
 953              		.loc 1 340 0
 954 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 955              	.LVL62:
 956 001e E8B9     		cbnz	r0, .L136
 957              	.L123:
 341:src/HAL/tim.c ****     {
 342:src/HAL/tim.c ****       _Error_Handler(__FILE__, __LINE__);
 343:src/HAL/tim.c ****     }
 344:src/HAL/tim.c **** 
 345:src/HAL/tim.c ****     sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 958              		.loc 1 345 0
 959 0020 4FF48053 		mov	r3, #4096
 960 0024 06A9     		add	r1, sp, #24
 961 0026 41F8103D 		str	r3, [r1, #-16]!
 346:src/HAL/tim.c ****     if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 962              		.loc 1 346 0
 963 002a 0F48     		ldr	r0, .L138
 964 002c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 965              	.LVL63:
 966 0030 70B9     		cbnz	r0, .L137
 967              	.L124:
 347:src/HAL/tim.c ****     {
 348:src/HAL/tim.c ****       _Error_Handler(__FILE__, __LINE__);
 349:src/HAL/tim.c ****     }
 350:src/HAL/tim.c **** 
 351:src/HAL/tim.c ****     sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 968              		.loc 1 351 0
ARM GAS  /tmp/ccfhO7pz.s 			page 27


 969 0032 0023     		movs	r3, #0
 352:src/HAL/tim.c ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 353:src/HAL/tim.c ****     if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 970              		.loc 1 353 0
 971 0034 6946     		mov	r1, sp
 972 0036 0C48     		ldr	r0, .L138
 351:src/HAL/tim.c ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 973              		.loc 1 351 0
 974 0038 0093     		str	r3, [sp]
 352:src/HAL/tim.c ****     sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 975              		.loc 1 352 0
 976 003a 0193     		str	r3, [sp, #4]
 977              		.loc 1 353 0
 978 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 979              	.LVL64:
 980 0040 20B1     		cbz	r0, .L122
 354:src/HAL/tim.c ****     {
 355:src/HAL/tim.c ****       _Error_Handler(__FILE__, __LINE__);
 981              		.loc 1 355 0
 982 0042 40F26311 		movw	r1, #355
 983 0046 0948     		ldr	r0, .L138+4
 984 0048 FFF7FEFF 		bl	_Error_Handler
 985              	.LVL65:
 986              	.L122:
 356:src/HAL/tim.c ****     }
 357:src/HAL/tim.c **** }
 987              		.loc 1 357 0
 988 004c 06B0     		add	sp, sp, #24
 989              		.cfi_remember_state
 990              		.cfi_def_cfa_offset 8
 991              		@ sp needed
 992 004e 10BD     		pop	{r4, pc}
 993              	.L137:
 994              		.cfi_restore_state
 348:src/HAL/tim.c ****     }
 995              		.loc 1 348 0
 996 0050 4FF4AE71 		mov	r1, #348
 997 0054 0548     		ldr	r0, .L138+4
 998 0056 FFF7FEFF 		bl	_Error_Handler
 999              	.LVL66:
 1000 005a EAE7     		b	.L124
 1001              	.L136:
 342:src/HAL/tim.c ****     }
 1002              		.loc 1 342 0
 1003 005c 4FF4AB71 		mov	r1, #342
 1004 0060 0248     		ldr	r0, .L138+4
 1005 0062 FFF7FEFF 		bl	_Error_Handler
 1006              	.LVL67:
 1007 0066 DBE7     		b	.L123
 1008              	.L139:
 1009              		.align	2
 1010              	.L138:
 1011 0068 00000000 		.word	.LANCHOR1
 1012 006c 00000000 		.word	.LC0
 1013              		.cfi_endproc
 1014              	.LFE70:
 1016              		.global	hdma_tim1_ch1
ARM GAS  /tmp/ccfhO7pz.s 			page 28


 1017              		.global	htim2
 1018              		.global	htim1
 1019              		.section	.bss.hdma_tim1_ch1,"aw",%nobits
 1020              		.align	2
 1021              		.set	.LANCHOR2,. + 0
 1024              	hdma_tim1_ch1:
 1025 0000 00000000 		.space	68
 1025      00000000 
 1025      00000000 
 1025      00000000 
 1025      00000000 
 1026              		.section	.bss.htim1,"aw",%nobits
 1027              		.align	2
 1028              		.set	.LANCHOR0,. + 0
 1031              	htim1:
 1032 0000 00000000 		.space	64
 1032      00000000 
 1032      00000000 
 1032      00000000 
 1032      00000000 
 1033              		.section	.bss.htim2,"aw",%nobits
 1034              		.align	2
 1035              		.set	.LANCHOR1,. + 0
 1038              	htim2:
 1039 0000 00000000 		.space	64
 1039      00000000 
 1039      00000000 
 1039      00000000 
 1039      00000000 
 1040              		.section	.rodata.MX_TIM1_Init.str1.4,"aMS",%progbits,1
 1041              		.align	2
 1042              	.LC0:
 1043 0000 7372632F 		.ascii	"src/HAL/tim.c\000"
 1043      48414C2F 
 1043      74696D2E 
 1043      6300
 1044              		.text
 1045              	.Letext0:
 1046              		.file 2 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.
 1047              		.file 3 "drivers/CMSIS/Include/core_cm3.h"
 1048              		.file 4 "drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1049              		.file 5 "drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1050              		.file 6 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/
 1051              		.file 7 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/
 1052              		.file 8 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.
 1053              		.file 9 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/
 1054              		.file 10 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1055              		.file 11 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1056              		.file 12 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1057              		.file 13 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1058              		.file 14 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1059              		.file 15 "src/HAL/tim.h"
 1060              		.file 16 "src/HAL/dma.h"
 1061              		.file 17 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  /tmp/ccfhO7pz.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccfhO7pz.s:16     .text.HAL_TIM_MspPostInit.part.0:0000000000000000 $t
     /tmp/ccfhO7pz.s:23     .text.HAL_TIM_MspPostInit.part.0:0000000000000000 HAL_TIM_MspPostInit.part.0
     /tmp/ccfhO7pz.s:59     .text.HAL_TIM_MspPostInit.part.0:0000000000000020 $d
     /tmp/ccfhO7pz.s:64     .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccfhO7pz.s:72     .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccfhO7pz.s:282    .text.MX_TIM1_Init:00000000000000ec $d
     /tmp/ccfhO7pz.s:289    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccfhO7pz.s:297    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccfhO7pz.s:393    .text.MX_TIM2_Init:0000000000000068 $d
     /tmp/ccfhO7pz.s:399    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccfhO7pz.s:407    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccfhO7pz.s:562    .text.HAL_TIM_Base_MspInit:00000000000000a8 $d
     /tmp/ccfhO7pz.s:570    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccfhO7pz.s:578    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccfhO7pz.s:598    .text.HAL_TIM_MspPostInit:0000000000000010 $d
     /tmp/ccfhO7pz.s:603    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccfhO7pz.s:611    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccfhO7pz.s:676    .text.HAL_TIM_Base_MspDeInit:0000000000000044 $d
     /tmp/ccfhO7pz.s:682    .text.MX_TIM1_Init_Custom:0000000000000000 $t
     /tmp/ccfhO7pz.s:690    .text.MX_TIM1_Init_Custom:0000000000000000 MX_TIM1_Init_Custom
     /tmp/ccfhO7pz.s:904    .text.MX_TIM1_Init_Custom:00000000000000f4 $d
     /tmp/ccfhO7pz.s:911    .text.MX_TIM2_Init_Custom:0000000000000000 $t
     /tmp/ccfhO7pz.s:919    .text.MX_TIM2_Init_Custom:0000000000000000 MX_TIM2_Init_Custom
     /tmp/ccfhO7pz.s:1011   .text.MX_TIM2_Init_Custom:0000000000000068 $d
     /tmp/ccfhO7pz.s:1024   .bss.hdma_tim1_ch1:0000000000000000 hdma_tim1_ch1
     /tmp/ccfhO7pz.s:1038   .bss.htim2:0000000000000000 htim2
     /tmp/ccfhO7pz.s:1031   .bss.htim1:0000000000000000 htim1
     /tmp/ccfhO7pz.s:1020   .bss.hdma_tim1_ch1:0000000000000000 $d
     /tmp/ccfhO7pz.s:1027   .bss.htim1:0000000000000000 $d
     /tmp/ccfhO7pz.s:1034   .bss.htim2:0000000000000000 $d
     /tmp/ccfhO7pz.s:1041   .rodata.MX_TIM1_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.04924adcfdc7a6cf00118bdef9d1ce8d
                           .group:0000000000000000 wm4.main.h.40.6fe808b6568aa38f66585b648d7167ef
                           .group:0000000000000000 wm4.stm32f1xx_hal_conf.h.52.96cb61986c8bfeb3a4fa629a7a7441f6
                           .group:0000000000000000 wm4.stm32f1xx.h.57.c2a10934f4c6830aeb7e4997f02806f1
                           .group:0000000000000000 wm4.stm32f103xb.h.56.66305a77cea9d5300aac997a78930076
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.core_cm3.h.74.7d5fecd6d4522d755d10a23d1542f805
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.67d2dcde6a14ff518eedc1d545d89a76
                           .group:0000000000000000 wm4.core_cm3.h.175.a6c441adf1a05ce96eea3cf78e6687ab
                           .group:0000000000000000 wm4.stm32f103xb.h.619.382b3c85cac6f0350ee5bfaff32e1ebc
                           .group:0000000000000000 wm4.stm32f1xx.h.180.c0013e6ebd6ad07f67c298190b8eac92
                           .group:0000000000000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:0000000000000000 wm4.newlib.h.21.59901f4bf241ab46c63694665baa7297
                           .group:0000000000000000 wm4.features.h.22.5cdadbb3efe495d1c9e38350b8c376c7
                           .group:0000000000000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:0000000000000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.e658329a094974ebad41b40c60502de7
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
ARM GAS  /tmp/ccfhO7pz.s 			page 30


                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:0000000000000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.30.bbece7fa40993a78092dcc5805132560
                           .group:0000000000000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.8188691c2279eac7a223caa50f6694b9
                           .group:0000000000000000 wm4.stm32f1xx_hal_def.h.77.f54bfbbe3e3696aae97b05a3f338caf7
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.112.09261d6ad0eef5abae6b9147d0cf5cbf
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc_ex.h.40.bb785d717afc4d2d2b63a3608cb5a0c5
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.1219.902328474751456408f7d18f6caace93
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.40.f1cf5d2dd589e1675a9fcd6b008c2bb6
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio_ex.h.40.30d74584c89dcd3d86d10bdbbb06cc31
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.281.b26a95114b989e6edaf48d72c8710b9d
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.40.b1d5b41c58b583c31c61335e4c8e1bdd
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma_ex.h.40.7ac05bbf95f5a25a3f4a9b9c2a14f835
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.427.daddf65c60854feb2dc9660a62f55b8c
                           .group:0000000000000000 wm4.stm32f1xx_hal_cortex.h.40.4f649a8bf316b7aa5d02077abd9b8999
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc.h.40.3ad40e622f0cef64228eb182e4bbe00f
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc_ex.h.40.3118796521817cc82626257e9c7ab79c
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash.h.40.12aaef98e1fbb85e3a8f79f98532d04a
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash_ex.h.40.ad66c77e153bc5a4a1d60e46727f4ae5
                           .group:0000000000000000 wm4.stm32f1xx_hal_pwr.h.40.ecccf9071314b0ab3f6ffcfd7c596e95
                           .group:0000000000000000 wm4.stm32f1xx_hal_spi.h.40.5dd367ee94b0bb430a3842862fe7d7da
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim.h.40.ac3feb225ff72b119eeddfe8acac07a3
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim_ex.h.40.9b926a51c24898708ad2e47fd5ff9d32
                           .group:0000000000000000 wm4.stm32f1xx_hal_uart.h.40.9914ca79b81d8b23b4e5425c156b0acd
                           .group:0000000000000000 wm4.stm32f1xx_hal.h.82.f2fd9c01c6f8c9e676a37d84eb9dc553

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
_Error_Handler
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_DMA_Init
HAL_NVIC_DisableIRQ
HAL_DMA_DeInit
