ARM GAS  /tmp/cc3lpWmf.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.UART_SetConfig,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	UART_SetConfig:
  24              	.LFB118:
  25              		.file 1 "drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c"
   1:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
   2:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
   3:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @file    stm32f1xx_hal_uart.c
   4:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @author  MCD Application Team
   5:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @version V1.1.1
   6:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @date    12-May-2017
   7:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief   UART HAL module driver.
   8:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   9:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
  10:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Initialization and de-initialization functions
  11:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + IO operation functions
  12:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral Control functions
  13:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  14:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @verbatim
  15:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  16:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                         ##### How to use this driver #####
  17:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  18:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
  19:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  20:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  21:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  22:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  23:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  24:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) UART pins configuration:
  25:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  26:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the UART pins (TX as alternate function pull-up, RX as alternate functi
  27:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  28:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  29:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  30:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  31:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  32:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  33:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
ARM GAS  /tmp/cc3lpWmf.s 			page 2


  34:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  35:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required 
  36:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   Tx/Rx parameters.                
  37:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  38:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  39:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete 
  40:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  41:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  42:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  43:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  44:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware 
  45:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  46:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  47:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  48:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_UART_Init() API.
  49:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  50:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  51:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  52:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  53:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  54:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  55:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling 
  56:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  57:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  58:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  59:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt, 
  60:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  61:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit 
  62:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             and receive process.
  63:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  64:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  65:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the 
  66:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  67:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             HAL_UART_MspInit() API.
  68:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  69:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  70:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         Three operation modes are available within this driver:
  71:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  72:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Polling mode IO operation ***
  73:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =================================
  74:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  75:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  76:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  77:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  78:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  79:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ===================================
  80:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  81:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  82:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  83:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  84:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  85:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  86:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  87:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  88:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  89:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  90:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** DMA mode IO operation ***
ARM GAS  /tmp/cc3lpWmf.s 			page 3


  91:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ==============================
  92:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  93:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  94:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  95:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  96:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  97:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  98:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
  99:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
 100:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
 101:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 102:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 103:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 104:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 105:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 106:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 107:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 108:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 109:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** UART HAL driver macros list ***
 110:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =============================================
 111:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 112:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 113:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 114:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 115:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 116:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 117:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 118:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 119:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 120:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 121:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 122:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 123:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 124:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @endverbatim
 125:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 126:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) Additionnal remark: If the parity is enabled, then the MSB bit of the data written
 127:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 128:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 129:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 130:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 131:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 132:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------------------|---------------------------------------|
 133:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 134:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 135:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 136:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 137:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 138:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 139:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 140:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 141:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 142:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @attention
 143:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 144:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 145:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 146:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 147:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
ARM GAS  /tmp/cc3lpWmf.s 			page 4


 148:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 149:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 150:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 151:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 152:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 153:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 154:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 155:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      without specific prior written permission.
 156:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 157:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 158:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 159:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 160:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 161:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 162:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 163:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 164:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 165:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 166:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 167:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 168:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 169:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 170:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 171:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 172:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #include "stm32f1xx_hal.h"
 173:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 174:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup STM32F1xx_HAL_Driver
 175:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 176:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 177:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 178:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART UART
 179:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief HAL UART module driver
 180:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 181:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 182:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 183:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 184:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 185:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 186:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 187:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 188:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 189:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 190:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 191:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 192:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 193:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 194:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 195:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 196:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 197:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 198:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 199:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 200:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 201:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 202:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 203:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 204:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/cc3lpWmf.s 			page 5


 205:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 206:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 207:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 208:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 209:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 210:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 211:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 212:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 213:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 214:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig (UART_HandleTypeDef *huart);
 215:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 216:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 217:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 218:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 219:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 220:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 221:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 222:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 223:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions 
 224:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
 225:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 226:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
 227:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 228:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 229:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 230:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 231:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 232:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     in asynchronous mode.
 233:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 234:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Baud Rate
 235:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Word Length 
 236:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Stop Bit
 237:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 238:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 239:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 240:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 241:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Hardware flow control
 242:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Receiver/transmitter modes
 243:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Over Sampling Method
 244:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 245:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs 
 246:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 247:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manuals 
 248:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (RM0008 for STM32F10Xxx MCUs and RM0041 for STM32F100xx MCUs)).
 249:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 250:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
 251:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 252:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 253:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 254:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 255:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 256:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 257:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 258:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 259:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 260:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 261:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
ARM GAS  /tmp/cc3lpWmf.s 			page 6


 262:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 263:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 264:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 265:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 266:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 267:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 268:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 269:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 270:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 271:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 272:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 */
 273:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 274:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 275:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 276:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 277:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 278:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 279:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 280:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 281:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 282:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 283:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 284:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 285:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 286:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {  
 287:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 288:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 289:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 290:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 291:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 292:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 293:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 294:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 295:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 296:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 297:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 298:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 299:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 300:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 301:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 302:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 303:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 304:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 305:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 306:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 307:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 308:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 309:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 310:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 311:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 312:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 313:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 314:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 315:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 316:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 317:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 318:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/cc3lpWmf.s 			page 7


 319:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 320:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 321:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 322:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 323:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 324:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 325:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 326:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 327:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 328:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 329:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 330:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 331:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 332:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 333:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 334:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */ 
 335:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 336:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 337:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 338:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 339:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 340:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 341:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 342:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 343:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 344:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 345:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 346:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 347:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 348:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 349:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 350:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 351:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 352:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 353:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 354:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 355:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 356:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 357:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 358:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 359:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 360:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 361:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 362:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 363:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 364:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 365:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 366:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 367:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 368:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 369:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 370:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 371:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 372:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 373:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 374:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 375:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/cc3lpWmf.s 			page 8


 376:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 377:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 378:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 379:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 380:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 381:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  BreakDetectLength: Specifies the LIN break detection length.
 382:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 383:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 384:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 385:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 386:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 387:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 388:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 389:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 390:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 391:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 392:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 393:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 394:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 395:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the LIN UART instance */  
 396:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 397:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Break detection length parameter */
 398:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 399:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 400:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 401:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 402:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 403:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 404:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 405:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 406:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 407:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 408:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 409:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 410:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 411:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 412:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 413:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 414:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 415:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 416:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 417:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 418:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 419:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 420:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
 421:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 422:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 423:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 424:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 425:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 426:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 427:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 428:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 429:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 430:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 431:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 432:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
ARM GAS  /tmp/cc3lpWmf.s 			page 9


 433:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 434:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 435:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 436:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 438:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 439:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 440:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 441:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 442:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 443:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 444:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 445:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 446:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 447:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 448:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Address: USART address
 449:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  WakeUpMethod: specifies the USART wake-up method.
 450:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 451:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 452:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 453:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 454:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 455:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 456:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 457:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 458:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 459:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 460:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 461:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 462:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 463:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check UART instance capabilities */  
 464:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MULTIPROCESSOR_INSTANCE(huart->Instance));
 465:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 466:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 467:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 468:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 469:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 470:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 471:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 472:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 473:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 474:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 475:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 476:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 477:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 478:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 479:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 480:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 481:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 482:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 483:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 484:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 485:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 486:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 487:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 488:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 489:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
ARM GAS  /tmp/cc3lpWmf.s 			page 10


 490:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared: 
 491:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 492:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 493:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 494:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 495:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 496:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART address node */
 497:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, Address);
 498:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 499:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 500:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 501:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 502:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 503:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 504:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 505:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 506:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 507:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 508:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 509:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 510:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 511:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 512:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 513:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 514:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral. 
 515:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 516:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 517:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 518:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 519:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 520:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 521:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 522:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 523:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 524:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 525:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 526:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 527:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 528:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 529:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 530:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 531:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 532:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DeInit the low level hardware */
 533:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 534:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 535:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 536:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 537:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 538:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 539:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlock */
 540:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 541:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 542:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 543:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 544:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 545:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 546:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP Init.
ARM GAS  /tmp/cc3lpWmf.s 			page 11


 547:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 548:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 549:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 550:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 551:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 552:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 553:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 554:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 555:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 556:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 557:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
 558:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 559:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 560:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 561:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 562:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 563:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 564:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 565:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 566:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 567:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 568:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 569:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 570:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 571:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 572:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
 573:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 574:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 575:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 576:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 577:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 578:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 579:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions 
 580:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions 
 581:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 582:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
 583:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 584:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### IO operation functions #####
 585:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 586:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
 587:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 588:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and Half duplex data transfers.
 589:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 590:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) There are two modes of transfer:
 591:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode. 
 592:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
 593:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             after finishing transfer.  
 594:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (++) Non blocking mode: The communication is performed using Interrupts 
 595:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             or DMA, these APIs return the HAL status.
 596:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The end of the data processing will be indicated through the 
 597:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 598:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             using DMA mode.
 599:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
 600:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             will be executed respectively at the end of the transmit or receive process.
 601:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL_UART_ErrorCallback() user callback will be executed when 
 602:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             a communication error is detected.
 603:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/cc3lpWmf.s 			page 12


 604:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Blocking mode APIs are:
 605:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 606:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive() 
 607:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 608:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non Blocking mode APIs with Interrupt are:
 609:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 610:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 611:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 612:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 613:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non Blocking mode functions with DMA are:
 614:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 615:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 616:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 617:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 618:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 619:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 620:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in non blocking mode:
 621:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 622:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 623:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 624:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 625:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 626:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 627:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 628:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (@) In the Half duplex communication, it is forbidden to run the transmit 
 629:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX
 630:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           can't be useful.
 631:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 632:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
 633:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 634:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 635:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 636:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 637:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
 638:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 639:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 640:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 641:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 642:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration  
 643:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 644:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 645:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 646:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 647:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 648:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0U;
 649:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 650:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 651:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 652:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 653:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 654:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 655:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 656:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 657:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 658:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 659:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 660:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/cc3lpWmf.s 			page 13


 661:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 662:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 663:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 664:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 665:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
 666:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 667:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 668:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 669:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 670:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 671:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->TxXferCount--;
 672:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 673:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 674:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 675:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 676:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 677:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 678:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 679:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 680:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 681:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 682:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=2U;
 683:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 684:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 685:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 686:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=1U;
 687:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 688:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 689:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
 690:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 691:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 692:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 693:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 694:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 695:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 696:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 697:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 698:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 699:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 700:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 701:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_TIMEOUT;
 702:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 703:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 704:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 705:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 706:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 707:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 708:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 709:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 710:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 711:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 712:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 713:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 714:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 715:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 716:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 717:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/cc3lpWmf.s 			page 14


 718:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 719:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receive an amount of data in blocking mode. 
 720:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 721:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 722:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 723:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 724:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration
 725:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 726:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 727:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 728:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 729:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 730:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0U;
 731:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 732:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 733:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 734:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 735:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 736:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 737:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 738:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 739:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 740:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 741:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 742:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 743:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 744:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 745:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 746:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 747:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
 748:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 749:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 750:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 751:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 752:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check the remain data to be received */
 753:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 754:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 755:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxXferCount--;
 756:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 757:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 758:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 759:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 760:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 761:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 762:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         tmp = (uint16_t*)pData;
 763:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 764:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 765:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 766:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=2U;
 767:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 768:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 769:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 770:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 771:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=1U;
 772:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 773:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 774:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       } 
ARM GAS  /tmp/cc3lpWmf.s 			page 15


 775:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
 776:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 777:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 778:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 779:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 780:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 781:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 782:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 783:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 784:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 785:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 786:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 787:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 788:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 789:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 790:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 791:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 792:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 793:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 794:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 795:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 796:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 797:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 798:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 799:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 800:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 801:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 802:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 803:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 804:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 805:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 806:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 807:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 808:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
 809:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 810:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 811:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 812:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 813:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 814:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 815:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 816:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 817:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 818:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 819:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 820:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U)) 
 821:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 822:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 823:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 824:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 825:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 826:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 827:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 828:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 829:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 830:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 831:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/cc3lpWmf.s 			page 16


 832:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 833:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 834:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 835:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 836:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 837:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
 838:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 839:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 840:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 841:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 842:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 843:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 844:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 845:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 846:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 847:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 848:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 849:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 850:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 851:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 852:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 853:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 854:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 855:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 856:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 857:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 858:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 859:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 860:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 861:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 862:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 863:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 864:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 865:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 866:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 867:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 868:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 869:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 870:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 871:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 872:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 873:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 874:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 875:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 876:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 877:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 878:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 879:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 880:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 881:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 882:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 883:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 884:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 885:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
 886:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 887:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 888:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
ARM GAS  /tmp/cc3lpWmf.s 			page 17


 889:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 890:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 891:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 892:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 893:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 894:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 895:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 896:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 897:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode. 
 898:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 899:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 900:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 901:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 902:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 903:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 904:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 905:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 906:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 907:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 908:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 909:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 910:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 911:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 912:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 913:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 914:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 915:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 916:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 917:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 918:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 919:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 920:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 921:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 922:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 923:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 924:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 925:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 926:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 927:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 928:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 929:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 930:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 931:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 932:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
 933:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 934:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 935:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA abort callback */
 936:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 937:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 938:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 939:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 940:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 941:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 942:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 943:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 944:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 945:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
ARM GAS  /tmp/cc3lpWmf.s 			page 18


 946:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 947:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 948:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 949:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
 950:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 951:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 952:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 953:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 954:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 955:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 956:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 957:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 958:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 959:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 960:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 961:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 962:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 963:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 964:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 965:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 966:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
 967:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 968:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 969:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 970:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 971:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 972:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 973:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 974:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 975:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 976:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 977:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 978:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 979:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 980:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 981:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 982:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 983:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 984:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 985:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 986:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 987:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 988:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 989:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 990:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 991:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 992:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 993:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 994:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 995:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 996:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
 997:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 998:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 999:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA abort callback */
1000:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1001:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1002:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA channel */
ARM GAS  /tmp/cc3lpWmf.s 			page 19


1003:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
1004:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
1005:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1006:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
1007:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1008:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1009:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1010:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1011:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1012:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1013:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1014:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1015:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1016:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1017:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1018:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
1019:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     in the UART CR3 register */
1020:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1021:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1022:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
1023:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1024:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1025:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1026:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
1027:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1028:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1029:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1030:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1031:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1032:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1033:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1034:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1035:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1036:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1037:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1038:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1039:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1040:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1041:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1042:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1043:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1044:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1045:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1046:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1047:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1048:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1049:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1050:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1051:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1052:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1053:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1054:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1055:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1056:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1057:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1058:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1059:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  /tmp/cc3lpWmf.s 			page 20


1060:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1061:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1062:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1063:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1064:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1065:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1066:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1067:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1068:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1069:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1070:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1071:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1072:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1073:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1074:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1075:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1076:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1077:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1078:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1079:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1080:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1081:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1082:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1083:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1084:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1085:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1086:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1087:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1088:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1089:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1090:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1091:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1092:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1093:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1094:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1095:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1096:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1097:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1098:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1099:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1100:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1101:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1102:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1103:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1104:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1105:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1106:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1107:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1108:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1109:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1110:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1111:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1112:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1113:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1114:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1115:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1116:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      */
ARM GAS  /tmp/cc3lpWmf.s 			page 21


1117:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1118:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1119:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1120:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1121:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1122:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1123:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1124:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1125:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1126:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1127:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1128:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1129:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1130:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1131:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1132:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1133:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1134:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1135:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1136:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1137:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1138:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1139:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1140:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1141:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1142:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1143:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1144:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1145:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1146:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1147:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1148:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1149:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1150:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1151:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1152:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1153:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1154:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1155:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1156:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1157:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1158:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1159:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1160:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1161:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1162:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1163:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1164:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1165:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1166:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1167:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1168:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1169:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1170:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1171:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1172:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel: use blocking DMA Abort API (no callback) */
1173:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
ARM GAS  /tmp/cc3lpWmf.s 			page 22


1174:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1175:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1176:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1177:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1178:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1179:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1180:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1181:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1182:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1183:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1184:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1185:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1186:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1187:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1188:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel: use blocking DMA Abort API (no callback) */
1189:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1190:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1191:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1192:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1193:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1194:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1195:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1196:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1197:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1198:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1199:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1200:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1201:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1202:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1203:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
1204:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1205:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1206:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1207:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1208:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1209:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1210:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1211:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1212:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1213:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1214:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1215:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1216:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1217:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1218:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1219:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1220:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1221:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1222:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1223:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1224:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1225:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1226:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1227:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1228:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1229:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1230:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
ARM GAS  /tmp/cc3lpWmf.s 			page 23


1231:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1232:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1233:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1234:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1235:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1236:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1237:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1238:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1239:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1240:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1241:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1242:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1243:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1244:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1245:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1246:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Tx transfer counter */
1247:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1248:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1249:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1250:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1251:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1252:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1253:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1254:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1255:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1256:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1257:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1258:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1259:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1260:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1261:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1262:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1263:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1264:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1265:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1266:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1267:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1268:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1269:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1270:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1271:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1272:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1273:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1274:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1275:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1276:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1277:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1278:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1279:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1280:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1281:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1282:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1283:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1284:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1285:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1286:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1287:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  /tmp/cc3lpWmf.s 			page 24


1288:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1289:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Rx transfer counter */
1290:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1291:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1292:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1293:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1294:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1295:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1296:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1297:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1298:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1299:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1300:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1301:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1302:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1303:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1304:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1305:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1306:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1307:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1308:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1309:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1310:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1311:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1312:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1313:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1314:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
1315:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1316:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1317:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1318:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1319:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1320:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1321:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      before any call to DMA Abort functions */
1322:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1323:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1324:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1325:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1326:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Otherwise, set it to NULL */
1327:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1328:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1329:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1330:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1331:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1332:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1333:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1334:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1335:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1336:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1337:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1338:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1339:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1340:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Otherwise, set it to NULL */
1341:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1342:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1343:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1344:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
ARM GAS  /tmp/cc3lpWmf.s 			page 25


1345:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1346:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1347:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1348:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1349:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1350:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1351:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1352:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1353:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1354:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1355:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1356:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1357:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1358:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1359:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1360:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1361:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1362:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1363:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA TX */
1364:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1365:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1366:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1367:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1368:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1369:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1370:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x00U;
1371:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1372:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1373:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1374:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1375:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1376:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1377:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1378:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1379:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1380:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1381:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1382:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1383:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1384:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1385:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1386:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA RX */
1387:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1388:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1389:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1390:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x01U;
1391:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1392:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1393:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1394:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x00U;
1395:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1396:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1397:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1398:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1399:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1400:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(AbortCplt == 0x01U)
1401:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
ARM GAS  /tmp/cc3lpWmf.s 			page 26


1402:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1403:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U; 
1404:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1405:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1406:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset ErrorCode */
1407:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1408:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1409:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1410:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1411:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1412:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1413:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1414:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1415:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1416:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1417:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1418:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1419:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1420:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1421:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1422:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1423:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1424:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1425:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1426:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1427:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1428:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1429:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1430:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1431:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1432:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1433:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1434:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1435:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1436:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1438:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1439:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1440:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1441:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1442:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1443:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1444:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1445:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1446:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1447:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1448:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1449:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1450:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1451:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA TX */
1452:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1453:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1454:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1455:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1456:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1457:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1458:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
ARM GAS  /tmp/cc3lpWmf.s 			page 27


1459:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1460:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Reset Tx transfer counter */
1461:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
1462:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1463:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1464:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1465:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1466:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1467:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1468:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1469:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1470:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1471:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1472:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Tx transfer counter */
1473:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
1474:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1475:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1476:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1477:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1478:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1479:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1480:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1481:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1482:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1483:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1484:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1485:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1486:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1487:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1488:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1489:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1490:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1491:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1492:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1493:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1494:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1495:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1496:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1497:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1498:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1499:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1500:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1501:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1502:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1503:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1504:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1505:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1506:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1507:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1508:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1509:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1510:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1511:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1512:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1513:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1514:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1515:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
ARM GAS  /tmp/cc3lpWmf.s 			page 28


1516:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1517:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA RX */
1518:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1519:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1520:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1521:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1522:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1523:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1524:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1525:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1526:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Reset Rx transfer counter */
1527:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
1528:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1529:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1530:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1531:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1532:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1533:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1534:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1535:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1536:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1537:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1538:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Rx transfer counter */
1539:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1540:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1541:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1542:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1543:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1544:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1545:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1546:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1547:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1548:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
1549:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1550:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1551:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1552:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1553:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1554:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1555:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1556:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1557:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1558:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1559:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
1560:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1561:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
1562:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
1563:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
1564:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1565:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If no error occurs */
1566:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
1567:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(errorflags == RESET)
1568:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1569:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
1570:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1571:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1572:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       UART_Receive_IT(huart);
ARM GAS  /tmp/cc3lpWmf.s 			page 29


1573:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
1574:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1575:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1576:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1577:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If some errors occur */
1578:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE 
1579:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1580:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
1581:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1582:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1583:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1584:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1585:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1586:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
1587:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1588:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1589:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1590:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1591:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1592:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
1593:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1594:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1595:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1596:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1597:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1598:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
1599:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1600:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     { 
1601:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1602:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1603:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1604:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1605:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1606:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1607:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
1608:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1609:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1610:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         UART_Receive_IT(huart);
1611:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1612:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1613:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1614:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          consider error as blocking */
1615:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1616:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
1617:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1618:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1619:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1620:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1621:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1622:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1623:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1624:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1625:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1626:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1627:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1628:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1629:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           if(huart->hdmarx != NULL)
ARM GAS  /tmp/cc3lpWmf.s 			page 30


1630:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
1631:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1632:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1633:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1634:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1635:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             {
1636:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
1637:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1638:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             }
1639:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
1640:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           else
1641:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
1642:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /* Call user error callback */
1643:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1644:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
1645:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1646:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
1647:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1648:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Call user error callback */
1649:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1650:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1651:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1652:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1653:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1654:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1655:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Error is notified to user through user error callback */
1656:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1657:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1658:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1659:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1660:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
1661:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   } /* End if some error occurs */
1662:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1663:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1664:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1665:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1666:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_Transmit_IT(huart);
1667:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
1668:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1669:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1670:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
1671:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1672:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1673:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1674:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
1675:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1676:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1677:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1678:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1679:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
1680:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1681:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1682:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1683:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1684:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1685:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1686:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/cc3lpWmf.s 			page 31


1687:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1688:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1689:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1690:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1691:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1692:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1693:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1694:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1695:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1696:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1697:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1698:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1699:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1700:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1701:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1702:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1703:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1704:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
1705:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1706:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1707:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1708:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1709:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
1710:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1711:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1712:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1713:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1714:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1715:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1716:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1717:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1718:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1719:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
1720:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1721:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1722:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1723:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1724:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1725:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1726:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1727:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1728:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1729:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1730:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1731:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1732:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1733:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1734:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
1735:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1736:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1737:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1738:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1739:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART error callbacks.
1740:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1741:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1742:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1743:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
ARM GAS  /tmp/cc3lpWmf.s 			page 32


1744:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1745:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1746:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1747:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart); 
1748:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1749:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
1750:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1751:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1752:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1753:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1754:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1755:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1756:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1757:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1758:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1759:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1760:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1761:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1762:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1763:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1764:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1765:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1766:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1767:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1768:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1769:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1770:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1771:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1772:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1773:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1774:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1775:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1776:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1777:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1778:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1779:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1780:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1781:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1782:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1783:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1784:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1785:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1786:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1787:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1788:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1789:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1790:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1791:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1792:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1793:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1794:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1795:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1796:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1797:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1798:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1799:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1800:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/cc3lpWmf.s 			page 33


1801:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
1802:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART control functions 
1803:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
1804:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim   
1805:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
1806:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1807:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================  
1808:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
1809:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
1810:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
1811:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode. 
1812:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
1813:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
1814:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
1815:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1816:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
1817:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1818:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1819:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1820:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1821:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Transmits break characters.
1822:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1823:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1824:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1825:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1826:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1827:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1828:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1829:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1830:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1831:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1832:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1833:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1834:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1835:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1836:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Send break characters */
1837:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
1838:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
1839:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1840:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1841:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1842:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1843:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1844:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1845:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1846:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1847:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1848:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enters the UART in mute mode. 
1849:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1850:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1851:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1852:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1853:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1854:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1855:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1856:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1857:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
ARM GAS  /tmp/cc3lpWmf.s 			page 34


1858:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1859:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1860:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1861:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1862:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1863:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
1864:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
1865:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1866:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1867:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1868:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1869:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1870:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1871:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1872:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1873:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1874:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1875:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software. 
1876:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1877:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1878:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1879:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1880:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
1881:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1882:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1883:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1884:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1885:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1886:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1887:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1888:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1889:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1890:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
1891:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
1892:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1893:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1894:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1895:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1896:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1897:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1898:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1899:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1900:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1901:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1902:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1903:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1904:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1905:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1906:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1907:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1908:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1909:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1910:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1911:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1912:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1913:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1914:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/cc3lpWmf.s 			page 35


1915:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1916:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1917:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1918:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1919:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
1920:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1921:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1922:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1923:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
1924:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1925:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Write to USART CR1 */
1926:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1927:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1928:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1929:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1930:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1931:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1932:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1933:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1934:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1935:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1936:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1937:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1938:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1939:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1940:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1941:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1942:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1943:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1944:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1945:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1946:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1947:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1948:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1949:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1950:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1951:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1952:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1953:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1954:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
1955:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1956:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1957:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1958:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
1959:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1960:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Write to USART CR1 */
1961:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1962:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1963:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1964:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1965:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1966:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1967:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1968:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
1969:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1970:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1971:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
ARM GAS  /tmp/cc3lpWmf.s 			page 36


1972:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1973:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1974:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1975:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions 
1976:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART State and Errors functions 
1977:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
1978:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim   
1979:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
1980:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
1981:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================  
1982:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  [..]
1983:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of 
1984:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication 
1985:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    process
1986:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
1987:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication. 
1988:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1989:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
1990:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1991:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1992:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1993:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1994:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Returns the UART state.
1995:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1996:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1997:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL state
1998:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1999:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2000:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2001:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
2002:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp1 = huart->gState;
2003:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp2 = huart->RxState;
2004:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2005:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2006:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2007:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2008:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2009:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Return the UART error code
2010:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart : pointer to a UART_HandleTypeDef structure that contains
2011:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *              the configuration information for the specified UART.
2012:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval UART Error Code
2013:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2014:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2015:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2016:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->ErrorCode;
2017:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2018:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2019:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2020:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
2021:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2022:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2023:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2024:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback. 
2025:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: DMA handle
2026:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2027:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2028:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/cc3lpWmf.s 			page 37


2029:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2030:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2031:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
2032:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
2033:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2034:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0U;
2035:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2036:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2037:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
2038:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2039:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2040:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2041:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2042:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2043:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2044:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Circular mode */
2045:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2046:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2047:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2048:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2049:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2050:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2051:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2052:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
2053:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2054:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2055:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2056:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2057:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2058:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2059:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2060:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2061:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
2062:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2063:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2064:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2065:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback. 
2066:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: DMA handle
2067:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2068:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2069:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2070:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2071:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2072:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
2073:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
2074:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2075:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0U;
2076:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2077:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2078:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2079:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2080:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
2081:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
2082:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
2083:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2084:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2085:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
ARM GAS  /tmp/cc3lpWmf.s 			page 38


2086:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2087:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2088:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
2089:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2090:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2091:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2092:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
2093:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2094:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2095:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2096:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2097:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2098:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2099:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2100:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
2101:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2102:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2103:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2104:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2105:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: DMA handle
2106:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2107:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2108:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2109:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2110:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2111:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2112:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2113:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2114:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
2115:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
2116:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2117:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0U;
2118:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2119:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2120:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2121:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2122:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR); 
2123:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
2124:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2125:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0U;
2126:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2127:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2128:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2129:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
2130:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2131:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2132:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2133:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2134:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2135:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2136:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2137:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Flag: specifies the UART flag to check.
2138:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Status: The new Flag status (SET or RESET).
2139:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Tickstart Tick start value
2140:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration
2141:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2142:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
ARM GAS  /tmp/cc3lpWmf.s 			page 39


2143:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2144:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2145:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Wait until flag is set */
2146:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status) 
2147:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2148:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check for the Timeout */
2149:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2150:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2151:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
2152:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2153:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2154:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2155:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2156:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
2157:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2158:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2159:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
2160:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Process Unlocked */
2161:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2162:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
2163:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         return HAL_TIMEOUT;
2164:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2165:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2166:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2167:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2168:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
2169:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2170:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2171:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2172:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2173:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: UART handle.
2174:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2175:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2176:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2177:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2178:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2179:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2180:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2181:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2182:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2183:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2184:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2185:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2186:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2187:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: UART handle.
2188:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2189:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2190:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2191:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2192:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2193:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2194:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2195:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2196:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2197:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2198:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2199:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/cc3lpWmf.s 			page 40


2200:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2201:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2202:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2203:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2204:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2205:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2206:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2207:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2208:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2209:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2210:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2211:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2212:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2213:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2214:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2215:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2216:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2217:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2218:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2219:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2220:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2221:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2222:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2223:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2224:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2225:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2226:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2227:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2228:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2229:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2230:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2231:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2232:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2233:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2234:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
2235:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2236:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2237:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2238:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2239:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2240:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2241:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2242:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
2243:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2244:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2245:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2246:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2247:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2248:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2249:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2250:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2251:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2252:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2253:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2254:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2255:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2256:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
ARM GAS  /tmp/cc3lpWmf.s 			page 41


2257:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2258:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2259:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2260:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2261:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2262:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2263:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2264:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2265:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
2266:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2267:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2268:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmatx != NULL)
2269:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2270:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
2271:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2272:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
2273:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2274:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2275:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2276:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2277:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2278:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2279:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2280:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
2281:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2282:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2283:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2284:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2285:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2286:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2287:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2288:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2289:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2290:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2291:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2292:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2293:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2294:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2295:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2296:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2297:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2298:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2299:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2300:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2301:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2302:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2303:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2304:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2305:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2306:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2307:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2308:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2309:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
2310:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2311:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2312:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2313:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
ARM GAS  /tmp/cc3lpWmf.s 			page 42


2314:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2315:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2316:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2317:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2318:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2319:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2320:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2321:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2322:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2323:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2324:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2325:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2326:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2327:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2328:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2329:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2330:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
2331:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2332:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2333:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2334:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2335:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
2336:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2337:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2338:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2339:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2340:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2341:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
2342:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2343:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2344:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
2345:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2346:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
2347:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2348:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
2349:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
2350:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2351:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2352:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
2353:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2354:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2355:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2356:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
2357:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2358:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     } 
2359:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2360:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2361:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
2362:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2363:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2364:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(--huart->TxXferCount == 0U)
2365:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2366:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2367:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
2368:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2369:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
2370:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
ARM GAS  /tmp/cc3lpWmf.s 			page 43


2371:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2372:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
2373:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2374:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2375:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2376:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
2377:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2378:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2379:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2380:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2381:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2382:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2383:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2384:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2385:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2386:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2387:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2388:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
2389:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
2390:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2391:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2392:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2393:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
2394:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2395:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
2396:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2397:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2398:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2399:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
2400:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2401:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2402:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2403:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2404:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2405:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2406:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
2407:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2408:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2409:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX) 
2410:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2411:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
2412:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2413:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr;
2414:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2415:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2416:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
2417:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
2418:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2419:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2420:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2421:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
2422:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
2423:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2424:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2425:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2426:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2427:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
ARM GAS  /tmp/cc3lpWmf.s 			page 44


2428:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2429:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
2430:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2431:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2432:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2433:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
2434:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2435:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2436:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
2438:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2439:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the IRDA Data Register not empty Interrupt */
2440:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
2441:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2442:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
2443:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
2444:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2445:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
2446:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2447:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2448:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2449:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2450:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2451:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2452:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_OK;
2453:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2454:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
2455:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2456:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2457:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2458:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
2459:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2460:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2461:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2462:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2463:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Configures the UART peripheral. 
2464:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2465:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2466:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2467:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2468:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
2469:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
  26              		.loc 1 2469 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  32              		.cfi_def_cfa_offset 32
  33              		.cfi_offset 4, -32
  34              		.cfi_offset 5, -28
  35              		.cfi_offset 6, -24
  36              		.cfi_offset 7, -20
  37              		.cfi_offset 8, -16
  38              		.cfi_offset 9, -12
  39              		.cfi_offset 10, -8
  40              		.cfi_offset 14, -4
ARM GAS  /tmp/cc3lpWmf.s 			page 45


  41              		.loc 1 2469 0
  42 0004 8246     		mov	r10, r0
2470:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2471:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2472:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
2473:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2474:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2475:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2476:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2477:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2478:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR2 Configuration ------*/
2479:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according 
2480:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    * to huart->Init.StopBits value */
2481:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
  43              		.loc 1 2481 0
  44 0006 0468     		ldr	r4, [r0]
  45 0008 C168     		ldr	r1, [r0, #12]
  46 000a 2269     		ldr	r2, [r4, #16]
2482:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2483:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR1 Configuration ------*/
2484:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode: 
2485:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value 
2486:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
2487:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
2488:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
2489:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2490:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
2491:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.
2492:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, 
2493:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
2494:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              tmpreg);
2495:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2496:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
  47              		.loc 1 2496 0
  48 000c 8368     		ldr	r3, [r0, #8]
2481:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  49              		.loc 1 2481 0
  50 000e 22F44052 		bic	r2, r2, #12288
  51 0012 0A43     		orrs	r2, r2, r1
  52 0014 2261     		str	r2, [r4, #16]
  53              	.LVL1:
2497:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, 
  54              		.loc 1 2497 0
  55 0016 E268     		ldr	r2, [r4, #12]
2496:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, 
  56              		.loc 1 2496 0
  57 0018 0069     		ldr	r0, [r0, #16]
  58              	.LVL2:
  59 001a DAF81410 		ldr	r1, [r10, #20]
  60              		.loc 1 2497 0
  61 001e 22F4B052 		bic	r2, r2, #5632
2496:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, 
  62              		.loc 1 2496 0
  63 0022 0343     		orrs	r3, r3, r0
  64              		.loc 1 2497 0
  65 0024 22F00C02 		bic	r2, r2, #12
2496:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, 
ARM GAS  /tmp/cc3lpWmf.s 			page 46


  66              		.loc 1 2496 0
  67 0028 0B43     		orrs	r3, r3, r1
  68              		.loc 1 2497 0
  69 002a 1343     		orrs	r3, r3, r2
  70 002c E360     		str	r3, [r4, #12]
2498:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE), 
2499:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              tmpreg);
2500:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
2501:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2502:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR3 Configuration ------*/
2503:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
2504:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
  71              		.loc 1 2504 0
  72 002e 6369     		ldr	r3, [r4, #20]
  73 0030 DAF81810 		ldr	r1, [r10, #24]
2505:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2506:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
2507:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Over Sampling */
2508:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
2509:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2510:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2511:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Instance == USART1)
2512:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2513:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2514:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2515:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2516:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2517:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
2518:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2519:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2520:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2521:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2522:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2523:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Instance == USART1)
2524:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2525:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2526:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2527:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2528:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2529:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
2530:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2531:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2532:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2533:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration ---------------------*/
2534:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Instance == USART1)
  74              		.loc 1 2534 0
  75 0034 514A     		ldr	r2, .L8
2504:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  76              		.loc 1 2504 0
  77 0036 23F44073 		bic	r3, r3, #768
  78 003a 0B43     		orrs	r3, r3, r1
  79              		.loc 1 2534 0
  80 003c 9442     		cmp	r4, r2
2504:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  81              		.loc 1 2504 0
  82 003e 6361     		str	r3, [r4, #20]
  83              		.loc 1 2534 0
ARM GAS  /tmp/cc3lpWmf.s 			page 47


  84 0040 59D0     		beq	.L7
2535:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2536:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2537:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2538:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2539:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2540:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
  85              		.loc 1 2540 0
  86 0042 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  87              	.LVL3:
  88 0046 DAF80430 		ldr	r3, [r10, #4]
  89 004a 00EB8000 		add	r0, r0, r0, lsl #2
  90 004e 00EB8000 		add	r0, r0, r0, lsl #2
  91 0052 9B00     		lsls	r3, r3, #2
  92 0054 B0FBF3F3 		udiv	r3, r0, r3
  93 0058 494F     		ldr	r7, .L8+4
  94 005a 4FF06408 		mov	r8, #100
  95 005e A7FB0323 		umull	r2, r3, r7, r3
  96 0062 5B09     		lsrs	r3, r3, #5
  97 0064 1D01     		lsls	r5, r3, #4
  98 0066 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  99              	.LVL4:
 100 006a DAF80420 		ldr	r2, [r10, #4]
 101 006e 00EB8000 		add	r0, r0, r0, lsl #2
 102 0072 9300     		lsls	r3, r2, #2
 103 0074 00EB8000 		add	r0, r0, r0, lsl #2
 104 0078 B0FBF3F6 		udiv	r6, r0, r3
 105 007c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 106              	.LVL5:
 107 0080 DAF80420 		ldr	r2, [r10, #4]
 108 0084 00EB8000 		add	r0, r0, r0, lsl #2
 109 0088 9300     		lsls	r3, r2, #2
 110 008a 00EB8000 		add	r0, r0, r0, lsl #2
 111 008e B0FBF3F3 		udiv	r3, r0, r3
 112 0092 A7FB0323 		umull	r2, r3, r7, r3
 113 0096 5B09     		lsrs	r3, r3, #5
 114 0098 08FB1363 		mls	r3, r8, r3, r6
 115 009c 1B01     		lsls	r3, r3, #4
 116 009e 3233     		adds	r3, r3, #50
 117 00a0 A7FB0323 		umull	r2, r3, r7, r3
 118 00a4 5B09     		lsrs	r3, r3, #5
 119 00a6 03F0F006 		and	r6, r3, #240
 120 00aa FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 121              	.LVL6:
 122 00ae DAF80420 		ldr	r2, [r10, #4]
 123 00b2 00EB8000 		add	r0, r0, r0, lsl #2
 124 00b6 00EB8000 		add	r0, r0, r0, lsl #2
 125 00ba 9300     		lsls	r3, r2, #2
 126 00bc B0FBF3F9 		udiv	r9, r0, r3
 127 00c0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 128              	.LVL7:
 129              	.L5:
 130 00c4 DAF80430 		ldr	r3, [r10, #4]
 131 00c8 00EB8000 		add	r0, r0, r0, lsl #2
 132 00cc 00EB8000 		add	r0, r0, r0, lsl #2
 133 00d0 9B00     		lsls	r3, r3, #2
 134 00d2 B0FBF3F3 		udiv	r3, r0, r3
ARM GAS  /tmp/cc3lpWmf.s 			page 48


 135 00d6 A7FB0323 		umull	r2, r3, r7, r3
 136 00da 5B09     		lsrs	r3, r3, #5
 137 00dc 08FB1393 		mls	r3, r8, r3, r9
 138 00e0 1B01     		lsls	r3, r3, #4
 139 00e2 3233     		adds	r3, r3, #50
 140 00e4 A7FB0323 		umull	r2, r3, r7, r3
 141 00e8 C3F34313 		ubfx	r3, r3, #5, #4
 142 00ec 3343     		orrs	r3, r3, r6
 143 00ee 2B44     		add	r3, r3, r5
 144 00f0 A360     		str	r3, [r4, #8]
 145 00f2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 146              	.LVL8:
 147              	.L7:
2536:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 148              		.loc 1 2536 0
 149 00f6 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 150              	.LVL9:
 151 00fa DAF80430 		ldr	r3, [r10, #4]
 152 00fe 00EB8000 		add	r0, r0, r0, lsl #2
 153 0102 00EB8000 		add	r0, r0, r0, lsl #2
 154 0106 9B00     		lsls	r3, r3, #2
 155 0108 B0FBF3F3 		udiv	r3, r0, r3
 156 010c 1C4F     		ldr	r7, .L8+4
 157 010e 4FF06408 		mov	r8, #100
 158 0112 A7FB0323 		umull	r2, r3, r7, r3
 159 0116 5B09     		lsrs	r3, r3, #5
 160 0118 1D01     		lsls	r5, r3, #4
 161 011a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 162              	.LVL10:
 163 011e DAF80420 		ldr	r2, [r10, #4]
 164 0122 00EB8000 		add	r0, r0, r0, lsl #2
 165 0126 9300     		lsls	r3, r2, #2
 166 0128 00EB8000 		add	r0, r0, r0, lsl #2
 167 012c B0FBF3F6 		udiv	r6, r0, r3
 168 0130 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 169              	.LVL11:
 170 0134 DAF80420 		ldr	r2, [r10, #4]
 171 0138 00EB8000 		add	r0, r0, r0, lsl #2
 172 013c 9300     		lsls	r3, r2, #2
 173 013e 00EB8000 		add	r0, r0, r0, lsl #2
 174 0142 B0FBF3F3 		udiv	r3, r0, r3
 175 0146 A7FB0323 		umull	r2, r3, r7, r3
 176 014a 5B09     		lsrs	r3, r3, #5
 177 014c 08FB1363 		mls	r3, r8, r3, r6
 178 0150 1B01     		lsls	r3, r3, #4
 179 0152 3233     		adds	r3, r3, #50
 180 0154 A7FB0323 		umull	r2, r3, r7, r3
 181 0158 5B09     		lsrs	r3, r3, #5
 182 015a 03F0F006 		and	r6, r3, #240
 183 015e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 184              	.LVL12:
 185 0162 DAF80420 		ldr	r2, [r10, #4]
 186 0166 00EB8000 		add	r0, r0, r0, lsl #2
 187 016a 9300     		lsls	r3, r2, #2
 188 016c 00EB8000 		add	r0, r0, r0, lsl #2
 189 0170 B0FBF3F9 		udiv	r9, r0, r3
 190 0174 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
ARM GAS  /tmp/cc3lpWmf.s 			page 49


 191              	.LVL13:
 192 0178 A4E7     		b	.L5
 193              	.L9:
 194 017a 00BF     		.align	2
 195              	.L8:
 196 017c 00380140 		.word	1073821696
 197 0180 1F85EB51 		.word	1374389535
 198              		.cfi_endproc
 199              	.LFE118:
 201              		.section	.text.UART_WaitOnFlagUntilTimeout.constprop.3,"ax",%progbits
 202              		.align	1
 203              		.p2align 2,,3
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu softvfp
 209              	UART_WaitOnFlagUntilTimeout.constprop.3:
 210              	.LFB139:
2143:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 211              		.loc 1 2143 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              	.LVL14:
 216 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 217              		.cfi_def_cfa_offset 24
 218              		.cfi_offset 4, -24
 219              		.cfi_offset 5, -20
 220              		.cfi_offset 6, -16
 221              		.cfi_offset 7, -12
 222              		.cfi_offset 8, -8
 223              		.cfi_offset 14, -4
2143:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 224              		.loc 1 2143 0
 225 0004 0746     		mov	r7, r0
 226 0006 0E46     		mov	r6, r1
 227 0008 9046     		mov	r8, r2
 228              	.LVL15:
 229 000a 1D46     		mov	r5, r3
 230              	.LVL16:
 231              	.L11:
 232 000c 3C68     		ldr	r4, [r7]
 233 000e 01E0     		b	.L12
 234              	.L15:
2149:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 235              		.loc 1 2149 0
 236 0010 6B1C     		adds	r3, r5, #1
 237 0012 06D1     		bne	.L23
 238              	.L12:
2146:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 239              		.loc 1 2146 0
 240 0014 2068     		ldr	r0, [r4]
 241 0016 36EA0003 		bics	r3, r6, r0
 242 001a F9D1     		bne	.L15
2168:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 243              		.loc 1 2168 0
 244 001c 0020     		movs	r0, #0
ARM GAS  /tmp/cc3lpWmf.s 			page 50


2169:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 245              		.loc 1 2169 0
 246 001e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 247              	.LVL17:
 248              	.L23:
2151:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 249              		.loc 1 2151 0
 250 0022 35B1     		cbz	r5, .L13
 251 0024 FFF7FEFF 		bl	HAL_GetTick
 252              	.LVL18:
 253 0028 A0EB0800 		sub	r0, r0, r8
 254 002c 8542     		cmp	r5, r0
 255 002e EDD2     		bcs	.L11
 256 0030 3C68     		ldr	r4, [r7]
 257              	.L13:
 258              	.LVL19:
 259              	.LBB20:
 260              	.LBB21:
2157:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 261              		.loc 1 2157 0
 262 0032 2022     		movs	r2, #32
2161:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
 263              		.loc 1 2161 0
 264 0034 0021     		movs	r1, #0
2154:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 265              		.loc 1 2154 0
 266 0036 E368     		ldr	r3, [r4, #12]
2161:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
 267              		.loc 1 2161 0
 268 0038 0320     		movs	r0, #3
2154:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 269              		.loc 1 2154 0
 270 003a 23F4D073 		bic	r3, r3, #416
 271 003e E360     		str	r3, [r4, #12]
2155:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
 272              		.loc 1 2155 0
 273 0040 6369     		ldr	r3, [r4, #20]
 274 0042 23F00103 		bic	r3, r3, #1
 275 0046 6361     		str	r3, [r4, #20]
2157:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 276              		.loc 1 2157 0
 277 0048 87F83920 		strb	r2, [r7, #57]
2161:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
 278              		.loc 1 2161 0
 279 004c 87F83810 		strb	r1, [r7, #56]
 280              	.LVL20:
2158:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
 281              		.loc 1 2158 0
 282 0050 87F83A20 		strb	r2, [r7, #58]
 283 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 284              	.LBE21:
 285              	.LBE20:
 286              		.cfi_endproc
 287              	.LFE139:
 289              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 290              		.align	1
 291              		.p2align 2,,3
ARM GAS  /tmp/cc3lpWmf.s 			page 51


 292              		.weak	HAL_UART_MspInit
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu softvfp
 298              	HAL_UART_MspInit:
 299              	.LFB138:
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304 0000 7047     		bx	lr
 305              		.cfi_endproc
 306              	.LFE138:
 308 0002 00BF     		.section	.text.HAL_UART_Init,"ax",%progbits
 309              		.align	1
 310              		.p2align 2,,3
 311              		.global	HAL_UART_Init
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu softvfp
 317              	HAL_UART_Init:
 318              	.LFB64:
 262:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 319              		.loc 1 262 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              	.LVL21:
 264:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 324              		.loc 1 264 0
 325 0000 60B3     		cbz	r0, .L28
 262:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 326              		.loc 1 262 0
 327 0002 38B5     		push	{r3, r4, r5, lr}
 328              		.cfi_def_cfa_offset 16
 329              		.cfi_offset 3, -16
 330              		.cfi_offset 4, -12
 331              		.cfi_offset 5, -8
 332              		.cfi_offset 14, -4
 285:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {  
 333              		.loc 1 285 0
 334 0004 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 335 0008 0446     		mov	r4, r0
 336 000a 03F0FF02 		and	r2, r3, #255
 337 000e 03B3     		cbz	r3, .L33
 338              	.LVL22:
 339              	.L27:
 294:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 340              		.loc 1 294 0
 341 0010 2423     		movs	r3, #36
 297:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 342              		.loc 1 297 0
 343 0012 2268     		ldr	r2, [r4]
 294:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 344              		.loc 1 294 0
ARM GAS  /tmp/cc3lpWmf.s 			page 52


 345 0014 84F83930 		strb	r3, [r4, #57]
 297:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 346              		.loc 1 297 0
 347 0018 D368     		ldr	r3, [r2, #12]
 300:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 348              		.loc 1 300 0
 349 001a 2046     		mov	r0, r4
 297:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 350              		.loc 1 297 0
 351 001c 23F40053 		bic	r3, r3, #8192
 352 0020 D360     		str	r3, [r2, #12]
 300:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 353              		.loc 1 300 0
 354 0022 FFF7FEFF 		bl	UART_SetConfig
 355              	.LVL23:
 312:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 356              		.loc 1 312 0
 357 0026 0025     		movs	r5, #0
 313:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 358              		.loc 1 313 0
 359 0028 2021     		movs	r1, #32
 305:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 360              		.loc 1 305 0
 361 002a 2368     		ldr	r3, [r4]
 316:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 362              		.loc 1 316 0
 363 002c 2846     		mov	r0, r5
 305:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 364              		.loc 1 305 0
 365 002e 1A69     		ldr	r2, [r3, #16]
 366 0030 22F49042 		bic	r2, r2, #18432
 367 0034 1A61     		str	r2, [r3, #16]
 306:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 368              		.loc 1 306 0
 369 0036 5A69     		ldr	r2, [r3, #20]
 370 0038 22F02A02 		bic	r2, r2, #42
 371 003c 5A61     		str	r2, [r3, #20]
 309:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 372              		.loc 1 309 0
 373 003e DA68     		ldr	r2, [r3, #12]
 374 0040 42F40052 		orr	r2, r2, #8192
 375 0044 DA60     		str	r2, [r3, #12]
 312:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 376              		.loc 1 312 0
 377 0046 E563     		str	r5, [r4, #60]
 313:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 378              		.loc 1 313 0
 379 0048 84F83910 		strb	r1, [r4, #57]
 314:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 380              		.loc 1 314 0
 381 004c 84F83A10 		strb	r1, [r4, #58]
 316:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 382              		.loc 1 316 0
 383 0050 38BD     		pop	{r3, r4, r5, pc}
 384              	.LVL24:
 385              	.L33:
 288:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/cc3lpWmf.s 			page 53


 386              		.loc 1 288 0
 387 0052 80F83820 		strb	r2, [r0, #56]
 291:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 388              		.loc 1 291 0
 389 0056 FFF7FEFF 		bl	HAL_UART_MspInit
 390              	.LVL25:
 391 005a D9E7     		b	.L27
 392              	.LVL26:
 393              	.L28:
 394              		.cfi_def_cfa_offset 0
 395              		.cfi_restore 3
 396              		.cfi_restore 4
 397              		.cfi_restore 5
 398              		.cfi_restore 14
 266:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 399              		.loc 1 266 0
 400 005c 0120     		movs	r0, #1
 401              	.LVL27:
 402 005e 7047     		bx	lr
 403              		.cfi_endproc
 404              	.LFE64:
 406              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 407              		.align	1
 408              		.p2align 2,,3
 409              		.global	HAL_HalfDuplex_Init
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 413              		.fpu softvfp
 415              	HAL_HalfDuplex_Init:
 416              	.LFB65:
 327:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 417              		.loc 1 327 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              	.LVL28:
 329:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 422              		.loc 1 329 0
 423 0000 80B3     		cbz	r0, .L37
 327:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 424              		.loc 1 327 0
 425 0002 38B5     		push	{r3, r4, r5, lr}
 426              		.cfi_def_cfa_offset 16
 427              		.cfi_offset 3, -16
 428              		.cfi_offset 4, -12
 429              		.cfi_offset 5, -8
 430              		.cfi_offset 14, -4
 340:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 431              		.loc 1 340 0
 432 0004 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 433 0008 0446     		mov	r4, r0
 434 000a 03F0FF02 		and	r2, r3, #255
 435 000e 23B3     		cbz	r3, .L42
 436              	.LVL29:
 437              	.L36:
 348:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/cc3lpWmf.s 			page 54


 438              		.loc 1 348 0
 439 0010 2423     		movs	r3, #36
 351:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 440              		.loc 1 351 0
 441 0012 2268     		ldr	r2, [r4]
 348:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 442              		.loc 1 348 0
 443 0014 84F83930 		strb	r3, [r4, #57]
 351:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 444              		.loc 1 351 0
 445 0018 D368     		ldr	r3, [r2, #12]
 354:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 446              		.loc 1 354 0
 447 001a 2046     		mov	r0, r4
 351:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 448              		.loc 1 351 0
 449 001c 23F40053 		bic	r3, r3, #8192
 450 0020 D360     		str	r3, [r2, #12]
 354:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 451              		.loc 1 354 0
 452 0022 FFF7FEFF 		bl	UART_SetConfig
 453              	.LVL30:
 369:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 454              		.loc 1 369 0
 455 0026 0025     		movs	r5, #0
 370:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 456              		.loc 1 370 0
 457 0028 2021     		movs	r1, #32
 359:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 458              		.loc 1 359 0
 459 002a 2368     		ldr	r3, [r4]
 373:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 460              		.loc 1 373 0
 461 002c 2846     		mov	r0, r5
 359:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 462              		.loc 1 359 0
 463 002e 1A69     		ldr	r2, [r3, #16]
 464 0030 22F49042 		bic	r2, r2, #18432
 465 0034 1A61     		str	r2, [r3, #16]
 360:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 466              		.loc 1 360 0
 467 0036 5A69     		ldr	r2, [r3, #20]
 468 0038 22F02202 		bic	r2, r2, #34
 469 003c 5A61     		str	r2, [r3, #20]
 363:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 470              		.loc 1 363 0
 471 003e 5A69     		ldr	r2, [r3, #20]
 472 0040 42F00802 		orr	r2, r2, #8
 473 0044 5A61     		str	r2, [r3, #20]
 366:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 474              		.loc 1 366 0
 475 0046 DA68     		ldr	r2, [r3, #12]
 476 0048 42F40052 		orr	r2, r2, #8192
 477 004c DA60     		str	r2, [r3, #12]
 369:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 478              		.loc 1 369 0
 479 004e E563     		str	r5, [r4, #60]
ARM GAS  /tmp/cc3lpWmf.s 			page 55


 370:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 480              		.loc 1 370 0
 481 0050 84F83910 		strb	r1, [r4, #57]
 371:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 482              		.loc 1 371 0
 483 0054 84F83A10 		strb	r1, [r4, #58]
 373:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 484              		.loc 1 373 0
 485 0058 38BD     		pop	{r3, r4, r5, pc}
 486              	.LVL31:
 487              	.L42:
 343:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 488              		.loc 1 343 0
 489 005a 80F83820 		strb	r2, [r0, #56]
 345:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 490              		.loc 1 345 0
 491 005e FFF7FEFF 		bl	HAL_UART_MspInit
 492              	.LVL32:
 493 0062 D5E7     		b	.L36
 494              	.LVL33:
 495              	.L37:
 496              		.cfi_def_cfa_offset 0
 497              		.cfi_restore 3
 498              		.cfi_restore 4
 499              		.cfi_restore 5
 500              		.cfi_restore 14
 331:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 501              		.loc 1 331 0
 502 0064 0120     		movs	r0, #1
 503              	.LVL34:
 504 0066 7047     		bx	lr
 505              		.cfi_endproc
 506              	.LFE65:
 508              		.section	.text.HAL_LIN_Init,"ax",%progbits
 509              		.align	1
 510              		.p2align 2,,3
 511              		.global	HAL_LIN_Init
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 515              		.fpu softvfp
 517              	HAL_LIN_Init:
 518              	.LFB66:
 388:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 519              		.loc 1 388 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              	.LVL35:
 390:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 524              		.loc 1 390 0
 525 0000 0028     		cmp	r0, #0
 526 0002 36D0     		beq	.L46
 388:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 527              		.loc 1 388 0
 528 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 529              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc3lpWmf.s 			page 56


 530              		.cfi_offset 3, -24
 531              		.cfi_offset 4, -20
 532              		.cfi_offset 5, -16
 533              		.cfi_offset 6, -12
 534              		.cfi_offset 7, -8
 535              		.cfi_offset 14, -4
 404:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 536              		.loc 1 404 0
 537 0006 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 538 000a 0446     		mov	r4, r0
 539 000c 0D46     		mov	r5, r1
 540 000e 03F0FF02 		and	r2, r3, #255
 541 0012 4BB3     		cbz	r3, .L51
 542              	.LVL36:
 543              	.L45:
 412:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 544              		.loc 1 412 0
 545 0014 2423     		movs	r3, #36
 436:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 546              		.loc 1 436 0
 547 0016 0027     		movs	r7, #0
 437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 548              		.loc 1 437 0
 549 0018 2026     		movs	r6, #32
 415:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 550              		.loc 1 415 0
 551 001a 2268     		ldr	r2, [r4]
 412:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 552              		.loc 1 412 0
 553 001c 84F83930 		strb	r3, [r4, #57]
 415:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 554              		.loc 1 415 0
 555 0020 D368     		ldr	r3, [r2, #12]
 418:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 556              		.loc 1 418 0
 557 0022 2046     		mov	r0, r4
 415:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 558              		.loc 1 415 0
 559 0024 23F40053 		bic	r3, r3, #8192
 560 0028 D360     		str	r3, [r2, #12]
 418:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 561              		.loc 1 418 0
 562 002a FFF7FEFF 		bl	UART_SetConfig
 563              	.LVL37:
 423:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 564              		.loc 1 423 0
 565 002e 2368     		ldr	r3, [r4]
 440:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 566              		.loc 1 440 0
 567 0030 3846     		mov	r0, r7
 423:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 568              		.loc 1 423 0
 569 0032 1A69     		ldr	r2, [r3, #16]
 570 0034 22F40062 		bic	r2, r2, #2048
 571 0038 1A61     		str	r2, [r3, #16]
 424:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 572              		.loc 1 424 0
ARM GAS  /tmp/cc3lpWmf.s 			page 57


 573 003a 5A69     		ldr	r2, [r3, #20]
 574 003c 22F02A02 		bic	r2, r2, #42
 575 0040 5A61     		str	r2, [r3, #20]
 427:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 576              		.loc 1 427 0
 577 0042 1A69     		ldr	r2, [r3, #16]
 578 0044 42F48042 		orr	r2, r2, #16384
 579 0048 1A61     		str	r2, [r3, #16]
 430:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 580              		.loc 1 430 0
 581 004a 1A69     		ldr	r2, [r3, #16]
 582 004c 22F02002 		bic	r2, r2, #32
 583 0050 2A43     		orrs	r2, r2, r5
 584 0052 1A61     		str	r2, [r3, #16]
 433:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 585              		.loc 1 433 0
 586 0054 DA68     		ldr	r2, [r3, #12]
 587 0056 42F40052 		orr	r2, r2, #8192
 588 005a DA60     		str	r2, [r3, #12]
 436:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 589              		.loc 1 436 0
 590 005c E763     		str	r7, [r4, #60]
 437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 591              		.loc 1 437 0
 592 005e 84F83960 		strb	r6, [r4, #57]
 438:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 593              		.loc 1 438 0
 594 0062 84F83A60 		strb	r6, [r4, #58]
 440:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 595              		.loc 1 440 0
 596 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 597              	.LVL38:
 598              	.L51:
 407:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 599              		.loc 1 407 0
 600 0068 80F83820 		strb	r2, [r0, #56]
 409:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 601              		.loc 1 409 0
 602 006c FFF7FEFF 		bl	HAL_UART_MspInit
 603              	.LVL39:
 604 0070 D0E7     		b	.L45
 605              	.LVL40:
 606              	.L46:
 607              		.cfi_def_cfa_offset 0
 608              		.cfi_restore 3
 609              		.cfi_restore 4
 610              		.cfi_restore 5
 611              		.cfi_restore 6
 612              		.cfi_restore 7
 613              		.cfi_restore 14
 392:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 614              		.loc 1 392 0
 615 0072 0120     		movs	r0, #1
 616              	.LVL41:
 617 0074 7047     		bx	lr
 618              		.cfi_endproc
 619              	.LFE66:
ARM GAS  /tmp/cc3lpWmf.s 			page 58


 621 0076 00BF     		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 622              		.align	1
 623              		.p2align 2,,3
 624              		.global	HAL_MultiProcessor_Init
 625              		.syntax unified
 626              		.thumb
 627              		.thumb_func
 628              		.fpu softvfp
 630              	HAL_MultiProcessor_Init:
 631              	.LFB67:
 456:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 632              		.loc 1 456 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              	.LVL42:
 458:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 637              		.loc 1 458 0
 638 0000 0028     		cmp	r0, #0
 639 0002 3BD0     		beq	.L55
 456:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 640              		.loc 1 456 0
 641 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 642              		.cfi_def_cfa_offset 24
 643              		.cfi_offset 3, -24
 644              		.cfi_offset 4, -20
 645              		.cfi_offset 5, -16
 646              		.cfi_offset 6, -12
 647              		.cfi_offset 7, -8
 648              		.cfi_offset 14, -4
 474:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 649              		.loc 1 474 0
 650 0006 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 651 000a 1646     		mov	r6, r2
 652 000c 0446     		mov	r4, r0
 653 000e 0F46     		mov	r7, r1
 654 0010 03F0FF02 		and	r2, r3, #255
 655              	.LVL43:
 656 0014 6BB3     		cbz	r3, .L60
 657              	.LVL44:
 658              	.L54:
 482:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 659              		.loc 1 482 0
 660 0016 2423     		movs	r3, #36
 485:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 661              		.loc 1 485 0
 662 0018 2268     		ldr	r2, [r4]
 482:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 663              		.loc 1 482 0
 664 001a 84F83930 		strb	r3, [r4, #57]
 485:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 665              		.loc 1 485 0
 666 001e D368     		ldr	r3, [r2, #12]
 488:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 667              		.loc 1 488 0
 668 0020 2046     		mov	r0, r4
 485:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
ARM GAS  /tmp/cc3lpWmf.s 			page 59


 669              		.loc 1 485 0
 670 0022 23F40053 		bic	r3, r3, #8192
 671 0026 D360     		str	r3, [r2, #12]
 488:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 672              		.loc 1 488 0
 673 0028 FFF7FEFF 		bl	UART_SetConfig
 674              	.LVL45:
 506:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 675              		.loc 1 506 0
 676 002c 4FF0000C 		mov	ip, #0
 507:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 677              		.loc 1 507 0
 678 0030 4FF0200E 		mov	lr, #32
 493:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 679              		.loc 1 493 0
 680 0034 2368     		ldr	r3, [r4]
 510:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 681              		.loc 1 510 0
 682 0036 6046     		mov	r0, ip
 493:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 683              		.loc 1 493 0
 684 0038 1A69     		ldr	r2, [r3, #16]
 685 003a 22F49042 		bic	r2, r2, #18432
 686 003e 1A61     		str	r2, [r3, #16]
 494:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 687              		.loc 1 494 0
 688 0040 5A69     		ldr	r2, [r3, #20]
 689 0042 22F02A02 		bic	r2, r2, #42
 690 0046 5A61     		str	r2, [r3, #20]
 497:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 691              		.loc 1 497 0
 692 0048 1D69     		ldr	r5, [r3, #16]
 693 004a 25F00F05 		bic	r5, r5, #15
 694 004e 3D43     		orrs	r5, r5, r7
 695 0050 1D61     		str	r5, [r3, #16]
 500:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 696              		.loc 1 500 0
 697 0052 D968     		ldr	r1, [r3, #12]
 698 0054 21F40061 		bic	r1, r1, #2048
 699 0058 3143     		orrs	r1, r1, r6
 700 005a D960     		str	r1, [r3, #12]
 503:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 701              		.loc 1 503 0
 702 005c DA68     		ldr	r2, [r3, #12]
 703 005e 42F40052 		orr	r2, r2, #8192
 704 0062 DA60     		str	r2, [r3, #12]
 506:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 705              		.loc 1 506 0
 706 0064 C4F83CC0 		str	ip, [r4, #60]
 507:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 707              		.loc 1 507 0
 708 0068 84F839E0 		strb	lr, [r4, #57]
 508:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 709              		.loc 1 508 0
 710 006c 84F83AE0 		strb	lr, [r4, #58]
 510:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 711              		.loc 1 510 0
ARM GAS  /tmp/cc3lpWmf.s 			page 60


 712 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 713              	.LVL46:
 714              	.L60:
 477:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 715              		.loc 1 477 0
 716 0072 80F83820 		strb	r2, [r0, #56]
 479:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 717              		.loc 1 479 0
 718 0076 FFF7FEFF 		bl	HAL_UART_MspInit
 719              	.LVL47:
 720 007a CCE7     		b	.L54
 721              	.LVL48:
 722              	.L55:
 723              		.cfi_def_cfa_offset 0
 724              		.cfi_restore 3
 725              		.cfi_restore 4
 726              		.cfi_restore 5
 727              		.cfi_restore 6
 728              		.cfi_restore 7
 729              		.cfi_restore 14
 460:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 730              		.loc 1 460 0
 731 007c 0120     		movs	r0, #1
 732              	.LVL49:
 733 007e 7047     		bx	lr
 734              		.cfi_endproc
 735              	.LFE67:
 737              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 738              		.align	1
 739              		.p2align 2,,3
 740              		.weak	HAL_UART_MspDeInit
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 744              		.fpu softvfp
 746              	HAL_UART_MspDeInit:
 747              	.LFB136:
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751              		@ link register save eliminated.
 752 0000 7047     		bx	lr
 753              		.cfi_endproc
 754              	.LFE136:
 756 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 757              		.align	1
 758              		.p2align 2,,3
 759              		.global	HAL_UART_DeInit
 760              		.syntax unified
 761              		.thumb
 762              		.thumb_func
 763              		.fpu softvfp
 765              	HAL_UART_DeInit:
 766              	.LFB68:
 520:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 767              		.loc 1 520 0
 768              		.cfi_startproc
ARM GAS  /tmp/cc3lpWmf.s 			page 61


 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              	.LVL50:
 522:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 772              		.loc 1 522 0
 773 0000 80B1     		cbz	r0, .L64
 530:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 774              		.loc 1 530 0
 775 0002 2423     		movs	r3, #36
 520:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 776              		.loc 1 520 0
 777 0004 10B5     		push	{r4, lr}
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 4, -8
 780              		.cfi_offset 14, -4
 530:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 781              		.loc 1 530 0
 782 0006 80F83930 		strb	r3, [r0, #57]
 783 000a 0446     		mov	r4, r0
 533:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 784              		.loc 1 533 0
 785 000c FFF7FEFF 		bl	HAL_UART_MspDeInit
 786              	.LVL51:
 535:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 787              		.loc 1 535 0
 788 0010 0023     		movs	r3, #0
 789 0012 E363     		str	r3, [r4, #60]
 540:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 790              		.loc 1 540 0
 791 0014 84F83830 		strb	r3, [r4, #56]
 536:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 792              		.loc 1 536 0
 793 0018 84F83930 		strb	r3, [r4, #57]
 542:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 794              		.loc 1 542 0
 795 001c 1846     		mov	r0, r3
 537:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 796              		.loc 1 537 0
 797 001e 84F83A30 		strb	r3, [r4, #58]
 542:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 798              		.loc 1 542 0
 799 0022 10BD     		pop	{r4, pc}
 800              	.LVL52:
 801              	.L64:
 802              		.cfi_def_cfa_offset 0
 803              		.cfi_restore 4
 804              		.cfi_restore 14
 524:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 805              		.loc 1 524 0
 806 0024 0120     		movs	r0, #1
 807              	.LVL53:
 808 0026 7047     		bx	lr
 809              		.cfi_endproc
 810              	.LFE68:
 812              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 813              		.align	1
 814              		.p2align 2,,3
ARM GAS  /tmp/cc3lpWmf.s 			page 62


 815              		.global	HAL_UART_Transmit
 816              		.syntax unified
 817              		.thumb
 818              		.thumb_func
 819              		.fpu softvfp
 821              	HAL_UART_Transmit:
 822              	.LFB71:
 646:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 823              		.loc 1 646 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 8
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              	.LVL54:
 828 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 829              		.cfi_def_cfa_offset 20
 830              		.cfi_offset 4, -20
 831              		.cfi_offset 5, -16
 832              		.cfi_offset 6, -12
 833              		.cfi_offset 7, -8
 834              		.cfi_offset 14, -4
 835 0002 0446     		mov	r4, r0
 651:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 836              		.loc 1 651 0
 837 0004 90F83900 		ldrb	r0, [r0, #57]	@ zero_extendqisi2
 838              	.LVL55:
 646:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 839              		.loc 1 646 0
 840 0008 83B0     		sub	sp, sp, #12
 841              		.cfi_def_cfa_offset 32
 651:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 842              		.loc 1 651 0
 843 000a 2028     		cmp	r0, #32
 844 000c 02D0     		beq	.L83
 845              	.LVL56:
 846              	.L81:
 714:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 847              		.loc 1 714 0
 848 000e 0220     		movs	r0, #2
 849              	.LVL57:
 850              	.L70:
 716:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 851              		.loc 1 716 0
 852 0010 03B0     		add	sp, sp, #12
 853              		.cfi_remember_state
 854              		.cfi_def_cfa_offset 20
 855              		@ sp needed
 856 0012 F0BD     		pop	{r4, r5, r6, r7, pc}
 857              	.LVL58:
 858              	.L83:
 859              		.cfi_restore_state
 860 0014 0D46     		mov	r5, r1
 653:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 861              		.loc 1 653 0
 862 0016 0029     		cmp	r1, #0
 863 0018 39D0     		beq	.L80
 653:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 864              		.loc 1 653 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc3lpWmf.s 			page 63


 865 001a 002A     		cmp	r2, #0
 866 001c 37D0     		beq	.L80
 867 001e 1E46     		mov	r6, r3
 659:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 868              		.loc 1 659 0 is_stmt 1
 869 0020 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 870              	.LVL59:
 871 0024 012B     		cmp	r3, #1
 872 0026 F2D0     		beq	.L81
 661:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 873              		.loc 1 661 0 discriminator 2
 874 0028 0020     		movs	r0, #0
 659:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 875              		.loc 1 659 0 discriminator 2
 876 002a 0121     		movs	r1, #1
 877              	.LVL60:
 662:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 878              		.loc 1 662 0 discriminator 2
 879 002c 2123     		movs	r3, #33
 661:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 880              		.loc 1 661 0 discriminator 2
 881 002e E063     		str	r0, [r4, #60]
 659:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 882              		.loc 1 659 0 discriminator 2
 883 0030 84F83810 		strb	r1, [r4, #56]
 662:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 884              		.loc 1 662 0 discriminator 2
 885 0034 84F83930 		strb	r3, [r4, #57]
 886 0038 0192     		str	r2, [sp, #4]
 665:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 887              		.loc 1 665 0 discriminator 2
 888 003a FFF7FEFF 		bl	HAL_GetTick
 889              	.LVL61:
 890 003e 0746     		mov	r7, r0
 891              	.LVL62:
 667:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 892              		.loc 1 667 0 discriminator 2
 893 0040 019A     		ldr	r2, [sp, #4]
 894 0042 A284     		strh	r2, [r4, #36]	@ movhi
 668:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 895              		.loc 1 668 0 discriminator 2
 896 0044 E284     		strh	r2, [r4, #38]	@ movhi
 897              	.LVL63:
 898              	.L71:
 669:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 899              		.loc 1 669 0
 900 0046 E38C     		ldrh	r3, [r4, #38]
 901 0048 9BB2     		uxth	r3, r3
 902 004a BBB1     		cbz	r3, .L84
 903              	.L77:
 671:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 904              		.loc 1 671 0
 905 004c E38C     		ldrh	r3, [r4, #38]
 672:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 906              		.loc 1 672 0
 907 004e A268     		ldr	r2, [r4, #8]
 671:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
ARM GAS  /tmp/cc3lpWmf.s 			page 64


 908              		.loc 1 671 0
 909 0050 013B     		subs	r3, r3, #1
 910 0052 9BB2     		uxth	r3, r3
 672:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 911              		.loc 1 672 0
 912 0054 B2F5805F 		cmp	r2, #4096
 671:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 913              		.loc 1 671 0
 914 0058 E384     		strh	r3, [r4, #38]	@ movhi
 674:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 915              		.loc 1 674 0
 916 005a 3A46     		mov	r2, r7
 917 005c 3346     		mov	r3, r6
 918 005e 4FF08001 		mov	r1, #128
 919 0062 2046     		mov	r0, r4
 672:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 920              		.loc 1 672 0
 921 0064 15D0     		beq	.L85
 922              	.LVL64:
 691:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 923              		.loc 1 691 0
 924 0066 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout.constprop.3
 925              	.LVL65:
 926 006a 70B9     		cbnz	r0, .L76
 695:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 927              		.loc 1 695 0
 928 006c 2368     		ldr	r3, [r4]
 929 006e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 930 0070 0135     		adds	r5, r5, #1
 931              	.LVL66:
 932 0072 5A60     		str	r2, [r3, #4]
 669:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 933              		.loc 1 669 0
 934 0074 E38C     		ldrh	r3, [r4, #38]
 935 0076 9BB2     		uxth	r3, r3
 936 0078 002B     		cmp	r3, #0
 937 007a E7D1     		bne	.L77
 938              	.L84:
 699:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 939              		.loc 1 699 0
 940 007c 3346     		mov	r3, r6
 941 007e 3A46     		mov	r2, r7
 942 0080 4021     		movs	r1, #64
 943 0082 2046     		mov	r0, r4
 944 0084 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout.constprop.3
 945              	.LVL67:
 946 0088 90B1     		cbz	r0, .L86
 947              	.LVL68:
 948              	.L76:
 676:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 949              		.loc 1 676 0
 950 008a 0320     		movs	r0, #3
 951 008c C0E7     		b	.L70
 952              	.LVL69:
 953              	.L80:
 655:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 954              		.loc 1 655 0
ARM GAS  /tmp/cc3lpWmf.s 			page 65


 955 008e 0120     		movs	r0, #1
 956 0090 BEE7     		b	.L70
 957              	.LVL70:
 958              	.L85:
 674:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 959              		.loc 1 674 0
 960 0092 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout.constprop.3
 961              	.LVL71:
 962 0096 0028     		cmp	r0, #0
 963 0098 F7D1     		bne	.L76
 679:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 964              		.loc 1 679 0
 965 009a 2B88     		ldrh	r3, [r5]
 966 009c 2168     		ldr	r1, [r4]
 680:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 967              		.loc 1 680 0
 968 009e 2269     		ldr	r2, [r4, #16]
 679:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 969              		.loc 1 679 0
 970 00a0 C3F30803 		ubfx	r3, r3, #0, #9
 971 00a4 4B60     		str	r3, [r1, #4]
 680:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 972              		.loc 1 680 0
 973 00a6 0AB9     		cbnz	r2, .L74
 682:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 974              		.loc 1 682 0
 975 00a8 0235     		adds	r5, r5, #2
 976              	.LVL72:
 977 00aa CCE7     		b	.L71
 978              	.LVL73:
 979              	.L74:
 686:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 980              		.loc 1 686 0
 981 00ac 0135     		adds	r5, r5, #1
 982              	.LVL74:
 983 00ae CAE7     		b	.L71
 984              	.LVL75:
 985              	.L86:
 705:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 986              		.loc 1 705 0
 987 00b0 2023     		movs	r3, #32
 708:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 988              		.loc 1 708 0
 989 00b2 84F83800 		strb	r0, [r4, #56]
 705:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 990              		.loc 1 705 0
 991 00b6 84F83930 		strb	r3, [r4, #57]
 710:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 992              		.loc 1 710 0
 993 00ba A9E7     		b	.L70
 994              		.cfi_endproc
 995              	.LFE71:
 997              		.section	.text.HAL_UART_Receive,"ax",%progbits
 998              		.align	1
 999              		.p2align 2,,3
 1000              		.global	HAL_UART_Receive
 1001              		.syntax unified
ARM GAS  /tmp/cc3lpWmf.s 			page 66


 1002              		.thumb
 1003              		.thumb_func
 1004              		.fpu softvfp
 1006              	HAL_UART_Receive:
 1007              	.LFB72:
 728:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 1008              		.loc 1 728 0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 8
 1011              		@ frame_needed = 0, uses_anonymous_args = 0
 1012              	.LVL76:
 1013 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1014              		.cfi_def_cfa_offset 20
 1015              		.cfi_offset 4, -20
 1016              		.cfi_offset 5, -16
 1017              		.cfi_offset 6, -12
 1018              		.cfi_offset 7, -8
 1019              		.cfi_offset 14, -4
 1020 0002 0446     		mov	r4, r0
 733:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1021              		.loc 1 733 0
 1022 0004 90F83A00 		ldrb	r0, [r0, #58]	@ zero_extendqisi2
 1023              	.LVL77:
 728:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 1024              		.loc 1 728 0
 1025 0008 83B0     		sub	sp, sp, #12
 1026              		.cfi_def_cfa_offset 32
 733:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1027              		.loc 1 733 0
 1028 000a 2028     		cmp	r0, #32
 1029 000c 02D0     		beq	.L102
 1030              	.LVL78:
 1031              	.L100:
 803:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1032              		.loc 1 803 0
 1033 000e 0220     		movs	r0, #2
 1034              	.LVL79:
 1035              	.L88:
 805:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1036              		.loc 1 805 0
 1037 0010 03B0     		add	sp, sp, #12
 1038              		.cfi_remember_state
 1039              		.cfi_def_cfa_offset 20
 1040              		@ sp needed
 1041 0012 F0BD     		pop	{r4, r5, r6, r7, pc}
 1042              	.LVL80:
 1043              	.L102:
 1044              		.cfi_restore_state
 1045 0014 0D46     		mov	r5, r1
 735:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1046              		.loc 1 735 0
 1047 0016 0029     		cmp	r1, #0
 1048 0018 39D0     		beq	.L99
 735:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1049              		.loc 1 735 0 is_stmt 0 discriminator 1
 1050 001a 002A     		cmp	r2, #0
 1051 001c 37D0     		beq	.L99
ARM GAS  /tmp/cc3lpWmf.s 			page 67


 1052 001e 1E46     		mov	r6, r3
 741:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1053              		.loc 1 741 0 is_stmt 1
 1054 0020 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 1055              	.LVL81:
 1056 0024 012B     		cmp	r3, #1
 1057 0026 F2D0     		beq	.L100
 743:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1058              		.loc 1 743 0 discriminator 2
 1059 0028 0020     		movs	r0, #0
 741:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1060              		.loc 1 741 0 discriminator 2
 1061 002a 0121     		movs	r1, #1
 1062              	.LVL82:
 744:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1063              		.loc 1 744 0 discriminator 2
 1064 002c 2223     		movs	r3, #34
 743:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1065              		.loc 1 743 0 discriminator 2
 1066 002e E063     		str	r0, [r4, #60]
 741:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1067              		.loc 1 741 0 discriminator 2
 1068 0030 84F83810 		strb	r1, [r4, #56]
 744:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1069              		.loc 1 744 0 discriminator 2
 1070 0034 84F83A30 		strb	r3, [r4, #58]
 1071 0038 0192     		str	r2, [sp, #4]
 747:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1072              		.loc 1 747 0 discriminator 2
 1073 003a FFF7FEFF 		bl	HAL_GetTick
 1074              	.LVL83:
 1075 003e 0746     		mov	r7, r0
 1076              	.LVL84:
 749:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1077              		.loc 1 749 0 discriminator 2
 1078 0040 019A     		ldr	r2, [sp, #4]
 1079 0042 A285     		strh	r2, [r4, #44]	@ movhi
 750:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1080              		.loc 1 750 0 discriminator 2
 1081 0044 E285     		strh	r2, [r4, #46]	@ movhi
 1082              	.LVL85:
 1083              	.L89:
 753:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1084              		.loc 1 753 0
 1085 0046 E08D     		ldrh	r0, [r4, #46]
 1086 0048 80B2     		uxth	r0, r0
 1087 004a D0B1     		cbz	r0, .L103
 1088              	.L96:
 755:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1089              		.loc 1 755 0
 1090 004c E38D     		ldrh	r3, [r4, #46]
 756:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 1091              		.loc 1 756 0
 1092 004e A268     		ldr	r2, [r4, #8]
 755:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1093              		.loc 1 755 0
 1094 0050 013B     		subs	r3, r3, #1
ARM GAS  /tmp/cc3lpWmf.s 			page 68


 1095 0052 9BB2     		uxth	r3, r3
 756:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 1096              		.loc 1 756 0
 1097 0054 B2F5805F 		cmp	r2, #4096
 755:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1098              		.loc 1 755 0
 1099 0058 E385     		strh	r3, [r4, #46]	@ movhi
 758:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1100              		.loc 1 758 0
 1101 005a 3A46     		mov	r2, r7
 1102 005c 3346     		mov	r3, r6
 1103 005e 4FF02001 		mov	r1, #32
 1104 0062 2046     		mov	r0, r4
 756:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 1105              		.loc 1 756 0
 1106 0064 1DD0     		beq	.L104
 1107              	.LVL86:
 777:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1108              		.loc 1 777 0
 1109 0066 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout.constprop.3
 1110              	.LVL87:
 1111 006a 60BB     		cbnz	r0, .L94
 781:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1112              		.loc 1 781 0
 1113 006c 2369     		ldr	r3, [r4, #16]
 1114 006e 83B9     		cbnz	r3, .L95
 783:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1115              		.loc 1 783 0
 1116 0070 2368     		ldr	r3, [r4]
 1117 0072 0135     		adds	r5, r5, #1
 1118              	.LVL88:
 1119 0074 5B68     		ldr	r3, [r3, #4]
 1120 0076 05F8013C 		strb	r3, [r5, #-1]
 753:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1121              		.loc 1 753 0
 1122 007a E08D     		ldrh	r0, [r4, #46]
 1123 007c 80B2     		uxth	r0, r0
 1124 007e 0028     		cmp	r0, #0
 1125 0080 E4D1     		bne	.L96
 1126              	.L103:
 794:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1127              		.loc 1 794 0
 1128 0082 2023     		movs	r3, #32
 797:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1129              		.loc 1 797 0
 1130 0084 84F83800 		strb	r0, [r4, #56]
 794:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1131              		.loc 1 794 0
 1132 0088 84F83A30 		strb	r3, [r4, #58]
 799:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1133              		.loc 1 799 0
 1134 008c C0E7     		b	.L88
 1135              	.LVL89:
 1136              	.L99:
 737:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1137              		.loc 1 737 0
 1138 008e 0120     		movs	r0, #1
ARM GAS  /tmp/cc3lpWmf.s 			page 69


 1139 0090 BEE7     		b	.L88
 1140              	.LVL90:
 1141              	.L95:
 787:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1142              		.loc 1 787 0
 1143 0092 2368     		ldr	r3, [r4]
 1144 0094 0135     		adds	r5, r5, #1
 1145              	.LVL91:
 1146 0096 5B68     		ldr	r3, [r3, #4]
 1147 0098 03F07F03 		and	r3, r3, #127
 1148 009c 05F8013C 		strb	r3, [r5, #-1]
 1149 00a0 D1E7     		b	.L89
 1150              	.LVL92:
 1151              	.L104:
 758:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1152              		.loc 1 758 0
 1153 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout.constprop.3
 1154              	.LVL93:
 1155 00a6 70B9     		cbnz	r0, .L94
 763:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 1156              		.loc 1 763 0
 1157 00a8 2369     		ldr	r3, [r4, #16]
 1158 00aa 33B9     		cbnz	r3, .L92
 765:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=2U;
 1159              		.loc 1 765 0
 1160 00ac 2368     		ldr	r3, [r4]
 1161 00ae 5B68     		ldr	r3, [r3, #4]
 1162 00b0 C3F30803 		ubfx	r3, r3, #0, #9
 1163 00b4 25F8023B 		strh	r3, [r5], #2	@ movhi
 1164              	.LVL94:
 1165 00b8 C5E7     		b	.L89
 1166              	.LVL95:
 1167              	.L92:
 770:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=1U;
 1168              		.loc 1 770 0
 1169 00ba 2368     		ldr	r3, [r4]
 1170 00bc 5B68     		ldr	r3, [r3, #4]
 1171 00be DBB2     		uxtb	r3, r3
 1172 00c0 25F8013B 		strh	r3, [r5], #1	@ movhi
 1173              	.LVL96:
 1174 00c4 BFE7     		b	.L89
 1175              	.LVL97:
 1176              	.L94:
 760:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 1177              		.loc 1 760 0
 1178 00c6 0320     		movs	r0, #3
 1179 00c8 A2E7     		b	.L88
 1180              		.cfi_endproc
 1181              	.LFE72:
 1183 00ca 00BF     		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1184              		.align	1
 1185              		.p2align 2,,3
 1186              		.global	HAL_UART_Transmit_IT
 1187              		.syntax unified
 1188              		.thumb
 1189              		.thumb_func
 1190              		.fpu softvfp
ARM GAS  /tmp/cc3lpWmf.s 			page 70


 1192              	HAL_UART_Transmit_IT:
 1193              	.LFB73:
 816:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1194              		.loc 1 816 0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 0
 1197              		@ frame_needed = 0, uses_anonymous_args = 0
 1198              		@ link register save eliminated.
 1199              	.LVL98:
 818:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1200              		.loc 1 818 0
 1201 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1202 0004 202B     		cmp	r3, #32
 1203 0006 01D0     		beq	.L115
 1204              	.L110:
 844:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1205              		.loc 1 844 0
 1206 0008 0220     		movs	r0, #2
 1207              	.LVL99:
 1208 000a 7047     		bx	lr
 1209              	.LVL100:
 1210              	.L115:
 820:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1211              		.loc 1 820 0
 1212 000c B9B1     		cbz	r1, .L109
 820:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1213              		.loc 1 820 0 is_stmt 0 discriminator 1
 1214 000e B2B1     		cbz	r2, .L109
 825:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1215              		.loc 1 825 0 is_stmt 1
 1216 0010 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1217 0014 012B     		cmp	r3, #1
 1218 0016 F7D0     		beq	.L110
 816:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1219              		.loc 1 816 0 discriminator 2
 1220 0018 30B4     		push	{r4, r5}
 1221              		.cfi_def_cfa_offset 8
 1222              		.cfi_offset 4, -8
 1223              		.cfi_offset 5, -4
 831:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1224              		.loc 1 831 0 discriminator 2
 1225 001a 0023     		movs	r3, #0
 832:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1226              		.loc 1 832 0 discriminator 2
 1227 001c 2124     		movs	r4, #33
 838:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1228              		.loc 1 838 0 discriminator 2
 1229 001e 0568     		ldr	r5, [r0]
 829:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1230              		.loc 1 829 0 discriminator 2
 1231 0020 C284     		strh	r2, [r0, #38]	@ movhi
 831:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1232              		.loc 1 831 0 discriminator 2
 1233 0022 C363     		str	r3, [r0, #60]
 832:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1234              		.loc 1 832 0 discriminator 2
 1235 0024 80F83940 		strb	r4, [r0, #57]
ARM GAS  /tmp/cc3lpWmf.s 			page 71


 838:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1236              		.loc 1 838 0 discriminator 2
 1237 0028 EC68     		ldr	r4, [r5, #12]
 827:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1238              		.loc 1 827 0 discriminator 2
 1239 002a 0162     		str	r1, [r0, #32]
 838:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1240              		.loc 1 838 0 discriminator 2
 1241 002c 44F08004 		orr	r4, r4, #128
 828:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1242              		.loc 1 828 0 discriminator 2
 1243 0030 8284     		strh	r2, [r0, #36]	@ movhi
 835:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1244              		.loc 1 835 0 discriminator 2
 1245 0032 80F83830 		strb	r3, [r0, #56]
 840:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1246              		.loc 1 840 0 discriminator 2
 1247 0036 1846     		mov	r0, r3
 1248              	.LVL101:
 838:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1249              		.loc 1 838 0 discriminator 2
 1250 0038 EC60     		str	r4, [r5, #12]
 846:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1251              		.loc 1 846 0 discriminator 2
 1252 003a 30BC     		pop	{r4, r5}
 1253              		.cfi_restore 5
 1254              		.cfi_restore 4
 1255              		.cfi_def_cfa_offset 0
 1256 003c 7047     		bx	lr
 1257              	.LVL102:
 1258              	.L109:
 822:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1259              		.loc 1 822 0
 1260 003e 0120     		movs	r0, #1
 1261              	.LVL103:
 1262 0040 7047     		bx	lr
 1263              		.cfi_endproc
 1264              	.LFE73:
 1266 0042 00BF     		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1267              		.align	1
 1268              		.p2align 2,,3
 1269              		.global	HAL_UART_Receive_IT
 1270              		.syntax unified
 1271              		.thumb
 1272              		.thumb_func
 1273              		.fpu softvfp
 1275              	HAL_UART_Receive_IT:
 1276              	.LFB74:
 857:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 1277              		.loc 1 857 0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
 1281              		@ link register save eliminated.
 1282              	.LVL104:
 859:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1283              		.loc 1 859 0
ARM GAS  /tmp/cc3lpWmf.s 			page 72


 1284 0000 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1285 0004 202B     		cmp	r3, #32
 1286 0006 01D0     		beq	.L126
 1287              	.L121:
 892:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1288              		.loc 1 892 0
 1289 0008 0220     		movs	r0, #2
 1290              	.LVL105:
 1291 000a 7047     		bx	lr
 1292              	.LVL106:
 1293              	.L126:
 861:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1294              		.loc 1 861 0
 1295 000c F9B1     		cbz	r1, .L120
 861:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1296              		.loc 1 861 0 is_stmt 0 discriminator 1
 1297 000e F2B1     		cbz	r2, .L120
 867:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1298              		.loc 1 867 0 is_stmt 1
 1299 0010 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1300 0014 012B     		cmp	r3, #1
 1301 0016 F7D0     		beq	.L121
 857:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 1302              		.loc 1 857 0 discriminator 2
 1303 0018 30B4     		push	{r4, r5}
 1304              		.cfi_def_cfa_offset 8
 1305              		.cfi_offset 4, -8
 1306              		.cfi_offset 5, -4
 873:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1307              		.loc 1 873 0 discriminator 2
 1308 001a 0023     		movs	r3, #0
 874:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1309              		.loc 1 874 0 discriminator 2
 1310 001c 2225     		movs	r5, #34
 880:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1311              		.loc 1 880 0 discriminator 2
 1312 001e 0468     		ldr	r4, [r0]
 871:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1313              		.loc 1 871 0 discriminator 2
 1314 0020 C285     		strh	r2, [r0, #46]	@ movhi
 873:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1315              		.loc 1 873 0 discriminator 2
 1316 0022 C363     		str	r3, [r0, #60]
 874:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1317              		.loc 1 874 0 discriminator 2
 1318 0024 80F83A50 		strb	r5, [r0, #58]
 880:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1319              		.loc 1 880 0 discriminator 2
 1320 0028 E568     		ldr	r5, [r4, #12]
 870:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1321              		.loc 1 870 0 discriminator 2
 1322 002a 8285     		strh	r2, [r0, #44]	@ movhi
 880:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1323              		.loc 1 880 0 discriminator 2
 1324 002c 45F48075 		orr	r5, r5, #256
 877:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1325              		.loc 1 877 0 discriminator 2
ARM GAS  /tmp/cc3lpWmf.s 			page 73


 1326 0030 80F83830 		strb	r3, [r0, #56]
 869:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1327              		.loc 1 869 0 discriminator 2
 1328 0034 8162     		str	r1, [r0, #40]
 880:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1329              		.loc 1 880 0 discriminator 2
 1330 0036 E560     		str	r5, [r4, #12]
 883:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1331              		.loc 1 883 0 discriminator 2
 1332 0038 6269     		ldr	r2, [r4, #20]
 1333              	.LVL107:
 888:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1334              		.loc 1 888 0 discriminator 2
 1335 003a 1846     		mov	r0, r3
 1336              	.LVL108:
 883:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1337              		.loc 1 883 0 discriminator 2
 1338 003c 42F00102 		orr	r2, r2, #1
 1339 0040 6261     		str	r2, [r4, #20]
 886:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1340              		.loc 1 886 0 discriminator 2
 1341 0042 E368     		ldr	r3, [r4, #12]
 1342 0044 43F02003 		orr	r3, r3, #32
 1343 0048 E360     		str	r3, [r4, #12]
 894:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1344              		.loc 1 894 0 discriminator 2
 1345 004a 30BC     		pop	{r4, r5}
 1346              		.cfi_restore 5
 1347              		.cfi_restore 4
 1348              		.cfi_def_cfa_offset 0
 1349 004c 7047     		bx	lr
 1350              	.LVL109:
 1351              	.L120:
 863:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1352              		.loc 1 863 0
 1353 004e 0120     		movs	r0, #1
 1354              	.LVL110:
 1355 0050 7047     		bx	lr
 1356              		.cfi_endproc
 1357              	.LFE74:
 1359 0052 00BF     		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1360              		.align	1
 1361              		.p2align 2,,3
 1362              		.global	HAL_UART_Transmit_DMA
 1363              		.syntax unified
 1364              		.thumb
 1365              		.thumb_func
 1366              		.fpu softvfp
 1368              	HAL_UART_Transmit_DMA:
 1369              	.LFB75:
 905:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 1370              		.loc 1 905 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374              	.LVL111:
 1375 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  /tmp/cc3lpWmf.s 			page 74


 1376              		.cfi_def_cfa_offset 24
 1377              		.cfi_offset 3, -24
 1378              		.cfi_offset 4, -20
 1379              		.cfi_offset 5, -16
 1380              		.cfi_offset 6, -12
 1381              		.cfi_offset 7, -8
 1382              		.cfi_offset 14, -4
 909:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1383              		.loc 1 909 0
 1384 0002 90F83940 		ldrb	r4, [r0, #57]	@ zero_extendqisi2
 1385 0006 202C     		cmp	r4, #32
 1386 0008 01D0     		beq	.L134
 1387              	.L132:
 956:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1388              		.loc 1 956 0
 1389 000a 0220     		movs	r0, #2
 1390              	.LVL112:
 958:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1391              		.loc 1 958 0
 1392 000c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1393              	.LVL113:
 1394              	.L134:
 911:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1395              		.loc 1 911 0
 1396 000e 51B3     		cbz	r1, .L131
 911:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1397              		.loc 1 911 0 is_stmt 0 discriminator 1
 1398 0010 4AB3     		cbz	r2, .L131
 917:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1399              		.loc 1 917 0 is_stmt 1
 1400 0012 90F83840 		ldrb	r4, [r0, #56]	@ zero_extendqisi2
 1401 0016 012C     		cmp	r4, #1
 1402 0018 F7D0     		beq	.L132
 1403 001a 0446     		mov	r4, r0
 923:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1404              		.loc 1 923 0 discriminator 2
 1405 001c 0026     		movs	r6, #0
 1406 001e 1346     		mov	r3, r2
 924:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1407              		.loc 1 924 0 discriminator 2
 1408 0020 4FF0210E 		mov	lr, #33
 917:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1409              		.loc 1 917 0 discriminator 2
 1410 0024 0127     		movs	r7, #1
 927:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1411              		.loc 1 927 0 discriminator 2
 1412 0026 006B     		ldr	r0, [r0, #48]
 1413              	.LVL114:
 921:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1414              		.loc 1 921 0 discriminator 2
 1415 0028 E284     		strh	r2, [r4, #38]	@ movhi
 927:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1416              		.loc 1 927 0 discriminator 2
 1417 002a 104A     		ldr	r2, .L135
 1418              	.LVL115:
 920:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1419              		.loc 1 920 0 discriminator 2
ARM GAS  /tmp/cc3lpWmf.s 			page 75


 1420 002c A384     		strh	r3, [r4, #36]	@ movhi
 923:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1421              		.loc 1 923 0 discriminator 2
 1422 002e E663     		str	r6, [r4, #60]
 1423              	.LVL116:
 917:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1424              		.loc 1 917 0 discriminator 2
 1425 0030 84F83870 		strb	r7, [r4, #56]
 919:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1426              		.loc 1 919 0 discriminator 2
 1427 0034 2162     		str	r1, [r4, #32]
 924:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1428              		.loc 1 924 0 discriminator 2
 1429 0036 84F839E0 		strb	lr, [r4, #57]
 930:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1430              		.loc 1 930 0 discriminator 2
 1431 003a 0D4F     		ldr	r7, .L135+4
 933:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1432              		.loc 1 933 0 discriminator 2
 1433 003c 0D4D     		ldr	r5, .L135+8
 927:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1434              		.loc 1 927 0 discriminator 2
 1435 003e 8262     		str	r2, [r0, #40]
 940:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1436              		.loc 1 940 0 discriminator 2
 1437 0040 2268     		ldr	r2, [r4]
 936:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1438              		.loc 1 936 0 discriminator 2
 1439 0042 4663     		str	r6, [r0, #52]
 1440              	.LVL117:
 930:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1441              		.loc 1 930 0 discriminator 2
 1442 0044 C762     		str	r7, [r0, #44]
 933:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1443              		.loc 1 933 0 discriminator 2
 1444 0046 0563     		str	r5, [r0, #48]
 940:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1445              		.loc 1 940 0 discriminator 2
 1446 0048 0432     		adds	r2, r2, #4
 1447 004a FFF7FEFF 		bl	HAL_DMA_Start_IT
 1448              	.LVL118:
 943:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1449              		.loc 1 943 0 discriminator 2
 1450 004e 6FF04002 		mvn	r2, #64
 1451 0052 2368     		ldr	r3, [r4]
 952:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1452              		.loc 1 952 0 discriminator 2
 1453 0054 3046     		mov	r0, r6
 943:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1454              		.loc 1 943 0 discriminator 2
 1455 0056 1A60     		str	r2, [r3]
 950:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1456              		.loc 1 950 0 discriminator 2
 1457 0058 5A69     		ldr	r2, [r3, #20]
 946:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1458              		.loc 1 946 0 discriminator 2
 1459 005a 84F83860 		strb	r6, [r4, #56]
ARM GAS  /tmp/cc3lpWmf.s 			page 76


 950:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1460              		.loc 1 950 0 discriminator 2
 1461 005e 42F08002 		orr	r2, r2, #128
 1462 0062 5A61     		str	r2, [r3, #20]
 952:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1463              		.loc 1 952 0 discriminator 2
 1464 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1465              	.LVL119:
 1466              	.L131:
 913:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1467              		.loc 1 913 0
 1468 0066 0120     		movs	r0, #1
 1469              	.LVL120:
 1470 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1471              	.L136:
 1472 006a 00BF     		.align	2
 1473              	.L135:
 1474 006c 00000000 		.word	UART_DMATransmitCplt
 1475 0070 00000000 		.word	UART_DMATxHalfCplt
 1476 0074 00000000 		.word	UART_DMAError
 1477              		.cfi_endproc
 1478              	.LFE75:
 1480              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1481              		.align	1
 1482              		.p2align 2,,3
 1483              		.global	HAL_UART_Receive_DMA
 1484              		.syntax unified
 1485              		.thumb
 1486              		.thumb_func
 1487              		.fpu softvfp
 1489              	HAL_UART_Receive_DMA:
 1490              	.LFB76:
 970:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 1491              		.loc 1 970 0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 8
 1494              		@ frame_needed = 0, uses_anonymous_args = 0
 1495              	.LVL121:
 1496 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1497              		.cfi_def_cfa_offset 20
 1498              		.cfi_offset 4, -20
 1499              		.cfi_offset 5, -16
 1500              		.cfi_offset 6, -12
 1501              		.cfi_offset 7, -8
 1502              		.cfi_offset 14, -4
 974:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1503              		.loc 1 974 0
 1504 0002 90F83A40 		ldrb	r4, [r0, #58]	@ zero_extendqisi2
 970:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 1505              		.loc 1 970 0
 1506 0006 83B0     		sub	sp, sp, #12
 1507              		.cfi_def_cfa_offset 32
 974:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1508              		.loc 1 974 0
 1509 0008 202C     		cmp	r4, #32
 1510 000a 02D0     		beq	.L144
 1511              	.L142:
ARM GAS  /tmp/cc3lpWmf.s 			page 77


1026:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1512              		.loc 1 1026 0
 1513 000c 0220     		movs	r0, #2
 1514              	.LVL122:
 1515              	.L138:
1028:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1516              		.loc 1 1028 0
 1517 000e 03B0     		add	sp, sp, #12
 1518              		.cfi_remember_state
 1519              		.cfi_def_cfa_offset 20
 1520              		@ sp needed
 1521 0010 F0BD     		pop	{r4, r5, r6, r7, pc}
 1522              	.LVL123:
 1523              	.L144:
 1524              		.cfi_restore_state
 976:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1525              		.loc 1 976 0
 1526 0012 0029     		cmp	r1, #0
 1527 0014 35D0     		beq	.L141
 976:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1528              		.loc 1 976 0 is_stmt 0 discriminator 1
 1529 0016 002A     		cmp	r2, #0
 1530 0018 33D0     		beq	.L141
 982:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1531              		.loc 1 982 0 is_stmt 1
 1532 001a 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1533 001e 012B     		cmp	r3, #1
 1534 0020 F4D0     		beq	.L142
 1535 0022 0446     		mov	r4, r0
 987:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1536              		.loc 1 987 0 discriminator 2
 1537 0024 0025     		movs	r5, #0
 1538 0026 1346     		mov	r3, r2
 982:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1539              		.loc 1 982 0 discriminator 2
 1540 0028 0127     		movs	r7, #1
 1541 002a 0A46     		mov	r2, r1
 1542              	.LVL124:
 988:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1543              		.loc 1 988 0 discriminator 2
 1544 002c 2226     		movs	r6, #34
 991:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1545              		.loc 1 991 0 discriminator 2
 1546 002e 406B     		ldr	r0, [r0, #52]
 1547              	.LVL125:
 1548 0030 1549     		ldr	r1, .L145
 1549              	.LVL126:
 984:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1550              		.loc 1 984 0 discriminator 2
 1551 0032 A262     		str	r2, [r4, #40]
 985:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1552              		.loc 1 985 0 discriminator 2
 1553 0034 A385     		strh	r3, [r4, #44]	@ movhi
 987:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1554              		.loc 1 987 0 discriminator 2
 1555 0036 E563     		str	r5, [r4, #60]
 982:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/cc3lpWmf.s 			page 78


 1556              		.loc 1 982 0 discriminator 2
 1557 0038 84F83870 		strb	r7, [r4, #56]
 988:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1558              		.loc 1 988 0 discriminator 2
 1559 003c 84F83A60 		strb	r6, [r4, #58]
 994:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1560              		.loc 1 994 0 discriminator 2
 1561 0040 124F     		ldr	r7, .L145+4
 991:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1562              		.loc 1 991 0 discriminator 2
 1563 0042 8162     		str	r1, [r0, #40]
 997:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1564              		.loc 1 997 0 discriminator 2
 1565 0044 124E     		ldr	r6, .L145+8
1004:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1566              		.loc 1 1004 0 discriminator 2
 1567 0046 2168     		ldr	r1, [r4]
1000:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1568              		.loc 1 1000 0 discriminator 2
 1569 0048 4563     		str	r5, [r0, #52]
 1570              	.LVL127:
 994:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1571              		.loc 1 994 0 discriminator 2
 1572 004a C762     		str	r7, [r0, #44]
 997:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1573              		.loc 1 997 0 discriminator 2
 1574 004c 0663     		str	r6, [r0, #48]
1004:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1575              		.loc 1 1004 0 discriminator 2
 1576 004e 0431     		adds	r1, r1, #4
 1577 0050 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1578              	.LVL128:
 1579              	.LBB22:
1007:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1580              		.loc 1 1007 0 discriminator 2
 1581 0054 2368     		ldr	r3, [r4]
 1582 0056 0195     		str	r5, [sp, #4]
 1583 0058 1A68     		ldr	r2, [r3]
 1584              	.LBE22:
1022:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1585              		.loc 1 1022 0 discriminator 2
 1586 005a 2846     		mov	r0, r5
 1587              	.LBB23:
1007:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1588              		.loc 1 1007 0 discriminator 2
 1589 005c 0192     		str	r2, [sp, #4]
 1590 005e 5A68     		ldr	r2, [r3, #4]
 1591              	.LBE23:
1010:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1592              		.loc 1 1010 0 discriminator 2
 1593 0060 84F83850 		strb	r5, [r4, #56]
 1594              	.LBB24:
1007:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1595              		.loc 1 1007 0 discriminator 2
 1596 0064 0192     		str	r2, [sp, #4]
 1597 0066 019A     		ldr	r2, [sp, #4]
 1598              	.LBE24:
ARM GAS  /tmp/cc3lpWmf.s 			page 79


1013:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1599              		.loc 1 1013 0 discriminator 2
 1600 0068 DA68     		ldr	r2, [r3, #12]
 1601 006a 42F48072 		orr	r2, r2, #256
 1602 006e DA60     		str	r2, [r3, #12]
1016:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1603              		.loc 1 1016 0 discriminator 2
 1604 0070 5A69     		ldr	r2, [r3, #20]
 1605 0072 42F00102 		orr	r2, r2, #1
 1606 0076 5A61     		str	r2, [r3, #20]
1020:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1607              		.loc 1 1020 0 discriminator 2
 1608 0078 5A69     		ldr	r2, [r3, #20]
 1609 007a 42F04002 		orr	r2, r2, #64
 1610 007e 5A61     		str	r2, [r3, #20]
1022:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1611              		.loc 1 1022 0 discriminator 2
 1612 0080 C5E7     		b	.L138
 1613              	.LVL129:
 1614              	.L141:
 978:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1615              		.loc 1 978 0
 1616 0082 0120     		movs	r0, #1
 1617              	.LVL130:
 1618 0084 C3E7     		b	.L138
 1619              	.L146:
 1620 0086 00BF     		.align	2
 1621              	.L145:
 1622 0088 00000000 		.word	UART_DMAReceiveCplt
 1623 008c 00000000 		.word	UART_DMARxHalfCplt
 1624 0090 00000000 		.word	UART_DMAError
 1625              		.cfi_endproc
 1626              	.LFE76:
 1628              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1629              		.align	1
 1630              		.p2align 2,,3
 1631              		.global	HAL_UART_DMAPause
 1632              		.syntax unified
 1633              		.thumb
 1634              		.thumb_func
 1635              		.fpu softvfp
 1637              	HAL_UART_DMAPause:
 1638              	.LFB77:
1037:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1639              		.loc 1 1037 0
 1640              		.cfi_startproc
 1641              		@ args = 0, pretend = 0, frame = 0
 1642              		@ frame_needed = 0, uses_anonymous_args = 0
 1643              		@ link register save eliminated.
 1644              	.LVL131:
1041:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1645              		.loc 1 1041 0
 1646 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1647 0004 012B     		cmp	r3, #1
 1648 0006 12D0     		beq	.L151
1041:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1649              		.loc 1 1041 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/cc3lpWmf.s 			page 80


 1650 0008 0122     		movs	r2, #1
1043:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1651              		.loc 1 1043 0 is_stmt 1 discriminator 2
 1652 000a 0368     		ldr	r3, [r0]
1041:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1653              		.loc 1 1041 0 discriminator 2
 1654 000c 80F83820 		strb	r2, [r0, #56]
1043:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1655              		.loc 1 1043 0 discriminator 2
 1656 0010 5969     		ldr	r1, [r3, #20]
 1657              	.LVL132:
1044:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1658              		.loc 1 1044 0 discriminator 2
 1659 0012 90F83920 		ldrb	r2, [r0, #57]	@ zero_extendqisi2
 1660 0016 212A     		cmp	r2, #33
 1661 0018 1AD0     		beq	.L158
 1662              	.LVL133:
 1663              	.L149:
1050:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1664              		.loc 1 1050 0
 1665 001a 5969     		ldr	r1, [r3, #20]
 1666              	.LVL134:
1051:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1667              		.loc 1 1051 0
 1668 001c 90F83A20 		ldrb	r2, [r0, #58]	@ zero_extendqisi2
 1669 0020 222A     		cmp	r2, #34
 1670 0022 06D0     		beq	.L159
 1671              	.L150:
1062:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1672              		.loc 1 1062 0
 1673 0024 0023     		movs	r3, #0
 1674 0026 80F83830 		strb	r3, [r0, #56]
1064:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1675              		.loc 1 1064 0
 1676 002a 1846     		mov	r0, r3
 1677              	.LVL135:
 1678 002c 7047     		bx	lr
 1679              	.LVL136:
 1680              	.L151:
1041:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1681              		.loc 1 1041 0
 1682 002e 0220     		movs	r0, #2
 1683              	.LVL137:
1065:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1684              		.loc 1 1065 0
 1685 0030 7047     		bx	lr
 1686              	.LVL138:
 1687              	.L159:
1051:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1688              		.loc 1 1051 0 discriminator 1
 1689 0032 4A06     		lsls	r2, r1, #25
 1690 0034 F6D5     		bpl	.L150
1054:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1691              		.loc 1 1054 0
 1692 0036 DA68     		ldr	r2, [r3, #12]
 1693 0038 22F48072 		bic	r2, r2, #256
 1694 003c DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/cc3lpWmf.s 			page 81


1055:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1695              		.loc 1 1055 0
 1696 003e 5A69     		ldr	r2, [r3, #20]
 1697 0040 22F00102 		bic	r2, r2, #1
 1698 0044 5A61     		str	r2, [r3, #20]
1058:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1699              		.loc 1 1058 0
 1700 0046 5A69     		ldr	r2, [r3, #20]
 1701 0048 22F04002 		bic	r2, r2, #64
 1702 004c 5A61     		str	r2, [r3, #20]
 1703 004e E9E7     		b	.L150
 1704              	.LVL139:
 1705              	.L158:
1044:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1706              		.loc 1 1044 0 discriminator 1
 1707 0050 0906     		lsls	r1, r1, #24
 1708              	.LVL140:
 1709 0052 E2D5     		bpl	.L149
1047:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1710              		.loc 1 1047 0
 1711 0054 5A69     		ldr	r2, [r3, #20]
 1712 0056 22F08002 		bic	r2, r2, #128
 1713 005a 5A61     		str	r2, [r3, #20]
 1714 005c DDE7     		b	.L149
 1715              		.cfi_endproc
 1716              	.LFE77:
 1718 005e 00BF     		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1719              		.align	1
 1720              		.p2align 2,,3
 1721              		.global	HAL_UART_DMAResume
 1722              		.syntax unified
 1723              		.thumb
 1724              		.thumb_func
 1725              		.fpu softvfp
 1727              	HAL_UART_DMAResume:
 1728              	.LFB78:
1074:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
 1729              		.loc 1 1074 0
 1730              		.cfi_startproc
 1731              		@ args = 0, pretend = 0, frame = 8
 1732              		@ frame_needed = 0, uses_anonymous_args = 0
 1733              		@ link register save eliminated.
 1734              	.LVL141:
1076:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1735              		.loc 1 1076 0
 1736 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1737 0004 012B     		cmp	r3, #1
 1738 0006 0FD0     		beq	.L164
1076:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1739              		.loc 1 1076 0 is_stmt 0 discriminator 2
 1740 0008 0122     		movs	r2, #1
1078:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1741              		.loc 1 1078 0 is_stmt 1 discriminator 2
 1742 000a 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
1076:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1743              		.loc 1 1076 0 discriminator 2
 1744 000e 80F83820 		strb	r2, [r0, #56]
ARM GAS  /tmp/cc3lpWmf.s 			page 82


1078:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1745              		.loc 1 1078 0 discriminator 2
 1746 0012 212B     		cmp	r3, #33
 1747 0014 25D0     		beq	.L170
1084:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1748              		.loc 1 1084 0
 1749 0016 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1750 001a 222B     		cmp	r3, #34
 1751 001c 06D0     		beq	.L171
 1752              	.L166:
1098:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1753              		.loc 1 1098 0
 1754 001e 0023     		movs	r3, #0
 1755 0020 80F83830 		strb	r3, [r0, #56]
1100:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1756              		.loc 1 1100 0
 1757 0024 1846     		mov	r0, r3
 1758              	.LVL142:
1101:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1759              		.loc 1 1101 0
 1760 0026 7047     		bx	lr
 1761              	.LVL143:
 1762              	.L164:
1076:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1763              		.loc 1 1076 0
 1764 0028 0220     		movs	r0, #2
 1765              	.LVL144:
 1766 002a 7047     		bx	lr
 1767              	.LVL145:
 1768              	.L171:
 1769              	.LBB25:
1087:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1770              		.loc 1 1087 0
 1771 002c 0022     		movs	r2, #0
 1772 002e 0368     		ldr	r3, [r0]
 1773              	.LBE25:
1074:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
 1774              		.loc 1 1074 0
 1775 0030 82B0     		sub	sp, sp, #8
 1776              		.cfi_def_cfa_offset 8
 1777              	.LBB26:
1087:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1778              		.loc 1 1087 0
 1779 0032 0192     		str	r2, [sp, #4]
 1780 0034 1A68     		ldr	r2, [r3]
 1781 0036 0192     		str	r2, [sp, #4]
 1782 0038 5A68     		ldr	r2, [r3, #4]
 1783 003a 0192     		str	r2, [sp, #4]
 1784 003c 019A     		ldr	r2, [sp, #4]
 1785              	.LBE26:
1090:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1786              		.loc 1 1090 0
 1787 003e DA68     		ldr	r2, [r3, #12]
 1788 0040 42F48072 		orr	r2, r2, #256
 1789 0044 DA60     		str	r2, [r3, #12]
1091:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 1790              		.loc 1 1091 0
ARM GAS  /tmp/cc3lpWmf.s 			page 83


 1791 0046 5A69     		ldr	r2, [r3, #20]
 1792 0048 42F00102 		orr	r2, r2, #1
 1793 004c 5A61     		str	r2, [r3, #20]
1094:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1794              		.loc 1 1094 0
 1795 004e 5A69     		ldr	r2, [r3, #20]
 1796 0050 42F04002 		orr	r2, r2, #64
 1797 0054 5A61     		str	r2, [r3, #20]
1098:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1798              		.loc 1 1098 0
 1799 0056 0023     		movs	r3, #0
 1800 0058 80F83830 		strb	r3, [r0, #56]
1100:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1801              		.loc 1 1100 0
 1802 005c 1846     		mov	r0, r3
 1803              	.LVL146:
1101:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1804              		.loc 1 1101 0
 1805 005e 02B0     		add	sp, sp, #8
 1806              		.cfi_def_cfa_offset 0
 1807              		@ sp needed
 1808 0060 7047     		bx	lr
 1809              	.LVL147:
 1810              	.L170:
1081:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 1811              		.loc 1 1081 0
 1812 0062 0268     		ldr	r2, [r0]
 1813 0064 5369     		ldr	r3, [r2, #20]
 1814 0066 43F08003 		orr	r3, r3, #128
 1815 006a 5361     		str	r3, [r2, #20]
1084:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1816              		.loc 1 1084 0
 1817 006c 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1818 0070 222B     		cmp	r3, #34
 1819 0072 D4D1     		bne	.L166
 1820 0074 DAE7     		b	.L171
 1821              		.cfi_endproc
 1822              	.LFE78:
 1824 0076 00BF     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1825              		.align	1
 1826              		.p2align 2,,3
 1827              		.global	HAL_UART_DMAStop
 1828              		.syntax unified
 1829              		.thumb
 1830              		.thumb_func
 1831              		.fpu softvfp
 1833              	HAL_UART_DMAStop:
 1834              	.LFB79:
1110:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1835              		.loc 1 1110 0
 1836              		.cfi_startproc
 1837              		@ args = 0, pretend = 0, frame = 0
 1838              		@ frame_needed = 0, uses_anonymous_args = 0
 1839              	.LVL148:
1119:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1840              		.loc 1 1119 0
 1841 0000 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cc3lpWmf.s 			page 84


1110:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1842              		.loc 1 1110 0
 1843 0002 10B5     		push	{r4, lr}
 1844              		.cfi_def_cfa_offset 8
 1845              		.cfi_offset 4, -8
 1846              		.cfi_offset 14, -4
1119:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1847              		.loc 1 1119 0
 1848 0004 5969     		ldr	r1, [r3, #20]
 1849              	.LVL149:
1120:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1850              		.loc 1 1120 0
 1851 0006 90F83920 		ldrb	r2, [r0, #57]	@ zero_extendqisi2
1110:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1852              		.loc 1 1110 0
 1853 000a 0446     		mov	r4, r0
1120:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1854              		.loc 1 1120 0
 1855 000c 212A     		cmp	r2, #33
 1856 000e 1ED0     		beq	.L190
 1857              	.LVL150:
 1858              	.L173:
1133:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1859              		.loc 1 1133 0
 1860 0010 5969     		ldr	r1, [r3, #20]
 1861              	.LVL151:
1134:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1862              		.loc 1 1134 0
 1863 0012 94F83A20 		ldrb	r2, [r4, #58]	@ zero_extendqisi2
 1864 0016 222A     		cmp	r2, #34
 1865 0018 01D0     		beq	.L191
 1866              	.L175:
1147:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1867              		.loc 1 1147 0
 1868 001a 0020     		movs	r0, #0
 1869 001c 10BD     		pop	{r4, pc}
 1870              	.LVL152:
 1871              	.L191:
1134:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1872              		.loc 1 1134 0 discriminator 1
 1873 001e 4A06     		lsls	r2, r1, #25
 1874 0020 FBD5     		bpl	.L175
1136:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1875              		.loc 1 1136 0
 1876 0022 5A69     		ldr	r2, [r3, #20]
1139:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1877              		.loc 1 1139 0
 1878 0024 606B     		ldr	r0, [r4, #52]
1136:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1879              		.loc 1 1136 0
 1880 0026 22F04002 		bic	r2, r2, #64
 1881 002a 5A61     		str	r2, [r3, #20]
1139:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1882              		.loc 1 1139 0
 1883 002c 10B1     		cbz	r0, .L176
1141:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1884              		.loc 1 1141 0
ARM GAS  /tmp/cc3lpWmf.s 			page 85


 1885 002e FFF7FEFF 		bl	HAL_DMA_Abort
 1886              	.LVL153:
 1887 0032 2368     		ldr	r3, [r4]
 1888              	.L176:
 1889              	.LVL154:
 1890              	.LBB27:
 1891              	.LBB28:
2197:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1892              		.loc 1 2197 0
 1893 0034 2021     		movs	r1, #32
2193:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1894              		.loc 1 2193 0
 1895 0036 DA68     		ldr	r2, [r3, #12]
 1896              	.LBE28:
 1897              	.LBE27:
1147:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1898              		.loc 1 1147 0
 1899 0038 0020     		movs	r0, #0
 1900              	.LBB30:
 1901              	.LBB29:
2193:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1902              		.loc 1 2193 0
 1903 003a 22F49072 		bic	r2, r2, #288
 1904 003e DA60     		str	r2, [r3, #12]
2194:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1905              		.loc 1 2194 0
 1906 0040 5A69     		ldr	r2, [r3, #20]
 1907 0042 22F00102 		bic	r2, r2, #1
 1908 0046 5A61     		str	r2, [r3, #20]
2197:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1909              		.loc 1 2197 0
 1910 0048 84F83A10 		strb	r1, [r4, #58]
 1911              	.LBE29:
 1912              	.LBE30:
1147:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1913              		.loc 1 1147 0
 1914 004c 10BD     		pop	{r4, pc}
 1915              	.LVL155:
 1916              	.L190:
1120:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1917              		.loc 1 1120 0 discriminator 1
 1918 004e 0906     		lsls	r1, r1, #24
 1919              	.LVL156:
 1920 0050 DED5     		bpl	.L173
1122:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1921              		.loc 1 1122 0
 1922 0052 5A69     		ldr	r2, [r3, #20]
1125:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1923              		.loc 1 1125 0
 1924 0054 006B     		ldr	r0, [r0, #48]
 1925              	.LVL157:
1122:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1926              		.loc 1 1122 0
 1927 0056 22F08002 		bic	r2, r2, #128
 1928 005a 5A61     		str	r2, [r3, #20]
1125:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1929              		.loc 1 1125 0
ARM GAS  /tmp/cc3lpWmf.s 			page 86


 1930 005c 10B1     		cbz	r0, .L174
1127:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 1931              		.loc 1 1127 0
 1932 005e FFF7FEFF 		bl	HAL_DMA_Abort
 1933              	.LVL158:
 1934 0062 2368     		ldr	r3, [r4]
 1935              	.L174:
 1936              	.LVL159:
 1937              	.LBB31:
 1938              	.LBB32:
2182:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1939              		.loc 1 2182 0
 1940 0064 2021     		movs	r1, #32
2179:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1941              		.loc 1 2179 0
 1942 0066 DA68     		ldr	r2, [r3, #12]
 1943 0068 22F0C002 		bic	r2, r2, #192
 1944 006c DA60     		str	r2, [r3, #12]
2182:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1945              		.loc 1 2182 0
 1946 006e 84F83910 		strb	r1, [r4, #57]
 1947 0072 CDE7     		b	.L173
 1948              	.LBE32:
 1949              	.LBE31:
 1950              		.cfi_endproc
 1951              	.LFE79:
 1953              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1954              		.align	1
 1955              		.p2align 2,,3
 1956              		.global	HAL_UART_Abort
 1957              		.syntax unified
 1958              		.thumb
 1959              		.thumb_func
 1960              		.fpu softvfp
 1962              	HAL_UART_Abort:
 1963              	.LFB80:
1162:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1964              		.loc 1 1162 0
 1965              		.cfi_startproc
 1966              		@ args = 0, pretend = 0, frame = 0
 1967              		@ frame_needed = 0, uses_anonymous_args = 0
 1968              	.LVL160:
1164:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1969              		.loc 1 1164 0
 1970 0000 0368     		ldr	r3, [r0]
1162:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1971              		.loc 1 1162 0
 1972 0002 10B5     		push	{r4, lr}
 1973              		.cfi_def_cfa_offset 8
 1974              		.cfi_offset 4, -8
 1975              		.cfi_offset 14, -4
1164:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1976              		.loc 1 1164 0
 1977 0004 DA68     		ldr	r2, [r3, #12]
1162:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1978              		.loc 1 1162 0
 1979 0006 0446     		mov	r4, r0
ARM GAS  /tmp/cc3lpWmf.s 			page 87


1164:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1980              		.loc 1 1164 0
 1981 0008 22F4F072 		bic	r2, r2, #480
 1982 000c DA60     		str	r2, [r3, #12]
1165:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 1983              		.loc 1 1165 0
 1984 000e 5A69     		ldr	r2, [r3, #20]
 1985 0010 22F00102 		bic	r2, r2, #1
 1986 0014 5A61     		str	r2, [r3, #20]
1168:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 1987              		.loc 1 1168 0
 1988 0016 5A69     		ldr	r2, [r3, #20]
 1989 0018 1106     		lsls	r1, r2, #24
 1990 001a 0BD5     		bpl	.L193
1170:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1991              		.loc 1 1170 0
 1992 001c 5A69     		ldr	r2, [r3, #20]
1173:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1993              		.loc 1 1173 0
 1994 001e 016B     		ldr	r1, [r0, #48]
1170:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 1995              		.loc 1 1170 0
 1996 0020 22F08002 		bic	r2, r2, #128
 1997 0024 5A61     		str	r2, [r3, #20]
1173:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1998              		.loc 1 1173 0
 1999 0026 29B1     		cbz	r1, .L193
1177:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2000              		.loc 1 1177 0
 2001 0028 0023     		movs	r3, #0
1179:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2002              		.loc 1 1179 0
 2003 002a 0846     		mov	r0, r1
 2004              	.LVL161:
1177:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2005              		.loc 1 1177 0
 2006 002c 4B63     		str	r3, [r1, #52]
1179:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2007              		.loc 1 1179 0
 2008 002e FFF7FEFF 		bl	HAL_DMA_Abort
 2009              	.LVL162:
 2010 0032 2368     		ldr	r3, [r4]
 2011              	.L193:
1184:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2012              		.loc 1 1184 0
 2013 0034 5A69     		ldr	r2, [r3, #20]
 2014 0036 5206     		lsls	r2, r2, #25
 2015 0038 0AD5     		bpl	.L195
1186:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2016              		.loc 1 1186 0
 2017 003a 5A69     		ldr	r2, [r3, #20]
1189:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2018              		.loc 1 1189 0
 2019 003c 616B     		ldr	r1, [r4, #52]
1186:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2020              		.loc 1 1186 0
 2021 003e 22F04002 		bic	r2, r2, #64
ARM GAS  /tmp/cc3lpWmf.s 			page 88


 2022 0042 5A61     		str	r2, [r3, #20]
1189:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2023              		.loc 1 1189 0
 2024 0044 21B1     		cbz	r1, .L195
1193:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2025              		.loc 1 1193 0
 2026 0046 0023     		movs	r3, #0
1195:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2027              		.loc 1 1195 0
 2028 0048 0846     		mov	r0, r1
1193:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2029              		.loc 1 1193 0
 2030 004a 4B63     		str	r3, [r1, #52]
1195:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2031              		.loc 1 1195 0
 2032 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2033              	.LVL163:
 2034              	.L195:
1200:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2035              		.loc 1 1200 0
 2036 0050 0023     		movs	r3, #0
1207:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2037              		.loc 1 1207 0
 2038 0052 2022     		movs	r2, #32
1200:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2039              		.loc 1 1200 0
 2040 0054 E384     		strh	r3, [r4, #38]	@ movhi
1211:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2041              		.loc 1 1211 0
 2042 0056 1846     		mov	r0, r3
1201:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2043              		.loc 1 1201 0
 2044 0058 E385     		strh	r3, [r4, #46]	@ movhi
1204:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2045              		.loc 1 1204 0
 2046 005a E363     		str	r3, [r4, #60]
1207:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2047              		.loc 1 1207 0
 2048 005c 84F83A20 		strb	r2, [r4, #58]
1208:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2049              		.loc 1 1208 0
 2050 0060 84F83920 		strb	r2, [r4, #57]
1211:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2051              		.loc 1 1211 0
 2052 0064 10BD     		pop	{r4, pc}
 2053              		.cfi_endproc
 2054              	.LFE80:
 2056 0066 00BF     		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2057              		.align	1
 2058              		.p2align 2,,3
 2059              		.global	HAL_UART_AbortTransmit
 2060              		.syntax unified
 2061              		.thumb
 2062              		.thumb_func
 2063              		.fpu softvfp
 2065              	HAL_UART_AbortTransmit:
 2066              	.LFB81:
ARM GAS  /tmp/cc3lpWmf.s 			page 89


1226:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2067              		.loc 1 1226 0
 2068              		.cfi_startproc
 2069              		@ args = 0, pretend = 0, frame = 0
 2070              		@ frame_needed = 0, uses_anonymous_args = 0
 2071              	.LVL164:
1228:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2072              		.loc 1 1228 0
 2073 0000 0368     		ldr	r3, [r0]
1226:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2074              		.loc 1 1226 0
 2075 0002 10B5     		push	{r4, lr}
 2076              		.cfi_def_cfa_offset 8
 2077              		.cfi_offset 4, -8
 2078              		.cfi_offset 14, -4
1228:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2079              		.loc 1 1228 0
 2080 0004 DA68     		ldr	r2, [r3, #12]
1226:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2081              		.loc 1 1226 0
 2082 0006 0446     		mov	r4, r0
1228:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2083              		.loc 1 1228 0
 2084 0008 22F0C002 		bic	r2, r2, #192
 2085 000c DA60     		str	r2, [r3, #12]
1231:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2086              		.loc 1 1231 0
 2087 000e 5A69     		ldr	r2, [r3, #20]
 2088 0010 1206     		lsls	r2, r2, #24
 2089 0012 0AD5     		bpl	.L209
1233:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2090              		.loc 1 1233 0
 2091 0014 5A69     		ldr	r2, [r3, #20]
1236:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2092              		.loc 1 1236 0
 2093 0016 016B     		ldr	r1, [r0, #48]
1233:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2094              		.loc 1 1233 0
 2095 0018 22F08002 		bic	r2, r2, #128
 2096 001c 5A61     		str	r2, [r3, #20]
1236:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2097              		.loc 1 1236 0
 2098 001e 21B1     		cbz	r1, .L209
1240:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2099              		.loc 1 1240 0
 2100 0020 0023     		movs	r3, #0
1242:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2101              		.loc 1 1242 0
 2102 0022 0846     		mov	r0, r1
 2103              	.LVL165:
1240:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2104              		.loc 1 1240 0
 2105 0024 4B63     		str	r3, [r1, #52]
1242:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2106              		.loc 1 1242 0
 2107 0026 FFF7FEFF 		bl	HAL_DMA_Abort
 2108              	.LVL166:
ARM GAS  /tmp/cc3lpWmf.s 			page 90


 2109              	.L209:
1247:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2110              		.loc 1 1247 0
 2111 002a 0020     		movs	r0, #0
1250:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2112              		.loc 1 1250 0
 2113 002c 2023     		movs	r3, #32
1247:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2114              		.loc 1 1247 0
 2115 002e E084     		strh	r0, [r4, #38]	@ movhi
1250:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2116              		.loc 1 1250 0
 2117 0030 84F83930 		strb	r3, [r4, #57]
1253:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2118              		.loc 1 1253 0
 2119 0034 10BD     		pop	{r4, pc}
 2120              		.cfi_endproc
 2121              	.LFE81:
 2123 0036 00BF     		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2124              		.align	1
 2125              		.p2align 2,,3
 2126              		.global	HAL_UART_AbortReceive
 2127              		.syntax unified
 2128              		.thumb
 2129              		.thumb_func
 2130              		.fpu softvfp
 2132              	HAL_UART_AbortReceive:
 2133              	.LFB82:
1268:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2134              		.loc 1 1268 0
 2135              		.cfi_startproc
 2136              		@ args = 0, pretend = 0, frame = 0
 2137              		@ frame_needed = 0, uses_anonymous_args = 0
 2138              	.LVL167:
1270:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2139              		.loc 1 1270 0
 2140 0000 0368     		ldr	r3, [r0]
1268:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2141              		.loc 1 1268 0
 2142 0002 10B5     		push	{r4, lr}
 2143              		.cfi_def_cfa_offset 8
 2144              		.cfi_offset 4, -8
 2145              		.cfi_offset 14, -4
1270:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2146              		.loc 1 1270 0
 2147 0004 DA68     		ldr	r2, [r3, #12]
1268:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2148              		.loc 1 1268 0
 2149 0006 0446     		mov	r4, r0
1270:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2150              		.loc 1 1270 0
 2151 0008 22F49072 		bic	r2, r2, #288
 2152 000c DA60     		str	r2, [r3, #12]
1271:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2153              		.loc 1 1271 0
 2154 000e 5A69     		ldr	r2, [r3, #20]
 2155 0010 22F00102 		bic	r2, r2, #1
ARM GAS  /tmp/cc3lpWmf.s 			page 91


 2156 0014 5A61     		str	r2, [r3, #20]
1274:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2157              		.loc 1 1274 0
 2158 0016 5A69     		ldr	r2, [r3, #20]
 2159 0018 5206     		lsls	r2, r2, #25
 2160 001a 0AD5     		bpl	.L217
1276:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2161              		.loc 1 1276 0
 2162 001c 5A69     		ldr	r2, [r3, #20]
1279:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2163              		.loc 1 1279 0
 2164 001e 416B     		ldr	r1, [r0, #52]
1276:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2165              		.loc 1 1276 0
 2166 0020 22F04002 		bic	r2, r2, #64
 2167 0024 5A61     		str	r2, [r3, #20]
1279:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2168              		.loc 1 1279 0
 2169 0026 21B1     		cbz	r1, .L217
1283:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2170              		.loc 1 1283 0
 2171 0028 0023     		movs	r3, #0
1285:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2172              		.loc 1 1285 0
 2173 002a 0846     		mov	r0, r1
 2174              	.LVL168:
1283:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2175              		.loc 1 1283 0
 2176 002c 4B63     		str	r3, [r1, #52]
1285:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2177              		.loc 1 1285 0
 2178 002e FFF7FEFF 		bl	HAL_DMA_Abort
 2179              	.LVL169:
 2180              	.L217:
1290:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2181              		.loc 1 1290 0
 2182 0032 0020     		movs	r0, #0
1293:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2183              		.loc 1 1293 0
 2184 0034 2023     		movs	r3, #32
1290:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2185              		.loc 1 1290 0
 2186 0036 E085     		strh	r0, [r4, #46]	@ movhi
1293:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2187              		.loc 1 1293 0
 2188 0038 84F83A30 		strb	r3, [r4, #58]
1296:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2189              		.loc 1 1296 0
 2190 003c 10BD     		pop	{r4, pc}
 2191              		.cfi_endproc
 2192              	.LFE82:
 2194 003e 00BF     		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2195              		.align	1
 2196              		.p2align 2,,3
 2197              		.weak	HAL_UART_TxCpltCallback
 2198              		.syntax unified
 2199              		.thumb
ARM GAS  /tmp/cc3lpWmf.s 			page 92


 2200              		.thumb_func
 2201              		.fpu softvfp
 2203              	HAL_UART_TxCpltCallback:
 2204              	.LFB134:
 2205              		.cfi_startproc
 2206              		@ args = 0, pretend = 0, frame = 0
 2207              		@ frame_needed = 0, uses_anonymous_args = 0
 2208              		@ link register save eliminated.
 2209 0000 7047     		bx	lr
 2210              		.cfi_endproc
 2211              	.LFE134:
 2213 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2214              		.align	1
 2215              		.p2align 2,,3
 2216              		.syntax unified
 2217              		.thumb
 2218              		.thumb_func
 2219              		.fpu softvfp
 2221              	UART_DMATransmitCplt:
 2222              	.LFB102:
2029:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2223              		.loc 1 2029 0
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 0
 2226              		@ frame_needed = 0, uses_anonymous_args = 0
 2227              	.LVL170:
2029:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2228              		.loc 1 2029 0
 2229 0000 08B5     		push	{r3, lr}
 2230              		.cfi_def_cfa_offset 8
 2231              		.cfi_offset 3, -8
 2232              		.cfi_offset 14, -4
2032:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2233              		.loc 1 2032 0
 2234 0002 0368     		ldr	r3, [r0]
2030:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
 2235              		.loc 1 2030 0
 2236 0004 406A     		ldr	r0, [r0, #36]
 2237              	.LVL171:
2032:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2238              		.loc 1 2032 0
 2239 0006 1B68     		ldr	r3, [r3]
 2240 0008 13F02003 		ands	r3, r3, #32
 2241 000c 0AD1     		bne	.L225
2038:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2242              		.loc 1 2038 0
 2243 000e 0268     		ldr	r2, [r0]
2034:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2244              		.loc 1 2034 0
 2245 0010 C384     		strh	r3, [r0, #38]	@ movhi
2038:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2246              		.loc 1 2038 0
 2247 0012 5369     		ldr	r3, [r2, #20]
 2248 0014 23F08003 		bic	r3, r3, #128
 2249 0018 5361     		str	r3, [r2, #20]
2041:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2250              		.loc 1 2041 0
ARM GAS  /tmp/cc3lpWmf.s 			page 93


 2251 001a D368     		ldr	r3, [r2, #12]
 2252 001c 43F04003 		orr	r3, r3, #64
 2253 0020 D360     		str	r3, [r2, #12]
 2254 0022 08BD     		pop	{r3, pc}
 2255              	.L225:
2047:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2256              		.loc 1 2047 0
 2257 0024 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2258              	.LVL172:
 2259 0028 08BD     		pop	{r3, pc}
 2260              		.cfi_endproc
 2261              	.LFE102:
 2263 002a 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2264              		.align	1
 2265              		.p2align 2,,3
 2266              		.weak	HAL_UART_TxHalfCpltCallback
 2267              		.syntax unified
 2268              		.thumb
 2269              		.thumb_func
 2270              		.fpu softvfp
 2272              	HAL_UART_TxHalfCpltCallback:
 2273              	.LFB132:
 2274              		.cfi_startproc
 2275              		@ args = 0, pretend = 0, frame = 0
 2276              		@ frame_needed = 0, uses_anonymous_args = 0
 2277              		@ link register save eliminated.
 2278 0000 7047     		bx	lr
 2279              		.cfi_endproc
 2280              	.LFE132:
 2282 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2283              		.align	1
 2284              		.p2align 2,,3
 2285              		.syntax unified
 2286              		.thumb
 2287              		.thumb_func
 2288              		.fpu softvfp
 2290              	UART_DMATxHalfCplt:
 2291              	.LFB103:
2058:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2292              		.loc 1 2058 0
 2293              		.cfi_startproc
 2294              		@ args = 0, pretend = 0, frame = 0
 2295              		@ frame_needed = 0, uses_anonymous_args = 0
 2296              	.LVL173:
2058:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2297              		.loc 1 2058 0
 2298 0000 08B5     		push	{r3, lr}
 2299              		.cfi_def_cfa_offset 8
 2300              		.cfi_offset 3, -8
 2301              		.cfi_offset 14, -4
2061:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2302              		.loc 1 2061 0
 2303 0002 406A     		ldr	r0, [r0, #36]
 2304              	.LVL174:
 2305 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 2306              	.LVL175:
 2307 0008 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cc3lpWmf.s 			page 94


 2308              		.cfi_endproc
 2309              	.LFE103:
 2311 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2312              		.align	1
 2313              		.p2align 2,,3
 2314              		.weak	HAL_UART_RxCpltCallback
 2315              		.syntax unified
 2316              		.thumb
 2317              		.thumb_func
 2318              		.fpu softvfp
 2320              	HAL_UART_RxCpltCallback:
 2321              	.LFB130:
 2322              		.cfi_startproc
 2323              		@ args = 0, pretend = 0, frame = 0
 2324              		@ frame_needed = 0, uses_anonymous_args = 0
 2325              		@ link register save eliminated.
 2326 0000 7047     		bx	lr
 2327              		.cfi_endproc
 2328              	.LFE130:
 2330 0002 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2331              		.align	1
 2332              		.p2align 2,,3
 2333              		.syntax unified
 2334              		.thumb
 2335              		.thumb_func
 2336              		.fpu softvfp
 2338              	UART_DMAReceiveCplt:
 2339              	.LFB104:
2070:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2340              		.loc 1 2070 0
 2341              		.cfi_startproc
 2342              		@ args = 0, pretend = 0, frame = 0
 2343              		@ frame_needed = 0, uses_anonymous_args = 0
 2344              	.LVL176:
2070:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2345              		.loc 1 2070 0
 2346 0000 08B5     		push	{r3, lr}
 2347              		.cfi_def_cfa_offset 8
 2348              		.cfi_offset 3, -8
 2349              		.cfi_offset 14, -4
2073:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2350              		.loc 1 2073 0
 2351 0002 0368     		ldr	r3, [r0]
2071:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
 2352              		.loc 1 2071 0
 2353 0004 406A     		ldr	r0, [r0, #36]
 2354              	.LVL177:
2073:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2355              		.loc 1 2073 0
 2356 0006 1B68     		ldr	r3, [r3]
 2357 0008 13F02003 		ands	r3, r3, #32
 2358 000c 10D1     		bne	.L233
2086:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2359              		.loc 1 2086 0
 2360 000e 2021     		movs	r1, #32
2078:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2361              		.loc 1 2078 0
ARM GAS  /tmp/cc3lpWmf.s 			page 95


 2362 0010 0268     		ldr	r2, [r0]
2075:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2363              		.loc 1 2075 0
 2364 0012 C385     		strh	r3, [r0, #46]	@ movhi
2078:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2365              		.loc 1 2078 0
 2366 0014 D368     		ldr	r3, [r2, #12]
 2367 0016 23F48073 		bic	r3, r3, #256
 2368 001a D360     		str	r3, [r2, #12]
2079:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 2369              		.loc 1 2079 0
 2370 001c 5369     		ldr	r3, [r2, #20]
 2371 001e 23F00103 		bic	r3, r3, #1
 2372 0022 5361     		str	r3, [r2, #20]
2083:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2373              		.loc 1 2083 0
 2374 0024 5369     		ldr	r3, [r2, #20]
 2375 0026 23F04003 		bic	r3, r3, #64
 2376 002a 5361     		str	r3, [r2, #20]
2086:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 2377              		.loc 1 2086 0
 2378 002c 80F83A10 		strb	r1, [r0, #58]
 2379              	.L233:
2088:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2380              		.loc 1 2088 0
 2381 0030 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2382              	.LVL178:
 2383 0034 08BD     		pop	{r3, pc}
 2384              		.cfi_endproc
 2385              	.LFE104:
 2387 0036 00BF     		.section	.text.UART_Receive_IT.part.1,"ax",%progbits
 2388              		.align	1
 2389              		.p2align 2,,3
 2390              		.syntax unified
 2391              		.thumb
 2392              		.thumb_func
 2393              		.fpu softvfp
 2395              	UART_Receive_IT.part.1:
 2396              	.LFB120:
2404:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2397              		.loc 1 2404 0
 2398              		.cfi_startproc
 2399              		@ args = 0, pretend = 0, frame = 0
 2400              		@ frame_needed = 0, uses_anonymous_args = 0
 2401              	.LVL179:
2411:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2402              		.loc 1 2411 0
 2403 0000 8368     		ldr	r3, [r0, #8]
 2404 0002 B3F5805F 		cmp	r3, #4096
 2405 0006 2CD0     		beq	.L245
2427:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2406              		.loc 1 2427 0
 2407 0008 0369     		ldr	r3, [r0, #16]
 2408 000a 73B1     		cbz	r3, .L246
2433:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2409              		.loc 1 2433 0
 2410 000c 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cc3lpWmf.s 			page 96


 2411 000e 826A     		ldr	r2, [r0, #40]
 2412 0010 5B68     		ldr	r3, [r3, #4]
 2413 0012 511C     		adds	r1, r2, #1
 2414 0014 03F07F03 		and	r3, r3, #127
 2415 0018 8162     		str	r1, [r0, #40]
 2416 001a 1370     		strb	r3, [r2]
 2417              	.L238:
2437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2418              		.loc 1 2437 0
 2419 001c C38D     		ldrh	r3, [r0, #46]
 2420 001e 013B     		subs	r3, r3, #1
 2421 0020 9BB2     		uxth	r3, r3
 2422 0022 C385     		strh	r3, [r0, #46]	@ movhi
 2423 0024 43B1     		cbz	r3, .L247
2460:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2424              		.loc 1 2460 0
 2425 0026 0020     		movs	r0, #0
 2426              	.LVL180:
 2427 0028 7047     		bx	lr
 2428              	.LVL181:
 2429              	.L246:
2429:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2430              		.loc 1 2429 0
 2431 002a 0268     		ldr	r2, [r0]
 2432 002c 836A     		ldr	r3, [r0, #40]
 2433 002e 5268     		ldr	r2, [r2, #4]
 2434 0030 591C     		adds	r1, r3, #1
 2435 0032 8162     		str	r1, [r0, #40]
 2436 0034 1A70     		strb	r2, [r3]
 2437 0036 F1E7     		b	.L238
 2438              	.L247:
2404:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2439              		.loc 1 2404 0
 2440 0038 10B5     		push	{r4, lr}
 2441              		.cfi_def_cfa_offset 8
 2442              		.cfi_offset 4, -8
 2443              		.cfi_offset 14, -4
2448:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2444              		.loc 1 2448 0
 2445 003a 2024     		movs	r4, #32
2440:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2446              		.loc 1 2440 0
 2447 003c 0268     		ldr	r2, [r0]
 2448 003e D168     		ldr	r1, [r2, #12]
 2449 0040 21F02001 		bic	r1, r1, #32
 2450 0044 D160     		str	r1, [r2, #12]
2443:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 2451              		.loc 1 2443 0
 2452 0046 D168     		ldr	r1, [r2, #12]
 2453 0048 21F48071 		bic	r1, r1, #256
 2454 004c D160     		str	r1, [r2, #12]
2445:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2455              		.loc 1 2445 0
 2456 004e 5169     		ldr	r1, [r2, #20]
 2457 0050 21F00101 		bic	r1, r1, #1
 2458 0054 5161     		str	r1, [r2, #20]
2448:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/cc3lpWmf.s 			page 97


 2459              		.loc 1 2448 0
 2460 0056 80F83A40 		strb	r4, [r0, #58]
2450:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2461              		.loc 1 2450 0
 2462 005a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2463              	.LVL182:
2460:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2464              		.loc 1 2460 0
 2465 005e 0020     		movs	r0, #0
 2466 0060 10BD     		pop	{r4, pc}
 2467              	.LVL183:
 2468              	.L245:
 2469              		.cfi_def_cfa_offset 0
 2470              		.cfi_restore 4
 2471              		.cfi_restore 14
2414:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2472              		.loc 1 2414 0
 2473 0062 0269     		ldr	r2, [r0, #16]
2413:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 2474              		.loc 1 2413 0
 2475 0064 836A     		ldr	r3, [r0, #40]
 2476              	.LVL184:
2414:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2477              		.loc 1 2414 0
 2478 0066 3AB9     		cbnz	r2, .L237
2416:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 2479              		.loc 1 2416 0
 2480 0068 0268     		ldr	r2, [r0]
 2481 006a 5268     		ldr	r2, [r2, #4]
 2482 006c C2F30802 		ubfx	r2, r2, #0, #9
 2483 0070 23F8022B 		strh	r2, [r3], #2	@ movhi
 2484              	.LVL185:
2417:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2485              		.loc 1 2417 0
 2486 0074 8362     		str	r3, [r0, #40]
 2487              	.LVL186:
 2488 0076 D1E7     		b	.L238
 2489              	.LVL187:
 2490              	.L237:
2421:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 2491              		.loc 1 2421 0
 2492 0078 0268     		ldr	r2, [r0]
 2493 007a 5268     		ldr	r2, [r2, #4]
 2494 007c D2B2     		uxtb	r2, r2
 2495 007e 23F8012B 		strh	r2, [r3], #1	@ movhi
 2496              	.LVL188:
2422:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 2497              		.loc 1 2422 0
 2498 0082 8362     		str	r3, [r0, #40]
 2499              	.LVL189:
 2500 0084 CAE7     		b	.L238
 2501              		.cfi_endproc
 2502              	.LFE120:
 2504 0086 00BF     		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2505              		.align	1
 2506              		.p2align 2,,3
 2507              		.weak	HAL_UART_RxHalfCpltCallback
ARM GAS  /tmp/cc3lpWmf.s 			page 98


 2508              		.syntax unified
 2509              		.thumb
 2510              		.thumb_func
 2511              		.fpu softvfp
 2513              	HAL_UART_RxHalfCpltCallback:
 2514              	.LFB128:
 2515              		.cfi_startproc
 2516              		@ args = 0, pretend = 0, frame = 0
 2517              		@ frame_needed = 0, uses_anonymous_args = 0
 2518              		@ link register save eliminated.
 2519 0000 7047     		bx	lr
 2520              		.cfi_endproc
 2521              	.LFE128:
 2523 0002 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2524              		.align	1
 2525              		.p2align 2,,3
 2526              		.syntax unified
 2527              		.thumb
 2528              		.thumb_func
 2529              		.fpu softvfp
 2531              	UART_DMARxHalfCplt:
 2532              	.LFB105:
2098:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2533              		.loc 1 2098 0
 2534              		.cfi_startproc
 2535              		@ args = 0, pretend = 0, frame = 0
 2536              		@ frame_needed = 0, uses_anonymous_args = 0
 2537              	.LVL190:
2098:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2538              		.loc 1 2098 0
 2539 0000 08B5     		push	{r3, lr}
 2540              		.cfi_def_cfa_offset 8
 2541              		.cfi_offset 3, -8
 2542              		.cfi_offset 14, -4
2100:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2543              		.loc 1 2100 0
 2544 0002 406A     		ldr	r0, [r0, #36]
 2545              	.LVL191:
 2546 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2547              	.LVL192:
 2548 0008 08BD     		pop	{r3, pc}
 2549              		.cfi_endproc
 2550              	.LFE105:
 2552 000a 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2553              		.align	1
 2554              		.p2align 2,,3
 2555              		.weak	HAL_UART_ErrorCallback
 2556              		.syntax unified
 2557              		.thumb
 2558              		.thumb_func
 2559              		.fpu softvfp
 2561              	HAL_UART_ErrorCallback:
 2562              	.LFB126:
 2563              		.cfi_startproc
 2564              		@ args = 0, pretend = 0, frame = 0
 2565              		@ frame_needed = 0, uses_anonymous_args = 0
 2566              		@ link register save eliminated.
ARM GAS  /tmp/cc3lpWmf.s 			page 99


 2567 0000 7047     		bx	lr
 2568              		.cfi_endproc
 2569              	.LFE126:
 2571 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 2572              		.align	1
 2573              		.p2align 2,,3
 2574              		.syntax unified
 2575              		.thumb
 2576              		.thumb_func
 2577              		.fpu softvfp
 2579              	UART_DMAError:
 2580              	.LFB106:
2109:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2581              		.loc 1 2109 0
 2582              		.cfi_startproc
 2583              		@ args = 0, pretend = 0, frame = 0
 2584              		@ frame_needed = 0, uses_anonymous_args = 0
 2585              	.LVL193:
2109:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2586              		.loc 1 2109 0
 2587 0000 08B5     		push	{r3, lr}
 2588              		.cfi_def_cfa_offset 8
 2589              		.cfi_offset 3, -8
 2590              		.cfi_offset 14, -4
2111:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2591              		.loc 1 2111 0
 2592 0002 436A     		ldr	r3, [r0, #36]
 2593              	.LVL194:
2114:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2594              		.loc 1 2114 0
 2595 0004 1A68     		ldr	r2, [r3]
 2596 0006 5069     		ldr	r0, [r2, #20]
 2597              	.LVL195:
2115:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2598              		.loc 1 2115 0
 2599 0008 93F83910 		ldrb	r1, [r3, #57]	@ zero_extendqisi2
 2600 000c 2129     		cmp	r1, #33
 2601 000e 1CD0     		beq	.L262
 2602              	.LVL196:
 2603              	.L253:
2122:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2604              		.loc 1 2122 0
 2605 0010 5069     		ldr	r0, [r2, #20]
 2606              	.LVL197:
2123:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2607              		.loc 1 2123 0
 2608 0012 93F83A10 		ldrb	r1, [r3, #58]	@ zero_extendqisi2
 2609 0016 2229     		cmp	r1, #34
 2610 0018 07D0     		beq	.L263
 2611              	.LVL198:
 2612              	.L254:
2129:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 2613              		.loc 1 2129 0
 2614 001a DA6B     		ldr	r2, [r3, #60]
2130:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2615              		.loc 1 2130 0
 2616 001c 1846     		mov	r0, r3
ARM GAS  /tmp/cc3lpWmf.s 			page 100


2129:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 2617              		.loc 1 2129 0
 2618 001e 42F01002 		orr	r2, r2, #16
 2619 0022 DA63     		str	r2, [r3, #60]
2130:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2620              		.loc 1 2130 0
 2621 0024 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2622              	.LVL199:
 2623 0028 08BD     		pop	{r3, pc}
 2624              	.LVL200:
 2625              	.L263:
2123:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2626              		.loc 1 2123 0 discriminator 1
 2627 002a 4106     		lsls	r1, r0, #25
 2628 002c F5D5     		bpl	.L254
2125:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2629              		.loc 1 2125 0
 2630 002e 0021     		movs	r1, #0
 2631              	.LBB33:
 2632              	.LBB34:
2197:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2633              		.loc 1 2197 0
 2634 0030 2020     		movs	r0, #32
 2635              	.LVL201:
 2636              	.LBE34:
 2637              	.LBE33:
2125:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2638              		.loc 1 2125 0
 2639 0032 D985     		strh	r1, [r3, #46]	@ movhi
 2640              	.LVL202:
 2641              	.LBB36:
 2642              	.LBB35:
2193:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2643              		.loc 1 2193 0
 2644 0034 D168     		ldr	r1, [r2, #12]
 2645 0036 21F49071 		bic	r1, r1, #288
 2646 003a D160     		str	r1, [r2, #12]
2194:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2647              		.loc 1 2194 0
 2648 003c 5169     		ldr	r1, [r2, #20]
 2649 003e 21F00101 		bic	r1, r1, #1
 2650 0042 5161     		str	r1, [r2, #20]
2197:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2651              		.loc 1 2197 0
 2652 0044 83F83A00 		strb	r0, [r3, #58]
 2653 0048 E7E7     		b	.L254
 2654              	.LVL203:
 2655              	.L262:
 2656              	.LBE35:
 2657              	.LBE36:
2115:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2658              		.loc 1 2115 0 discriminator 1
 2659 004a 0006     		lsls	r0, r0, #24
 2660              	.LVL204:
 2661 004c E0D5     		bpl	.L253
2117:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2662              		.loc 1 2117 0
ARM GAS  /tmp/cc3lpWmf.s 			page 101


 2663 004e 0021     		movs	r1, #0
 2664              	.LBB37:
 2665              	.LBB38:
2182:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2666              		.loc 1 2182 0
 2667 0050 2020     		movs	r0, #32
 2668              	.LBE38:
 2669              	.LBE37:
2117:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2670              		.loc 1 2117 0
 2671 0052 D984     		strh	r1, [r3, #38]	@ movhi
 2672              	.LVL205:
 2673              	.LBB40:
 2674              	.LBB39:
2179:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2675              		.loc 1 2179 0
 2676 0054 D168     		ldr	r1, [r2, #12]
 2677 0056 21F0C001 		bic	r1, r1, #192
 2678 005a D160     		str	r1, [r2, #12]
2182:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2679              		.loc 1 2182 0
 2680 005c 83F83900 		strb	r0, [r3, #57]
 2681 0060 D6E7     		b	.L253
 2682              	.LBE39:
 2683              	.LBE40:
 2684              		.cfi_endproc
 2685              	.LFE106:
 2687 0062 00BF     		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2688              		.align	1
 2689              		.p2align 2,,3
 2690              		.global	HAL_UART_IRQHandler
 2691              		.syntax unified
 2692              		.thumb
 2693              		.thumb_func
 2694              		.fpu softvfp
 2696              	HAL_UART_IRQHandler:
 2697              	.LFB86:
1558:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 2698              		.loc 1 1558 0
 2699              		.cfi_startproc
 2700              		@ args = 0, pretend = 0, frame = 0
 2701              		@ frame_needed = 0, uses_anonymous_args = 0
 2702              	.LVL206:
1559:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2703              		.loc 1 1559 0
 2704 0000 0368     		ldr	r3, [r0]
1558:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 2705              		.loc 1 1558 0
 2706 0002 70B5     		push	{r4, r5, r6, lr}
 2707              		.cfi_def_cfa_offset 16
 2708              		.cfi_offset 4, -16
 2709              		.cfi_offset 5, -12
 2710              		.cfi_offset 6, -8
 2711              		.cfi_offset 14, -4
1559:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2712              		.loc 1 1559 0
 2713 0004 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/cc3lpWmf.s 			page 102


 2714              	.LVL207:
1558:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 2715              		.loc 1 1558 0
 2716 0006 0446     		mov	r4, r0
1567:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2717              		.loc 1 1567 0
 2718 0008 1607     		lsls	r6, r2, #28
1560:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2719              		.loc 1 1560 0
 2720 000a DD68     		ldr	r5, [r3, #12]
 2721              	.LVL208:
1561:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
 2722              		.loc 1 1561 0
 2723 000c 5969     		ldr	r1, [r3, #20]
 2724              	.LVL209:
1567:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2725              		.loc 1 1567 0
 2726 000e 4AD0     		beq	.L340
1578:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2727              		.loc 1 1578 0 discriminator 1
 2728 0010 11F00101 		ands	r1, r1, #1
 2729              	.LVL210:
 2730 0014 53D0     		beq	.L341
 2731              	.L269:
1581:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2732              		.loc 1 1581 0
 2733 0016 D607     		lsls	r6, r2, #31
 2734 0018 05D5     		bpl	.L270
1581:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2735              		.loc 1 1581 0 is_stmt 0 discriminator 1
 2736 001a E805     		lsls	r0, r5, #23
 2737              	.LVL211:
 2738 001c 03D5     		bpl	.L270
1583:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2739              		.loc 1 1583 0 is_stmt 1
 2740 001e E06B     		ldr	r0, [r4, #60]
 2741 0020 40F00100 		orr	r0, r0, #1
 2742 0024 E063     		str	r0, [r4, #60]
 2743              	.L270:
1587:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2744              		.loc 1 1587 0
 2745 0026 5607     		lsls	r6, r2, #29
 2746 0028 7BD5     		bpl	.L271
1587:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2747              		.loc 1 1587 0 is_stmt 0 discriminator 1
 2748 002a 0029     		cmp	r1, #0
 2749 002c 00F08580 		beq	.L272
1589:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2750              		.loc 1 1589 0 is_stmt 1
 2751 0030 E16B     		ldr	r1, [r4, #60]
1593:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2752              		.loc 1 1593 0
 2753 0032 9007     		lsls	r0, r2, #30
1589:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2754              		.loc 1 1589 0
 2755 0034 41F00201 		orr	r1, r1, #2
 2756 0038 E163     		str	r1, [r4, #60]
ARM GAS  /tmp/cc3lpWmf.s 			page 103


1593:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2757              		.loc 1 1593 0
 2758 003a 77D5     		bpl	.L273
 2759              	.L277:
1595:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2760              		.loc 1 1595 0
 2761 003c E16B     		ldr	r1, [r4, #60]
 2762 003e 41F00401 		orr	r1, r1, #4
 2763 0042 E163     		str	r1, [r4, #60]
1599:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     { 
 2764              		.loc 1 1599 0
 2765 0044 1107     		lsls	r1, r2, #28
 2766 0046 73D4     		bmi	.L274
 2767              	.L278:
1605:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2768              		.loc 1 1605 0
 2769 0048 E16B     		ldr	r1, [r4, #60]
 2770 004a 0029     		cmp	r1, #0
 2771 004c 2AD0     		beq	.L264
1608:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2772              		.loc 1 1608 0
 2773 004e 9106     		lsls	r1, r2, #26
 2774 0050 05D5     		bpl	.L280
1608:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2775              		.loc 1 1608 0 is_stmt 0 discriminator 1
 2776 0052 AA06     		lsls	r2, r5, #26
 2777              	.LVL212:
 2778 0054 03D5     		bpl	.L280
 2779              	.LVL213:
 2780              	.LBB51:
 2781              	.LBB52:
2409:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2782              		.loc 1 2409 0 is_stmt 1
 2783 0056 94F83A20 		ldrb	r2, [r4, #58]	@ zero_extendqisi2
 2784 005a 222A     		cmp	r2, #34
 2785 005c 7DD0     		beq	.L342
 2786              	.LVL214:
 2787              	.L280:
 2788              	.LBE52:
 2789              	.LBE51:
1615:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 2790              		.loc 1 1615 0
 2791 005e 5D69     		ldr	r5, [r3, #20]
 2792              	.LVL215:
1616:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2793              		.loc 1 1616 0
 2794 0060 E16B     		ldr	r1, [r4, #60]
 2795 0062 0E07     		lsls	r6, r1, #28
 2796 0064 02D4     		bmi	.L281
1616:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 2797              		.loc 1 1616 0 is_stmt 0 discriminator 1
 2798 0066 15F04005 		ands	r5, r5, #64
 2799              	.LVL216:
 2800 006a 7BD0     		beq	.L282
 2801              	.LVL217:
 2802              	.L281:
 2803              	.LBB54:
ARM GAS  /tmp/cc3lpWmf.s 			page 104


 2804              	.LBB55:
2197:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2805              		.loc 1 2197 0 is_stmt 1
 2806 006c 2021     		movs	r1, #32
2193:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2807              		.loc 1 2193 0
 2808 006e DA68     		ldr	r2, [r3, #12]
 2809 0070 22F49072 		bic	r2, r2, #288
 2810 0074 DA60     		str	r2, [r3, #12]
2194:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2811              		.loc 1 2194 0
 2812 0076 5A69     		ldr	r2, [r3, #20]
 2813 0078 22F00102 		bic	r2, r2, #1
 2814 007c 5A61     		str	r2, [r3, #20]
2197:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2815              		.loc 1 2197 0
 2816 007e 84F83A10 		strb	r1, [r4, #58]
 2817              	.LVL218:
 2818              	.LBE55:
 2819              	.LBE54:
1624:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 2820              		.loc 1 1624 0
 2821 0082 5A69     		ldr	r2, [r3, #20]
 2822 0084 5506     		lsls	r5, r2, #25
 2823 0086 5FD5     		bpl	.L283
1626:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2824              		.loc 1 1626 0
 2825 0088 5A69     		ldr	r2, [r3, #20]
1629:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
 2826              		.loc 1 1629 0
 2827 008a 616B     		ldr	r1, [r4, #52]
1626:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2828              		.loc 1 1626 0
 2829 008c 22F04002 		bic	r2, r2, #64
 2830 0090 5A61     		str	r2, [r3, #20]
1629:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
 2831              		.loc 1 1629 0
 2832 0092 0029     		cmp	r1, #0
 2833 0094 58D0     		beq	.L283
1633:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2834              		.loc 1 1633 0
 2835 0096 3C4B     		ldr	r3, .L346
1634:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             {
 2836              		.loc 1 1634 0
 2837 0098 0846     		mov	r0, r1
1633:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2838              		.loc 1 1633 0
 2839 009a 4B63     		str	r3, [r1, #52]
1634:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             {
 2840              		.loc 1 1634 0
 2841 009c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2842              	.LVL219:
 2843 00a0 0028     		cmp	r0, #0
 2844 00a2 55D1     		bne	.L343
 2845              	.L264:
 2846 00a4 70BD     		pop	{r4, r5, r6, pc}
 2847              	.LVL220:
ARM GAS  /tmp/cc3lpWmf.s 			page 105


 2848              	.L340:
1570:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2849              		.loc 1 1570 0
 2850 00a6 9606     		lsls	r6, r2, #26
 2851 00a8 0CD5     		bpl	.L266
1570:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2852              		.loc 1 1570 0 is_stmt 0 discriminator 1
 2853 00aa A906     		lsls	r1, r5, #26
 2854              	.LVL221:
 2855 00ac 0AD5     		bpl	.L266
 2856              	.LVL222:
 2857              	.LBB56:
 2858              	.LBB57:
2409:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2859              		.loc 1 2409 0 is_stmt 1
 2860 00ae 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2861 00b2 222B     		cmp	r3, #34
 2862 00b4 F6D1     		bne	.L264
 2863              	.LBE57:
 2864              	.LBE56:
1676:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2865              		.loc 1 1676 0
 2866 00b6 BDE87040 		pop	{r4, r5, r6, lr}
 2867              		.cfi_remember_state
 2868              		.cfi_restore 14
 2869              		.cfi_restore 6
 2870              		.cfi_restore 5
 2871              		.cfi_restore 4
 2872              		.cfi_def_cfa_offset 0
 2873              	.LVL223:
 2874              	.LBB59:
 2875              	.LBB58:
 2876 00ba FFF7FEBF 		b	UART_Receive_IT.part.1
 2877              	.LVL224:
 2878              	.L341:
 2879              		.cfi_restore_state
 2880              	.LBE58:
 2881              	.LBE59:
1578:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2882              		.loc 1 1578 0 discriminator 2
 2883 00be 15F4907F 		tst	r5, #288
 2884 00c2 A8D1     		bne	.L269
 2885              	.L266:
1664:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2886              		.loc 1 1664 0
 2887 00c4 1006     		lsls	r0, r2, #24
 2888              	.LVL225:
 2889 00c6 0ED4     		bmi	.L344
 2890              	.L284:
1671:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2891              		.loc 1 1671 0
 2892 00c8 5606     		lsls	r6, r2, #25
 2893 00ca EBD5     		bpl	.L264
1671:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2894              		.loc 1 1671 0 is_stmt 0 discriminator 1
 2895 00cc 6D06     		lsls	r5, r5, #25
 2896              	.LVL226:
ARM GAS  /tmp/cc3lpWmf.s 			page 106


 2897 00ce E9D5     		bpl	.L264
 2898              	.LVL227:
 2899              	.LBB60:
 2900              	.LBB61:
2392:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 2901              		.loc 1 2392 0 is_stmt 1
 2902 00d0 2021     		movs	r1, #32
2389:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2903              		.loc 1 2389 0
 2904 00d2 DA68     		ldr	r2, [r3, #12]
 2905              	.LVL228:
2393:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2906              		.loc 1 2393 0
 2907 00d4 2046     		mov	r0, r4
2389:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2908              		.loc 1 2389 0
 2909 00d6 22F04002 		bic	r2, r2, #64
 2910 00da DA60     		str	r2, [r3, #12]
2392:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 2911              		.loc 1 2392 0
 2912 00dc 84F83910 		strb	r1, [r4, #57]
2393:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 2913              		.loc 1 2393 0
 2914 00e0 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2915              	.LVL229:
 2916 00e4 70BD     		pop	{r4, r5, r6, pc}
 2917              	.LVL230:
 2918              	.L344:
 2919              	.LBE61:
 2920              	.LBE60:
1664:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2921              		.loc 1 1664 0 discriminator 1
 2922 00e6 2906     		lsls	r1, r5, #24
 2923 00e8 EED5     		bpl	.L284
 2924              	.LVL231:
 2925              	.LBB62:
 2926              	.LBB63:
2344:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 2927              		.loc 1 2344 0
 2928 00ea 94F83920 		ldrb	r2, [r4, #57]	@ zero_extendqisi2
 2929              	.LVL232:
 2930 00ee 212A     		cmp	r2, #33
 2931 00f0 D8D1     		bne	.L264
2346:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2932              		.loc 1 2346 0
 2933 00f2 A268     		ldr	r2, [r4, #8]
 2934 00f4 B2F5805F 		cmp	r2, #4096
2348:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 2935              		.loc 1 2348 0
 2936 00f8 226A     		ldr	r2, [r4, #32]
2346:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2937              		.loc 1 2346 0
 2938 00fa 38D0     		beq	.L345
2361:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2939              		.loc 1 2361 0
 2940 00fc 511C     		adds	r1, r2, #1
 2941 00fe 2162     		str	r1, [r4, #32]
ARM GAS  /tmp/cc3lpWmf.s 			page 107


 2942 0100 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2943 0102 5A60     		str	r2, [r3, #4]
 2944              	.L287:
2364:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2945              		.loc 1 2364 0
 2946 0104 E28C     		ldrh	r2, [r4, #38]
 2947 0106 013A     		subs	r2, r2, #1
 2948 0108 92B2     		uxth	r2, r2
 2949 010a E284     		strh	r2, [r4, #38]	@ movhi
 2950 010c 002A     		cmp	r2, #0
 2951 010e C9D1     		bne	.L264
2367:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 2952              		.loc 1 2367 0
 2953 0110 DA68     		ldr	r2, [r3, #12]
 2954 0112 22F08002 		bic	r2, r2, #128
 2955 0116 DA60     		str	r2, [r3, #12]
2370:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2956              		.loc 1 2370 0
 2957 0118 DA68     		ldr	r2, [r3, #12]
 2958 011a 42F04002 		orr	r2, r2, #64
 2959 011e DA60     		str	r2, [r3, #12]
 2960 0120 70BD     		pop	{r4, r5, r6, pc}
 2961              	.LVL233:
 2962              	.L271:
 2963              	.LBE63:
 2964              	.LBE62:
1593:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2965              		.loc 1 1593 0
 2966 0122 9607     		lsls	r6, r2, #30
 2967 0124 0BD5     		bpl	.L276
1593:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2968              		.loc 1 1593 0 is_stmt 0 discriminator 1
 2969 0126 0029     		cmp	r1, #0
 2970 0128 88D1     		bne	.L277
 2971 012a 8DE7     		b	.L278
 2972              	.L273:
1599:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     { 
 2973              		.loc 1 1599 0 is_stmt 1
 2974 012c 1107     		lsls	r1, r2, #28
 2975 012e 8BD5     		bpl	.L278
 2976              	.L274:
1601:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 2977              		.loc 1 1601 0
 2978 0130 E16B     		ldr	r1, [r4, #60]
 2979 0132 41F00801 		orr	r1, r1, #8
 2980 0136 E163     		str	r1, [r4, #60]
 2981 0138 86E7     		b	.L278
 2982              	.L272:
1593:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2983              		.loc 1 1593 0
 2984 013a 9007     		lsls	r0, r2, #30
 2985 013c 84D4     		bmi	.L278
 2986              	.L276:
1599:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     { 
 2987              		.loc 1 1599 0
 2988 013e 1007     		lsls	r0, r2, #28
 2989 0140 82D5     		bpl	.L278
ARM GAS  /tmp/cc3lpWmf.s 			page 108


1599:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     { 
 2990              		.loc 1 1599 0 is_stmt 0 discriminator 1
 2991 0142 0029     		cmp	r1, #0
 2992 0144 80D0     		beq	.L278
 2993 0146 F3E7     		b	.L274
 2994              	.LVL234:
 2995              	.L283:
1643:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
 2996              		.loc 1 1643 0 is_stmt 1
 2997 0148 2046     		mov	r0, r4
 2998 014a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2999              	.LVL235:
 3000 014e 70BD     		pop	{r4, r5, r6, pc}
 3001              	.LVL236:
 3002              	.L343:
1637:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             }
 3003              		.loc 1 1637 0
 3004 0150 606B     		ldr	r0, [r4, #52]
1676:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3005              		.loc 1 1676 0
 3006 0152 BDE87040 		pop	{r4, r5, r6, lr}
 3007              		.cfi_remember_state
 3008              		.cfi_restore 14
 3009              		.cfi_restore 6
 3010              		.cfi_restore 5
 3011              		.cfi_restore 4
 3012              		.cfi_def_cfa_offset 0
 3013              	.LVL237:
1637:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             }
 3014              		.loc 1 1637 0
 3015 0156 436B     		ldr	r3, [r0, #52]
 3016 0158 1847     		bx	r3	@ indirect register sibling call
 3017              	.LVL238:
 3018              	.L342:
 3019              		.cfi_restore_state
 3020              	.LBB65:
 3021              	.LBB53:
 3022 015a 2046     		mov	r0, r4
 3023 015c FFF7FEFF 		bl	UART_Receive_IT.part.1
 3024              	.LVL239:
 3025 0160 2368     		ldr	r3, [r4]
 3026 0162 7CE7     		b	.L280
 3027              	.LVL240:
 3028              	.L282:
 3029              	.LBE53:
 3030              	.LBE65:
1656:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3031              		.loc 1 1656 0
 3032 0164 2046     		mov	r0, r4
 3033 0166 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3034              	.LVL241:
1657:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3035              		.loc 1 1657 0
 3036 016a E563     		str	r5, [r4, #60]
 3037 016c 70BD     		pop	{r4, r5, r6, pc}
 3038              	.LVL242:
 3039              	.L345:
ARM GAS  /tmp/cc3lpWmf.s 			page 109


 3040              	.LBB66:
 3041              	.LBB64:
2349:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 3042              		.loc 1 2349 0
 3043 016e 1188     		ldrh	r1, [r2]
2350:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3044              		.loc 1 2350 0
 3045 0170 2069     		ldr	r0, [r4, #16]
2349:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 3046              		.loc 1 2349 0
 3047 0172 C1F30801 		ubfx	r1, r1, #0, #9
 3048 0176 5960     		str	r1, [r3, #4]
2350:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3049              		.loc 1 2350 0
 3050 0178 10B9     		cbnz	r0, .L286
2352:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3051              		.loc 1 2352 0
 3052 017a 0232     		adds	r2, r2, #2
 3053              	.LVL243:
 3054 017c 2262     		str	r2, [r4, #32]
 3055              	.LVL244:
 3056 017e C1E7     		b	.L287
 3057              	.LVL245:
 3058              	.L286:
2356:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3059              		.loc 1 2356 0
 3060 0180 0132     		adds	r2, r2, #1
 3061              	.LVL246:
 3062 0182 2262     		str	r2, [r4, #32]
 3063              	.LVL247:
 3064 0184 BEE7     		b	.L287
 3065              	.L347:
 3066 0186 00BF     		.align	2
 3067              	.L346:
 3068 0188 00000000 		.word	UART_DMAAbortOnError
 3069              	.LBE64:
 3070              	.LBE66:
 3071              		.cfi_endproc
 3072              	.LFE86:
 3074              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3075              		.align	1
 3076              		.p2align 2,,3
 3077              		.syntax unified
 3078              		.thumb
 3079              		.thumb_func
 3080              		.fpu softvfp
 3082              	UART_DMAAbortOnError:
 3083              	.LFB110:
2207:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3084              		.loc 1 2207 0
 3085              		.cfi_startproc
 3086              		@ args = 0, pretend = 0, frame = 0
 3087              		@ frame_needed = 0, uses_anonymous_args = 0
 3088              	.LVL248:
2209:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3089              		.loc 1 2209 0
 3090 0000 0022     		movs	r2, #0
ARM GAS  /tmp/cc3lpWmf.s 			page 110


2207:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3091              		.loc 1 2207 0
 3092 0002 08B5     		push	{r3, lr}
 3093              		.cfi_def_cfa_offset 8
 3094              		.cfi_offset 3, -8
 3095              		.cfi_offset 14, -4
2208:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3096              		.loc 1 2208 0
 3097 0004 436A     		ldr	r3, [r0, #36]
 3098              	.LVL249:
2209:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3099              		.loc 1 2209 0
 3100 0006 DA85     		strh	r2, [r3, #46]	@ movhi
2212:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3101              		.loc 1 2212 0
 3102 0008 1846     		mov	r0, r3
 3103              	.LVL250:
2210:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3104              		.loc 1 2210 0
 3105 000a DA84     		strh	r2, [r3, #38]	@ movhi
2212:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3106              		.loc 1 2212 0
 3107 000c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3108              	.LVL251:
 3109 0010 08BD     		pop	{r3, pc}
 3110              		.cfi_endproc
 3111              	.LFE110:
 3113 0012 00BF     		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3114              		.align	1
 3115              		.p2align 2,,3
 3116              		.weak	HAL_UART_AbortCpltCallback
 3117              		.syntax unified
 3118              		.thumb
 3119              		.thumb_func
 3120              		.fpu softvfp
 3122              	HAL_UART_AbortCpltCallback:
 3123              	.LFB124:
 3124              		.cfi_startproc
 3125              		@ args = 0, pretend = 0, frame = 0
 3126              		@ frame_needed = 0, uses_anonymous_args = 0
 3127              		@ link register save eliminated.
 3128 0000 7047     		bx	lr
 3129              		.cfi_endproc
 3130              	.LFE124:
 3132 0002 00BF     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3133              		.align	1
 3134              		.p2align 2,,3
 3135              		.global	HAL_UART_Abort_IT
 3136              		.syntax unified
 3137              		.thumb
 3138              		.thumb_func
 3139              		.fpu softvfp
 3141              	HAL_UART_Abort_IT:
 3142              	.LFB83:
1313:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3143              		.loc 1 1313 0
 3144              		.cfi_startproc
ARM GAS  /tmp/cc3lpWmf.s 			page 111


 3145              		@ args = 0, pretend = 0, frame = 0
 3146              		@ frame_needed = 0, uses_anonymous_args = 0
 3147              	.LVL252:
1317:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3148              		.loc 1 1317 0
 3149 0000 0368     		ldr	r3, [r0]
1313:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3150              		.loc 1 1313 0
 3151 0002 10B5     		push	{r4, lr}
 3152              		.cfi_def_cfa_offset 8
 3153              		.cfi_offset 4, -8
 3154              		.cfi_offset 14, -4
1317:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3155              		.loc 1 1317 0
 3156 0004 DA68     		ldr	r2, [r3, #12]
1313:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3157              		.loc 1 1313 0
 3158 0006 0446     		mov	r4, r0
1317:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3159              		.loc 1 1317 0
 3160 0008 22F4F072 		bic	r2, r2, #480
1323:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3161              		.loc 1 1323 0
 3162 000c 006B     		ldr	r0, [r0, #48]
 3163              	.LVL253:
1317:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3164              		.loc 1 1317 0
 3165 000e DA60     		str	r2, [r3, #12]
1318:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3166              		.loc 1 1318 0
 3167 0010 5A69     		ldr	r2, [r3, #20]
 3168 0012 22F00102 		bic	r2, r2, #1
 3169 0016 5A61     		str	r2, [r3, #20]
1323:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3170              		.loc 1 1323 0
 3171 0018 28B1     		cbz	r0, .L352
1327:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3172              		.loc 1 1327 0
 3173 001a 5A69     		ldr	r2, [r3, #20]
 3174 001c 12F08002 		ands	r2, r2, #128
1329:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3175              		.loc 1 1329 0
 3176 0020 18BF     		it	ne
 3177 0022 214A     		ldrne	r2, .L381
1333:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3178              		.loc 1 1333 0
 3179 0024 4263     		str	r2, [r0, #52]
 3180              	.L352:
1337:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3181              		.loc 1 1337 0
 3182 0026 616B     		ldr	r1, [r4, #52]
 3183 0028 29B1     		cbz	r1, .L354
1341:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3184              		.loc 1 1341 0
 3185 002a 5A69     		ldr	r2, [r3, #20]
 3186 002c 12F04002 		ands	r2, r2, #64
1343:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
ARM GAS  /tmp/cc3lpWmf.s 			page 112


 3187              		.loc 1 1343 0
 3188 0030 18BF     		it	ne
 3189 0032 1E4A     		ldrne	r2, .L381+4
1347:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3190              		.loc 1 1347 0
 3191 0034 4A63     		str	r2, [r1, #52]
 3192              	.L354:
1352:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3193              		.loc 1 1352 0
 3194 0036 5A69     		ldr	r2, [r3, #20]
 3195 0038 1206     		lsls	r2, r2, #24
 3196 003a 0BD5     		bpl	.L356
1355:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3197              		.loc 1 1355 0
 3198 003c 5A69     		ldr	r2, [r3, #20]
 3199 003e 22F08002 		bic	r2, r2, #128
 3200 0042 5A61     		str	r2, [r3, #20]
1358:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3201              		.loc 1 1358 0
 3202 0044 30B1     		cbz	r0, .L356
1364:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3203              		.loc 1 1364 0
 3204 0046 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3205              	.LVL254:
 3206 004a 00B3     		cbz	r0, .L357
1366:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3207              		.loc 1 1366 0
 3208 004c 0021     		movs	r1, #0
 3209 004e 226B     		ldr	r2, [r4, #48]
 3210 0050 2368     		ldr	r3, [r4]
 3211 0052 5163     		str	r1, [r2, #52]
 3212              	.L356:
1376:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3213              		.loc 1 1376 0
 3214 0054 5A69     		ldr	r2, [r3, #20]
 3215 0056 5106     		lsls	r1, r2, #25
 3216 0058 0BD5     		bpl	.L361
1378:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3217              		.loc 1 1378 0
 3218 005a 5A69     		ldr	r2, [r3, #20]
1381:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3219              		.loc 1 1381 0
 3220 005c 606B     		ldr	r0, [r4, #52]
1378:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3221              		.loc 1 1378 0
 3222 005e 22F04002 		bic	r2, r2, #64
 3223 0062 5A61     		str	r2, [r3, #20]
1381:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3224              		.loc 1 1381 0
 3225 0064 28B1     		cbz	r0, .L361
 3226              	.LVL255:
 3227              	.L364:
1387:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3228              		.loc 1 1387 0
 3229 0066 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3230              	.LVL256:
 3231 006a 70B1     		cbz	r0, .L378
ARM GAS  /tmp/cc3lpWmf.s 			page 113


1389:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x01U;
 3232              		.loc 1 1389 0
 3233 006c 0022     		movs	r2, #0
 3234 006e 636B     		ldr	r3, [r4, #52]
 3235 0070 5A63     		str	r2, [r3, #52]
 3236              	.LVL257:
 3237              	.L361:
1403:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3238              		.loc 1 1403 0
 3239 0072 0023     		movs	r3, #0
1410:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3240              		.loc 1 1410 0
 3241 0074 2022     		movs	r2, #32
1403:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3242              		.loc 1 1403 0
 3243 0076 E384     		strh	r3, [r4, #38]	@ movhi
1414:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3244              		.loc 1 1414 0
 3245 0078 2046     		mov	r0, r4
1404:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3246              		.loc 1 1404 0
 3247 007a E385     		strh	r3, [r4, #46]	@ movhi
1407:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3248              		.loc 1 1407 0
 3249 007c E363     		str	r3, [r4, #60]
1410:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3250              		.loc 1 1410 0
 3251 007e 84F83920 		strb	r2, [r4, #57]
1411:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3252              		.loc 1 1411 0
 3253 0082 84F83A20 		strb	r2, [r4, #58]
1414:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3254              		.loc 1 1414 0
 3255 0086 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3256              	.LVL258:
 3257              	.L378:
1418:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3258              		.loc 1 1418 0
 3259 008a 0020     		movs	r0, #0
 3260 008c 10BD     		pop	{r4, pc}
 3261              	.LVL259:
 3262              	.L357:
1376:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3263              		.loc 1 1376 0
 3264 008e 2368     		ldr	r3, [r4]
 3265 0090 5A69     		ldr	r2, [r3, #20]
 3266 0092 5206     		lsls	r2, r2, #25
 3267 0094 F9D5     		bpl	.L378
1378:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3268              		.loc 1 1378 0
 3269 0096 5A69     		ldr	r2, [r3, #20]
1381:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3270              		.loc 1 1381 0
 3271 0098 606B     		ldr	r0, [r4, #52]
1378:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3272              		.loc 1 1378 0
 3273 009a 22F04002 		bic	r2, r2, #64
ARM GAS  /tmp/cc3lpWmf.s 			page 114


 3274 009e 5A61     		str	r2, [r3, #20]
1381:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3275              		.loc 1 1381 0
 3276 00a0 0028     		cmp	r0, #0
 3277 00a2 E0D1     		bne	.L364
 3278 00a4 F1E7     		b	.L378
 3279              	.L382:
 3280 00a6 00BF     		.align	2
 3281              	.L381:
 3282 00a8 00000000 		.word	UART_DMATxAbortCallback
 3283 00ac 00000000 		.word	UART_DMARxAbortCallback
 3284              		.cfi_endproc
 3285              	.LFE83:
 3287              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3288              		.align	1
 3289              		.p2align 2,,3
 3290              		.syntax unified
 3291              		.thumb
 3292              		.thumb_func
 3293              		.fpu softvfp
 3295              	UART_DMARxAbortCallback:
 3296              	.LFB112:
2262:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3297              		.loc 1 2262 0
 3298              		.cfi_startproc
 3299              		@ args = 0, pretend = 0, frame = 0
 3300              		@ frame_needed = 0, uses_anonymous_args = 0
 3301              	.LVL260:
 3302 0000 10B5     		push	{r4, lr}
 3303              		.cfi_def_cfa_offset 8
 3304              		.cfi_offset 4, -8
 3305              		.cfi_offset 14, -4
2265:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3306              		.loc 1 2265 0
 3307 0002 0024     		movs	r4, #0
2263:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3308              		.loc 1 2263 0
 3309 0004 436A     		ldr	r3, [r0, #36]
 3310              	.LVL261:
2265:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3311              		.loc 1 2265 0
 3312 0006 596B     		ldr	r1, [r3, #52]
2268:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3313              		.loc 1 2268 0
 3314 0008 1A6B     		ldr	r2, [r3, #48]
2265:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3315              		.loc 1 2265 0
 3316 000a 4C63     		str	r4, [r1, #52]
2268:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3317              		.loc 1 2268 0
 3318 000c 12B1     		cbz	r2, .L384
2270:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3319              		.loc 1 2270 0
 3320 000e 526B     		ldr	r2, [r2, #52]
 3321 0010 02B1     		cbz	r2, .L384
 3322 0012 10BD     		pop	{r4, pc}
 3323              	.L384:
ARM GAS  /tmp/cc3lpWmf.s 			page 115


2277:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3324              		.loc 1 2277 0
 3325 0014 0022     		movs	r2, #0
2284:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3326              		.loc 1 2284 0
 3327 0016 2021     		movs	r1, #32
2277:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3328              		.loc 1 2277 0
 3329 0018 DA84     		strh	r2, [r3, #38]	@ movhi
2288:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3330              		.loc 1 2288 0
 3331 001a 1846     		mov	r0, r3
 3332              	.LVL262:
2278:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3333              		.loc 1 2278 0
 3334 001c DA85     		strh	r2, [r3, #46]	@ movhi
2281:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3335              		.loc 1 2281 0
 3336 001e DA63     		str	r2, [r3, #60]
2284:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3337              		.loc 1 2284 0
 3338 0020 83F83910 		strb	r1, [r3, #57]
2285:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3339              		.loc 1 2285 0
 3340 0024 83F83A10 		strb	r1, [r3, #58]
2288:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3341              		.loc 1 2288 0
 3342 0028 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3343              	.LVL263:
 3344 002c 10BD     		pop	{r4, pc}
 3345              		.cfi_endproc
 3346              	.LFE112:
 3348 002e 00BF     		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3349              		.align	1
 3350              		.p2align 2,,3
 3351              		.syntax unified
 3352              		.thumb
 3353              		.thumb_func
 3354              		.fpu softvfp
 3356              	UART_DMATxAbortCallback:
 3357              	.LFB111:
2224:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3358              		.loc 1 2224 0
 3359              		.cfi_startproc
 3360              		@ args = 0, pretend = 0, frame = 0
 3361              		@ frame_needed = 0, uses_anonymous_args = 0
 3362              	.LVL264:
 3363 0000 10B5     		push	{r4, lr}
 3364              		.cfi_def_cfa_offset 8
 3365              		.cfi_offset 4, -8
 3366              		.cfi_offset 14, -4
2227:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3367              		.loc 1 2227 0
 3368 0002 0024     		movs	r4, #0
2225:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3369              		.loc 1 2225 0
 3370 0004 436A     		ldr	r3, [r0, #36]
ARM GAS  /tmp/cc3lpWmf.s 			page 116


 3371              	.LVL265:
2227:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3372              		.loc 1 2227 0
 3373 0006 196B     		ldr	r1, [r3, #48]
2230:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3374              		.loc 1 2230 0
 3375 0008 5A6B     		ldr	r2, [r3, #52]
2227:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3376              		.loc 1 2227 0
 3377 000a 4C63     		str	r4, [r1, #52]
2230:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3378              		.loc 1 2230 0
 3379 000c 12B1     		cbz	r2, .L391
2232:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3380              		.loc 1 2232 0
 3381 000e 526B     		ldr	r2, [r2, #52]
 3382 0010 02B1     		cbz	r2, .L391
 3383 0012 10BD     		pop	{r4, pc}
 3384              	.L391:
2239:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3385              		.loc 1 2239 0
 3386 0014 0022     		movs	r2, #0
2246:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3387              		.loc 1 2246 0
 3388 0016 2021     		movs	r1, #32
2239:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3389              		.loc 1 2239 0
 3390 0018 DA84     		strh	r2, [r3, #38]	@ movhi
2250:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3391              		.loc 1 2250 0
 3392 001a 1846     		mov	r0, r3
 3393              	.LVL266:
2240:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3394              		.loc 1 2240 0
 3395 001c DA85     		strh	r2, [r3, #46]	@ movhi
2243:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3396              		.loc 1 2243 0
 3397 001e DA63     		str	r2, [r3, #60]
2246:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3398              		.loc 1 2246 0
 3399 0020 83F83910 		strb	r1, [r3, #57]
2247:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3400              		.loc 1 2247 0
 3401 0024 83F83A10 		strb	r1, [r3, #58]
2250:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3402              		.loc 1 2250 0
 3403 0028 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3404              	.LVL267:
 3405 002c 10BD     		pop	{r4, pc}
 3406              		.cfi_endproc
 3407              	.LFE111:
 3409 002e 00BF     		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3410              		.align	1
 3411              		.p2align 2,,3
 3412              		.weak	HAL_UART_AbortTransmitCpltCallback
 3413              		.syntax unified
 3414              		.thumb
ARM GAS  /tmp/cc3lpWmf.s 			page 117


 3415              		.thumb_func
 3416              		.fpu softvfp
 3418              	HAL_UART_AbortTransmitCpltCallback:
 3419              	.LFB122:
 3420              		.cfi_startproc
 3421              		@ args = 0, pretend = 0, frame = 0
 3422              		@ frame_needed = 0, uses_anonymous_args = 0
 3423              		@ link register save eliminated.
 3424 0000 7047     		bx	lr
 3425              		.cfi_endproc
 3426              	.LFE122:
 3428 0002 00BF     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3429              		.align	1
 3430              		.p2align 2,,3
 3431              		.global	HAL_UART_AbortTransmit_IT
 3432              		.syntax unified
 3433              		.thumb
 3434              		.thumb_func
 3435              		.fpu softvfp
 3437              	HAL_UART_AbortTransmit_IT:
 3438              	.LFB84:
1435:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3439              		.loc 1 1435 0
 3440              		.cfi_startproc
 3441              		@ args = 0, pretend = 0, frame = 0
 3442              		@ frame_needed = 0, uses_anonymous_args = 0
 3443              	.LVL268:
1437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3444              		.loc 1 1437 0
 3445 0000 0368     		ldr	r3, [r0]
1435:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3446              		.loc 1 1435 0
 3447 0002 10B5     		push	{r4, lr}
 3448              		.cfi_def_cfa_offset 8
 3449              		.cfi_offset 4, -8
 3450              		.cfi_offset 14, -4
1437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3451              		.loc 1 1437 0
 3452 0004 DA68     		ldr	r2, [r3, #12]
1435:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3453              		.loc 1 1435 0
 3454 0006 0446     		mov	r4, r0
1437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3455              		.loc 1 1437 0
 3456 0008 22F0C002 		bic	r2, r2, #192
 3457 000c DA60     		str	r2, [r3, #12]
1440:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3458              		.loc 1 1440 0
 3459 000e 5A69     		ldr	r2, [r3, #20]
 3460 0010 12F08002 		ands	r2, r2, #128
 3461 0014 0DD0     		beq	.L399
1442:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3462              		.loc 1 1442 0
 3463 0016 5A69     		ldr	r2, [r3, #20]
1445:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3464              		.loc 1 1445 0
 3465 0018 016B     		ldr	r1, [r0, #48]
ARM GAS  /tmp/cc3lpWmf.s 			page 118


1442:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3466              		.loc 1 1442 0
 3467 001a 22F08002 		bic	r2, r2, #128
 3468 001e 5A61     		str	r2, [r3, #20]
1445:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3469              		.loc 1 1445 0
 3470 0020 A1B1     		cbz	r1, .L400
1449:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3471              		.loc 1 1449 0
 3472 0022 0E4B     		ldr	r3, .L407
1452:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3473              		.loc 1 1452 0
 3474 0024 0846     		mov	r0, r1
 3475              	.LVL269:
1449:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3476              		.loc 1 1449 0
 3477 0026 4B63     		str	r3, [r1, #52]
1452:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3478              		.loc 1 1452 0
 3479 0028 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3480              	.LVL270:
 3481 002c 48B9     		cbnz	r0, .L406
 3482              	.L401:
1483:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3483              		.loc 1 1483 0
 3484 002e 0020     		movs	r0, #0
 3485 0030 10BD     		pop	{r4, pc}
 3486              	.LVL271:
 3487              	.L399:
1476:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3488              		.loc 1 1476 0
 3489 0032 2023     		movs	r3, #32
1473:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3490              		.loc 1 1473 0
 3491 0034 C284     		strh	r2, [r0, #38]	@ movhi
1476:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3492              		.loc 1 1476 0
 3493 0036 80F83930 		strb	r3, [r0, #57]
1479:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3494              		.loc 1 1479 0
 3495 003a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3496              	.LVL272:
1483:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3497              		.loc 1 1483 0
 3498 003e 0020     		movs	r0, #0
 3499 0040 10BD     		pop	{r4, pc}
 3500              	.LVL273:
 3501              	.L406:
1455:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3502              		.loc 1 1455 0
 3503 0042 206B     		ldr	r0, [r4, #48]
 3504 0044 436B     		ldr	r3, [r0, #52]
 3505 0046 9847     		blx	r3
 3506              	.LVL274:
1483:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3507              		.loc 1 1483 0
 3508 0048 0020     		movs	r0, #0
ARM GAS  /tmp/cc3lpWmf.s 			page 119


 3509 004a 10BD     		pop	{r4, pc}
 3510              	.LVL275:
 3511              	.L400:
1464:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3512              		.loc 1 1464 0
 3513 004c 2023     		movs	r3, #32
1461:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3514              		.loc 1 1461 0
 3515 004e C184     		strh	r1, [r0, #38]	@ movhi
1464:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3516              		.loc 1 1464 0
 3517 0050 80F83930 		strb	r3, [r0, #57]
1467:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3518              		.loc 1 1467 0
 3519 0054 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3520              	.LVL276:
 3521 0058 E9E7     		b	.L401
 3522              	.L408:
 3523 005a 00BF     		.align	2
 3524              	.L407:
 3525 005c 00000000 		.word	UART_DMATxOnlyAbortCallback
 3526              		.cfi_endproc
 3527              	.LFE84:
 3529              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3530              		.align	1
 3531              		.p2align 2,,3
 3532              		.syntax unified
 3533              		.thumb
 3534              		.thumb_func
 3535              		.fpu softvfp
 3537              	UART_DMATxOnlyAbortCallback:
 3538              	.LFB113:
2300:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3539              		.loc 1 2300 0
 3540              		.cfi_startproc
 3541              		@ args = 0, pretend = 0, frame = 0
 3542              		@ frame_needed = 0, uses_anonymous_args = 0
 3543              	.LVL277:
2303:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3544              		.loc 1 2303 0
 3545 0000 0021     		movs	r1, #0
2306:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3546              		.loc 1 2306 0
 3547 0002 2022     		movs	r2, #32
2300:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3548              		.loc 1 2300 0
 3549 0004 08B5     		push	{r3, lr}
 3550              		.cfi_def_cfa_offset 8
 3551              		.cfi_offset 3, -8
 3552              		.cfi_offset 14, -4
2301:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3553              		.loc 1 2301 0
 3554 0006 436A     		ldr	r3, [r0, #36]
 3555              	.LVL278:
2303:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3556              		.loc 1 2303 0
 3557 0008 D984     		strh	r1, [r3, #38]	@ movhi
ARM GAS  /tmp/cc3lpWmf.s 			page 120


2309:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3558              		.loc 1 2309 0
 3559 000a 1846     		mov	r0, r3
 3560              	.LVL279:
2306:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3561              		.loc 1 2306 0
 3562 000c 83F83920 		strb	r2, [r3, #57]
2309:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3563              		.loc 1 2309 0
 3564 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3565              	.LVL280:
 3566 0014 08BD     		pop	{r3, pc}
 3567              		.cfi_endproc
 3568              	.LFE113:
 3570 0016 00BF     		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3571              		.align	1
 3572              		.p2align 2,,3
 3573              		.weak	HAL_UART_AbortReceiveCpltCallback
 3574              		.syntax unified
 3575              		.thumb
 3576              		.thumb_func
 3577              		.fpu softvfp
 3579              	HAL_UART_AbortReceiveCpltCallback:
 3580              	.LFB94:
1788:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3581              		.loc 1 1788 0
 3582              		.cfi_startproc
 3583              		@ args = 0, pretend = 0, frame = 0
 3584              		@ frame_needed = 0, uses_anonymous_args = 0
 3585              		@ link register save eliminated.
 3586              	.LVL281:
 3587 0000 7047     		bx	lr
 3588              		.cfi_endproc
 3589              	.LFE94:
 3591 0002 00BF     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3592              		.align	1
 3593              		.p2align 2,,3
 3594              		.global	HAL_UART_AbortReceive_IT
 3595              		.syntax unified
 3596              		.thumb
 3597              		.thumb_func
 3598              		.fpu softvfp
 3600              	HAL_UART_AbortReceive_IT:
 3601              	.LFB85:
1500:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3602              		.loc 1 1500 0
 3603              		.cfi_startproc
 3604              		@ args = 0, pretend = 0, frame = 0
 3605              		@ frame_needed = 0, uses_anonymous_args = 0
 3606              	.LVL282:
1502:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3607              		.loc 1 1502 0
 3608 0000 0368     		ldr	r3, [r0]
1500:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3609              		.loc 1 1500 0
 3610 0002 10B5     		push	{r4, lr}
 3611              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc3lpWmf.s 			page 121


 3612              		.cfi_offset 4, -8
 3613              		.cfi_offset 14, -4
1502:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3614              		.loc 1 1502 0
 3615 0004 DA68     		ldr	r2, [r3, #12]
1500:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3616              		.loc 1 1500 0
 3617 0006 0446     		mov	r4, r0
1502:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3618              		.loc 1 1502 0
 3619 0008 22F49072 		bic	r2, r2, #288
 3620 000c DA60     		str	r2, [r3, #12]
1503:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3621              		.loc 1 1503 0
 3622 000e 5A69     		ldr	r2, [r3, #20]
 3623 0010 22F00102 		bic	r2, r2, #1
 3624 0014 5A61     		str	r2, [r3, #20]
1506:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 3625              		.loc 1 1506 0
 3626 0016 5A69     		ldr	r2, [r3, #20]
 3627 0018 12F04002 		ands	r2, r2, #64
 3628 001c 0DD0     		beq	.L413
1508:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3629              		.loc 1 1508 0
 3630 001e 5A69     		ldr	r2, [r3, #20]
1511:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3631              		.loc 1 1511 0
 3632 0020 416B     		ldr	r1, [r0, #52]
1508:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3633              		.loc 1 1508 0
 3634 0022 22F04002 		bic	r2, r2, #64
 3635 0026 5A61     		str	r2, [r3, #20]
1511:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 3636              		.loc 1 1511 0
 3637 0028 A1B1     		cbz	r1, .L414
1515:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3638              		.loc 1 1515 0
 3639 002a 0E4B     		ldr	r3, .L421
1518:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3640              		.loc 1 1518 0
 3641 002c 0846     		mov	r0, r1
 3642              	.LVL283:
1515:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3643              		.loc 1 1515 0
 3644 002e 4B63     		str	r3, [r1, #52]
1518:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 3645              		.loc 1 1518 0
 3646 0030 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3647              	.LVL284:
 3648 0034 48B9     		cbnz	r0, .L420
 3649              	.L415:
1549:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3650              		.loc 1 1549 0
 3651 0036 0020     		movs	r0, #0
 3652 0038 10BD     		pop	{r4, pc}
 3653              	.LVL285:
 3654              	.L413:
ARM GAS  /tmp/cc3lpWmf.s 			page 122


1542:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3655              		.loc 1 1542 0
 3656 003a 2023     		movs	r3, #32
1539:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3657              		.loc 1 1539 0
 3658 003c C285     		strh	r2, [r0, #46]	@ movhi
1542:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3659              		.loc 1 1542 0
 3660 003e 80F83A30 		strb	r3, [r0, #58]
1545:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 3661              		.loc 1 1545 0
 3662 0042 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3663              	.LVL286:
1549:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3664              		.loc 1 1549 0
 3665 0046 0020     		movs	r0, #0
 3666 0048 10BD     		pop	{r4, pc}
 3667              	.LVL287:
 3668              	.L420:
1521:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 3669              		.loc 1 1521 0
 3670 004a 606B     		ldr	r0, [r4, #52]
 3671 004c 436B     		ldr	r3, [r0, #52]
 3672 004e 9847     		blx	r3
 3673              	.LVL288:
1549:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3674              		.loc 1 1549 0
 3675 0050 0020     		movs	r0, #0
 3676 0052 10BD     		pop	{r4, pc}
 3677              	.LVL289:
 3678              	.L414:
1530:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3679              		.loc 1 1530 0
 3680 0054 2023     		movs	r3, #32
1527:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3681              		.loc 1 1527 0
 3682 0056 C185     		strh	r1, [r0, #46]	@ movhi
1530:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3683              		.loc 1 1530 0
 3684 0058 80F83A30 		strb	r3, [r0, #58]
1533:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 3685              		.loc 1 1533 0
 3686 005c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3687              	.LVL290:
 3688 0060 E9E7     		b	.L415
 3689              	.L422:
 3690 0062 00BF     		.align	2
 3691              	.L421:
 3692 0064 00000000 		.word	UART_DMARxOnlyAbortCallback
 3693              		.cfi_endproc
 3694              	.LFE85:
 3696              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3697              		.align	1
 3698              		.p2align 2,,3
 3699              		.syntax unified
 3700              		.thumb
 3701              		.thumb_func
ARM GAS  /tmp/cc3lpWmf.s 			page 123


 3702              		.fpu softvfp
 3704              	UART_DMARxOnlyAbortCallback:
 3705              	.LFB114:
2321:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3706              		.loc 1 2321 0
 3707              		.cfi_startproc
 3708              		@ args = 0, pretend = 0, frame = 0
 3709              		@ frame_needed = 0, uses_anonymous_args = 0
 3710              	.LVL291:
2324:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3711              		.loc 1 2324 0
 3712 0000 0021     		movs	r1, #0
2327:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3713              		.loc 1 2327 0
 3714 0002 2022     		movs	r2, #32
2321:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3715              		.loc 1 2321 0
 3716 0004 08B5     		push	{r3, lr}
 3717              		.cfi_def_cfa_offset 8
 3718              		.cfi_offset 3, -8
 3719              		.cfi_offset 14, -4
2322:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3720              		.loc 1 2322 0
 3721 0006 436A     		ldr	r3, [r0, #36]
 3722              	.LVL292:
2324:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3723              		.loc 1 2324 0
 3724 0008 D985     		strh	r1, [r3, #46]	@ movhi
2330:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3725              		.loc 1 2330 0
 3726 000a 1846     		mov	r0, r3
 3727              	.LVL293:
2327:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3728              		.loc 1 2327 0
 3729 000c 83F83A20 		strb	r2, [r3, #58]
2330:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3730              		.loc 1 2330 0
 3731 0010 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3732              	.LVL294:
 3733 0014 08BD     		pop	{r3, pc}
 3734              		.cfi_endproc
 3735              	.LFE114:
 3737 0016 00BF     		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3738              		.align	1
 3739              		.p2align 2,,3
 3740              		.global	HAL_LIN_SendBreak
 3741              		.syntax unified
 3742              		.thumb
 3743              		.thumb_func
 3744              		.fpu softvfp
 3746              	HAL_LIN_SendBreak:
 3747              	.LFB95:
1827:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 3748              		.loc 1 1827 0
 3749              		.cfi_startproc
 3750              		@ args = 0, pretend = 0, frame = 0
 3751              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc3lpWmf.s 			page 124


 3752              		@ link register save eliminated.
 3753              	.LVL295:
1832:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3754              		.loc 1 1832 0
 3755 0000 90F83820 		ldrb	r2, [r0, #56]	@ zero_extendqisi2
 3756 0004 012A     		cmp	r2, #1
 3757 0006 12D0     		beq	.L427
1834:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3758              		.loc 1 1834 0 discriminator 2
 3759 0008 2422     		movs	r2, #36
1827:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 3760              		.loc 1 1827 0 discriminator 2
 3761 000a 30B4     		push	{r4, r5}
 3762              		.cfi_def_cfa_offset 8
 3763              		.cfi_offset 4, -8
 3764              		.cfi_offset 5, -4
 3765 000c 0346     		mov	r3, r0
1839:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3766              		.loc 1 1839 0 discriminator 2
 3767 000e 2025     		movs	r5, #32
1842:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3768              		.loc 1 1842 0 discriminator 2
 3769 0010 0021     		movs	r1, #0
1837:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 3770              		.loc 1 1837 0 discriminator 2
 3771 0012 0468     		ldr	r4, [r0]
1834:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3772              		.loc 1 1834 0 discriminator 2
 3773 0014 80F83920 		strb	r2, [r0, #57]
1837:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 3774              		.loc 1 1837 0 discriminator 2
 3775 0018 E268     		ldr	r2, [r4, #12]
1844:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3776              		.loc 1 1844 0 discriminator 2
 3777 001a 0846     		mov	r0, r1
 3778              	.LVL296:
1837:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 3779              		.loc 1 1837 0 discriminator 2
 3780 001c 42F00102 		orr	r2, r2, #1
 3781 0020 E260     		str	r2, [r4, #12]
1839:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3782              		.loc 1 1839 0 discriminator 2
 3783 0022 83F83950 		strb	r5, [r3, #57]
1842:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3784              		.loc 1 1842 0 discriminator 2
 3785 0026 83F83810 		strb	r1, [r3, #56]
1845:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3786              		.loc 1 1845 0 discriminator 2
 3787 002a 30BC     		pop	{r4, r5}
 3788              		.cfi_restore 5
 3789              		.cfi_restore 4
 3790              		.cfi_def_cfa_offset 0
 3791 002c 7047     		bx	lr
 3792              	.LVL297:
 3793              	.L427:
1832:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3794              		.loc 1 1832 0
ARM GAS  /tmp/cc3lpWmf.s 			page 125


 3795 002e 0220     		movs	r0, #2
 3796              	.LVL298:
 3797 0030 7047     		bx	lr
 3798              		.cfi_endproc
 3799              	.LFE95:
 3801 0032 00BF     		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3802              		.align	1
 3803              		.p2align 2,,3
 3804              		.global	HAL_MultiProcessor_EnterMuteMode
 3805              		.syntax unified
 3806              		.thumb
 3807              		.thumb_func
 3808              		.fpu softvfp
 3810              	HAL_MultiProcessor_EnterMuteMode:
 3811              	.LFB96:
1854:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 3812              		.loc 1 1854 0
 3813              		.cfi_startproc
 3814              		@ args = 0, pretend = 0, frame = 0
 3815              		@ frame_needed = 0, uses_anonymous_args = 0
 3816              		@ link register save eliminated.
 3817              	.LVL299:
1859:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3818              		.loc 1 1859 0
 3819 0000 90F83820 		ldrb	r2, [r0, #56]	@ zero_extendqisi2
 3820 0004 012A     		cmp	r2, #1
 3821 0006 12D0     		beq	.L434
1861:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3822              		.loc 1 1861 0 discriminator 2
 3823 0008 2422     		movs	r2, #36
1854:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 3824              		.loc 1 1854 0 discriminator 2
 3825 000a 30B4     		push	{r4, r5}
 3826              		.cfi_def_cfa_offset 8
 3827              		.cfi_offset 4, -8
 3828              		.cfi_offset 5, -4
 3829 000c 0346     		mov	r3, r0
1866:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3830              		.loc 1 1866 0 discriminator 2
 3831 000e 2025     		movs	r5, #32
1869:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3832              		.loc 1 1869 0 discriminator 2
 3833 0010 0021     		movs	r1, #0
1864:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3834              		.loc 1 1864 0 discriminator 2
 3835 0012 0468     		ldr	r4, [r0]
1861:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3836              		.loc 1 1861 0 discriminator 2
 3837 0014 80F83920 		strb	r2, [r0, #57]
1864:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3838              		.loc 1 1864 0 discriminator 2
 3839 0018 E268     		ldr	r2, [r4, #12]
1871:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3840              		.loc 1 1871 0 discriminator 2
 3841 001a 0846     		mov	r0, r1
 3842              	.LVL300:
1864:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
ARM GAS  /tmp/cc3lpWmf.s 			page 126


 3843              		.loc 1 1864 0 discriminator 2
 3844 001c 42F00202 		orr	r2, r2, #2
 3845 0020 E260     		str	r2, [r4, #12]
1866:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3846              		.loc 1 1866 0 discriminator 2
 3847 0022 83F83950 		strb	r5, [r3, #57]
1869:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3848              		.loc 1 1869 0 discriminator 2
 3849 0026 83F83810 		strb	r1, [r3, #56]
1872:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3850              		.loc 1 1872 0 discriminator 2
 3851 002a 30BC     		pop	{r4, r5}
 3852              		.cfi_restore 5
 3853              		.cfi_restore 4
 3854              		.cfi_def_cfa_offset 0
 3855 002c 7047     		bx	lr
 3856              	.LVL301:
 3857              	.L434:
1859:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3858              		.loc 1 1859 0
 3859 002e 0220     		movs	r0, #2
 3860              	.LVL302:
 3861 0030 7047     		bx	lr
 3862              		.cfi_endproc
 3863              	.LFE96:
 3865 0032 00BF     		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 3866              		.align	1
 3867              		.p2align 2,,3
 3868              		.global	HAL_MultiProcessor_ExitMuteMode
 3869              		.syntax unified
 3870              		.thumb
 3871              		.thumb_func
 3872              		.fpu softvfp
 3874              	HAL_MultiProcessor_ExitMuteMode:
 3875              	.LFB97:
1881:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 3876              		.loc 1 1881 0
 3877              		.cfi_startproc
 3878              		@ args = 0, pretend = 0, frame = 0
 3879              		@ frame_needed = 0, uses_anonymous_args = 0
 3880              		@ link register save eliminated.
 3881              	.LVL303:
1886:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3882              		.loc 1 1886 0
 3883 0000 90F83820 		ldrb	r2, [r0, #56]	@ zero_extendqisi2
 3884 0004 012A     		cmp	r2, #1
 3885 0006 12D0     		beq	.L441
1888:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3886              		.loc 1 1888 0 discriminator 2
 3887 0008 2422     		movs	r2, #36
1881:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 3888              		.loc 1 1881 0 discriminator 2
 3889 000a 30B4     		push	{r4, r5}
 3890              		.cfi_def_cfa_offset 8
 3891              		.cfi_offset 4, -8
 3892              		.cfi_offset 5, -4
 3893 000c 0346     		mov	r3, r0
ARM GAS  /tmp/cc3lpWmf.s 			page 127


1893:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3894              		.loc 1 1893 0 discriminator 2
 3895 000e 2025     		movs	r5, #32
1896:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3896              		.loc 1 1896 0 discriminator 2
 3897 0010 0021     		movs	r1, #0
1891:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3898              		.loc 1 1891 0 discriminator 2
 3899 0012 0468     		ldr	r4, [r0]
1888:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3900              		.loc 1 1888 0 discriminator 2
 3901 0014 80F83920 		strb	r2, [r0, #57]
1891:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3902              		.loc 1 1891 0 discriminator 2
 3903 0018 E268     		ldr	r2, [r4, #12]
1898:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3904              		.loc 1 1898 0 discriminator 2
 3905 001a 0846     		mov	r0, r1
 3906              	.LVL304:
1891:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3907              		.loc 1 1891 0 discriminator 2
 3908 001c 22F00202 		bic	r2, r2, #2
 3909 0020 E260     		str	r2, [r4, #12]
1893:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3910              		.loc 1 1893 0 discriminator 2
 3911 0022 83F83950 		strb	r5, [r3, #57]
1896:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3912              		.loc 1 1896 0 discriminator 2
 3913 0026 83F83810 		strb	r1, [r3, #56]
1899:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3914              		.loc 1 1899 0 discriminator 2
 3915 002a 30BC     		pop	{r4, r5}
 3916              		.cfi_restore 5
 3917              		.cfi_restore 4
 3918              		.cfi_def_cfa_offset 0
 3919 002c 7047     		bx	lr
 3920              	.LVL305:
 3921              	.L441:
1886:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3922              		.loc 1 1886 0
 3923 002e 0220     		movs	r0, #2
 3924              	.LVL306:
 3925 0030 7047     		bx	lr
 3926              		.cfi_endproc
 3927              	.LFE97:
 3929 0032 00BF     		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3930              		.align	1
 3931              		.p2align 2,,3
 3932              		.global	HAL_HalfDuplex_EnableTransmitter
 3933              		.syntax unified
 3934              		.thumb
 3935              		.thumb_func
 3936              		.fpu softvfp
 3938              	HAL_HalfDuplex_EnableTransmitter:
 3939              	.LFB98:
1908:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 3940              		.loc 1 1908 0
ARM GAS  /tmp/cc3lpWmf.s 			page 128


 3941              		.cfi_startproc
 3942              		@ args = 0, pretend = 0, frame = 0
 3943              		@ frame_needed = 0, uses_anonymous_args = 0
 3944              		@ link register save eliminated.
 3945              	.LVL307:
1912:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3946              		.loc 1 1912 0
 3947 0000 90F83820 		ldrb	r2, [r0, #56]	@ zero_extendqisi2
 3948 0004 012A     		cmp	r2, #1
 3949 0006 14D0     		beq	.L448
1914:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3950              		.loc 1 1914 0 discriminator 2
 3951 0008 2422     		movs	r2, #36
1908:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 3952              		.loc 1 1908 0 discriminator 2
 3953 000a 30B4     		push	{r4, r5}
 3954              		.cfi_def_cfa_offset 8
 3955              		.cfi_offset 4, -8
 3956              		.cfi_offset 5, -4
 3957 000c 0346     		mov	r3, r0
1928:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3958              		.loc 1 1928 0 discriminator 2
 3959 000e 2025     		movs	r5, #32
1931:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3960              		.loc 1 1931 0 discriminator 2
 3961 0010 0021     		movs	r1, #0
1917:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3962              		.loc 1 1917 0 discriminator 2
 3963 0012 0468     		ldr	r4, [r0]
1914:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3964              		.loc 1 1914 0 discriminator 2
 3965 0014 80F83920 		strb	r2, [r0, #57]
1917:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3966              		.loc 1 1917 0 discriminator 2
 3967 0018 E268     		ldr	r2, [r4, #12]
 3968              	.LVL308:
1933:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3969              		.loc 1 1933 0 discriminator 2
 3970 001a 0846     		mov	r0, r1
 3971              	.LVL309:
1920:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3972              		.loc 1 1920 0 discriminator 2
 3973 001c 22F00C02 		bic	r2, r2, #12
 3974              	.LVL310:
1923:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3975              		.loc 1 1923 0 discriminator 2
 3976 0020 42F00802 		orr	r2, r2, #8
 3977              	.LVL311:
1926:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3978              		.loc 1 1926 0 discriminator 2
 3979 0024 E260     		str	r2, [r4, #12]
1928:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3980              		.loc 1 1928 0 discriminator 2
 3981 0026 83F83950 		strb	r5, [r3, #57]
1931:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3982              		.loc 1 1931 0 discriminator 2
 3983 002a 83F83810 		strb	r1, [r3, #56]
ARM GAS  /tmp/cc3lpWmf.s 			page 129


1934:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 3984              		.loc 1 1934 0 discriminator 2
 3985 002e 30BC     		pop	{r4, r5}
 3986              		.cfi_restore 5
 3987              		.cfi_restore 4
 3988              		.cfi_def_cfa_offset 0
 3989 0030 7047     		bx	lr
 3990              	.LVL312:
 3991              	.L448:
1912:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 3992              		.loc 1 1912 0
 3993 0032 0220     		movs	r0, #2
 3994              	.LVL313:
 3995 0034 7047     		bx	lr
 3996              		.cfi_endproc
 3997              	.LFE98:
 3999 0036 00BF     		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4000              		.align	1
 4001              		.p2align 2,,3
 4002              		.global	HAL_HalfDuplex_EnableReceiver
 4003              		.syntax unified
 4004              		.thumb
 4005              		.thumb_func
 4006              		.fpu softvfp
 4008              	HAL_HalfDuplex_EnableReceiver:
 4009              	.LFB99:
1943:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4010              		.loc 1 1943 0
 4011              		.cfi_startproc
 4012              		@ args = 0, pretend = 0, frame = 0
 4013              		@ frame_needed = 0, uses_anonymous_args = 0
 4014              		@ link register save eliminated.
 4015              	.LVL314:
1947:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4016              		.loc 1 1947 0
 4017 0000 90F83820 		ldrb	r2, [r0, #56]	@ zero_extendqisi2
 4018 0004 012A     		cmp	r2, #1
 4019 0006 14D0     		beq	.L455
1949:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4020              		.loc 1 1949 0 discriminator 2
 4021 0008 2422     		movs	r2, #36
1943:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4022              		.loc 1 1943 0 discriminator 2
 4023 000a 30B4     		push	{r4, r5}
 4024              		.cfi_def_cfa_offset 8
 4025              		.cfi_offset 4, -8
 4026              		.cfi_offset 5, -4
 4027 000c 0346     		mov	r3, r0
1963:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4028              		.loc 1 1963 0 discriminator 2
 4029 000e 2025     		movs	r5, #32
1966:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 4030              		.loc 1 1966 0 discriminator 2
 4031 0010 0021     		movs	r1, #0
1952:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4032              		.loc 1 1952 0 discriminator 2
 4033 0012 0468     		ldr	r4, [r0]
ARM GAS  /tmp/cc3lpWmf.s 			page 130


1949:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4034              		.loc 1 1949 0 discriminator 2
 4035 0014 80F83920 		strb	r2, [r0, #57]
1952:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4036              		.loc 1 1952 0 discriminator 2
 4037 0018 E268     		ldr	r2, [r4, #12]
 4038              	.LVL315:
1968:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4039              		.loc 1 1968 0 discriminator 2
 4040 001a 0846     		mov	r0, r1
 4041              	.LVL316:
1955:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4042              		.loc 1 1955 0 discriminator 2
 4043 001c 22F00C02 		bic	r2, r2, #12
 4044              	.LVL317:
1958:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4045              		.loc 1 1958 0 discriminator 2
 4046 0020 42F00402 		orr	r2, r2, #4
 4047              	.LVL318:
1961:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4048              		.loc 1 1961 0 discriminator 2
 4049 0024 E260     		str	r2, [r4, #12]
1963:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4050              		.loc 1 1963 0 discriminator 2
 4051 0026 83F83950 		strb	r5, [r3, #57]
1966:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 4052              		.loc 1 1966 0 discriminator 2
 4053 002a 83F83810 		strb	r1, [r3, #56]
1969:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4054              		.loc 1 1969 0 discriminator 2
 4055 002e 30BC     		pop	{r4, r5}
 4056              		.cfi_restore 5
 4057              		.cfi_restore 4
 4058              		.cfi_def_cfa_offset 0
 4059 0030 7047     		bx	lr
 4060              	.LVL319:
 4061              	.L455:
1947:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4062              		.loc 1 1947 0
 4063 0032 0220     		movs	r0, #2
 4064              	.LVL320:
 4065 0034 7047     		bx	lr
 4066              		.cfi_endproc
 4067              	.LFE99:
 4069 0036 00BF     		.section	.text.HAL_UART_GetState,"ax",%progbits
 4070              		.align	1
 4071              		.p2align 2,,3
 4072              		.global	HAL_UART_GetState
 4073              		.syntax unified
 4074              		.thumb
 4075              		.thumb_func
 4076              		.fpu softvfp
 4078              	HAL_UART_GetState:
 4079              	.LFB100:
2000:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 4080              		.loc 1 2000 0
 4081              		.cfi_startproc
ARM GAS  /tmp/cc3lpWmf.s 			page 131


 4082              		@ args = 0, pretend = 0, frame = 0
 4083              		@ frame_needed = 0, uses_anonymous_args = 0
 4084              		@ link register save eliminated.
 4085              	.LVL321:
2002:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp2 = huart->RxState;
 4086              		.loc 1 2002 0
 4087 0000 90F83920 		ldrb	r2, [r0, #57]	@ zero_extendqisi2
 4088              	.LVL322:
2003:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 4089              		.loc 1 2003 0
 4090 0004 90F83A00 		ldrb	r0, [r0, #58]	@ zero_extendqisi2
 4091              	.LVL323:
2006:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4092              		.loc 1 2006 0
 4093 0008 1043     		orrs	r0, r0, r2
 4094              	.LVL324:
 4095 000a 7047     		bx	lr
 4096              		.cfi_endproc
 4097              	.LFE100:
 4099              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4100              		.align	1
 4101              		.p2align 2,,3
 4102              		.global	HAL_UART_GetError
 4103              		.syntax unified
 4104              		.thumb
 4105              		.thumb_func
 4106              		.fpu softvfp
 4108              	HAL_UART_GetError:
 4109              	.LFB101:
2015:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->ErrorCode;
 4110              		.loc 1 2015 0
 4111              		.cfi_startproc
 4112              		@ args = 0, pretend = 0, frame = 0
 4113              		@ frame_needed = 0, uses_anonymous_args = 0
 4114              		@ link register save eliminated.
 4115              	.LVL325:
2016:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4116              		.loc 1 2016 0
 4117 0000 C06B     		ldr	r0, [r0, #60]
 4118              	.LVL326:
2017:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 4119              		.loc 1 2017 0
 4120 0002 7047     		bx	lr
 4121              		.cfi_endproc
 4122              	.LFE101:
 4124              		.text
 4125              	.Letext0:
 4126              		.file 2 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.
 4127              		.file 3 "drivers/CMSIS/Include/core_cm3.h"
 4128              		.file 4 "drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 4129              		.file 5 "drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 4130              		.file 6 "drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 4131              		.file 7 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/
 4132              		.file 8 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/
 4133              		.file 9 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.
 4134              		.file 10 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys
 4135              		.file 11 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
ARM GAS  /tmp/cc3lpWmf.s 			page 132


 4136              		.file 12 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 4137              		.file 13 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 4138              		.file 14 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 4139              		.file 15 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/cc3lpWmf.s 			page 133


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_uart.c
     /tmp/cc3lpWmf.s:16     .text.UART_SetConfig:0000000000000000 $t
     /tmp/cc3lpWmf.s:23     .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/cc3lpWmf.s:196    .text.UART_SetConfig:000000000000017c $d
     /tmp/cc3lpWmf.s:202    .text.UART_WaitOnFlagUntilTimeout.constprop.3:0000000000000000 $t
     /tmp/cc3lpWmf.s:209    .text.UART_WaitOnFlagUntilTimeout.constprop.3:0000000000000000 UART_WaitOnFlagUntilTimeout.constprop.3
     /tmp/cc3lpWmf.s:290    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cc3lpWmf.s:298    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cc3lpWmf.s:309    .text.HAL_UART_Init:0000000000000000 $t
     /tmp/cc3lpWmf.s:317    .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/cc3lpWmf.s:407    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/cc3lpWmf.s:415    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/cc3lpWmf.s:509    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/cc3lpWmf.s:517    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/cc3lpWmf.s:622    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/cc3lpWmf.s:630    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/cc3lpWmf.s:738    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cc3lpWmf.s:746    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cc3lpWmf.s:757    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/cc3lpWmf.s:765    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/cc3lpWmf.s:813    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/cc3lpWmf.s:821    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/cc3lpWmf.s:998    .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/cc3lpWmf.s:1006   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/cc3lpWmf.s:1184   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/cc3lpWmf.s:1192   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/cc3lpWmf.s:1267   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/cc3lpWmf.s:1275   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/cc3lpWmf.s:1360   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/cc3lpWmf.s:1368   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/cc3lpWmf.s:1474   .text.HAL_UART_Transmit_DMA:000000000000006c $d
     /tmp/cc3lpWmf.s:2221   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/cc3lpWmf.s:2290   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/cc3lpWmf.s:2579   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/cc3lpWmf.s:1481   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/cc3lpWmf.s:1489   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/cc3lpWmf.s:1622   .text.HAL_UART_Receive_DMA:0000000000000088 $d
     /tmp/cc3lpWmf.s:2338   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/cc3lpWmf.s:2531   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/cc3lpWmf.s:1629   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/cc3lpWmf.s:1637   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/cc3lpWmf.s:1719   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/cc3lpWmf.s:1727   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/cc3lpWmf.s:1825   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/cc3lpWmf.s:1833   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/cc3lpWmf.s:1954   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/cc3lpWmf.s:1962   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/cc3lpWmf.s:2057   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/cc3lpWmf.s:2065   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/cc3lpWmf.s:2124   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/cc3lpWmf.s:2132   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/cc3lpWmf.s:2195   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/cc3lpWmf.s:2203   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/cc3lpWmf.s:2214   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/cc3lpWmf.s:2264   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cc3lpWmf.s:2272   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
ARM GAS  /tmp/cc3lpWmf.s 			page 134


     /tmp/cc3lpWmf.s:2283   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/cc3lpWmf.s:2312   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cc3lpWmf.s:2320   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cc3lpWmf.s:2331   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/cc3lpWmf.s:2388   .text.UART_Receive_IT.part.1:0000000000000000 $t
     /tmp/cc3lpWmf.s:2395   .text.UART_Receive_IT.part.1:0000000000000000 UART_Receive_IT.part.1
     /tmp/cc3lpWmf.s:2505   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cc3lpWmf.s:2513   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/cc3lpWmf.s:2524   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/cc3lpWmf.s:2553   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/cc3lpWmf.s:2561   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/cc3lpWmf.s:2572   .text.UART_DMAError:0000000000000000 $t
     /tmp/cc3lpWmf.s:2688   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/cc3lpWmf.s:2696   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/cc3lpWmf.s:3068   .text.HAL_UART_IRQHandler:0000000000000188 $d
     /tmp/cc3lpWmf.s:3082   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/cc3lpWmf.s:3075   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/cc3lpWmf.s:3114   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/cc3lpWmf.s:3122   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/cc3lpWmf.s:3133   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/cc3lpWmf.s:3141   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/cc3lpWmf.s:3282   .text.HAL_UART_Abort_IT:00000000000000a8 $d
     /tmp/cc3lpWmf.s:3356   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/cc3lpWmf.s:3295   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/cc3lpWmf.s:3288   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/cc3lpWmf.s:3349   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/cc3lpWmf.s:3410   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/cc3lpWmf.s:3418   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/cc3lpWmf.s:3429   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/cc3lpWmf.s:3437   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/cc3lpWmf.s:3525   .text.HAL_UART_AbortTransmit_IT:000000000000005c $d
     /tmp/cc3lpWmf.s:3537   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/cc3lpWmf.s:3530   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc3lpWmf.s:3571   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/cc3lpWmf.s:3579   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/cc3lpWmf.s:3592   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/cc3lpWmf.s:3600   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/cc3lpWmf.s:3692   .text.HAL_UART_AbortReceive_IT:0000000000000064 $d
     /tmp/cc3lpWmf.s:3704   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/cc3lpWmf.s:3697   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc3lpWmf.s:3738   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/cc3lpWmf.s:3746   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/cc3lpWmf.s:3802   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/cc3lpWmf.s:3810   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cc3lpWmf.s:3866   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 $t
     /tmp/cc3lpWmf.s:3874   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/cc3lpWmf.s:3930   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/cc3lpWmf.s:3938   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cc3lpWmf.s:4000   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/cc3lpWmf.s:4008   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cc3lpWmf.s:4070   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/cc3lpWmf.s:4078   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/cc3lpWmf.s:4100   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/cc3lpWmf.s:4108   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.8ddc6fc9299f63009459649d6a7e7c51
                           .group:0000000000000000 wm4.main.h.40.54e5213d35853f8debd8cd48178ac5c1
ARM GAS  /tmp/cc3lpWmf.s 			page 135


                           .group:0000000000000000 wm4.stm32f1xx_hal_conf.h.52.96cb61986c8bfeb3a4fa629a7a7441f6
                           .group:0000000000000000 wm4.stm32f1xx.h.57.c2a10934f4c6830aeb7e4997f02806f1
                           .group:0000000000000000 wm4.stm32f103xb.h.56.66305a77cea9d5300aac997a78930076
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.core_cm3.h.74.7d5fecd6d4522d755d10a23d1542f805
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.67d2dcde6a14ff518eedc1d545d89a76
                           .group:0000000000000000 wm4.core_cm3.h.175.a6c441adf1a05ce96eea3cf78e6687ab
                           .group:0000000000000000 wm4.stm32f103xb.h.619.382b3c85cac6f0350ee5bfaff32e1ebc
                           .group:0000000000000000 wm4.stm32f1xx.h.180.c0013e6ebd6ad07f67c298190b8eac92
                           .group:0000000000000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:0000000000000000 wm4.newlib.h.21.59901f4bf241ab46c63694665baa7297
                           .group:0000000000000000 wm4.features.h.22.5cdadbb3efe495d1c9e38350b8c376c7
                           .group:0000000000000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:0000000000000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.e658329a094974ebad41b40c60502de7
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:0000000000000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.30.bbece7fa40993a78092dcc5805132560
                           .group:0000000000000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.8188691c2279eac7a223caa50f6694b9
                           .group:0000000000000000 wm4.stm32f1xx_hal_def.h.77.f54bfbbe3e3696aae97b05a3f338caf7
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.112.09261d6ad0eef5abae6b9147d0cf5cbf
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc_ex.h.40.bb785d717afc4d2d2b63a3608cb5a0c5
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.1219.902328474751456408f7d18f6caace93
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.40.f1cf5d2dd589e1675a9fcd6b008c2bb6
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio_ex.h.40.30d74584c89dcd3d86d10bdbbb06cc31
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.281.b26a95114b989e6edaf48d72c8710b9d
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.40.b1d5b41c58b583c31c61335e4c8e1bdd
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma_ex.h.40.7ac05bbf95f5a25a3f4a9b9c2a14f835
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.427.daddf65c60854feb2dc9660a62f55b8c
                           .group:0000000000000000 wm4.stm32f1xx_hal_cortex.h.40.4f649a8bf316b7aa5d02077abd9b8999
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc.h.40.3ad40e622f0cef64228eb182e4bbe00f
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc_ex.h.40.3118796521817cc82626257e9c7ab79c
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash.h.40.12aaef98e1fbb85e3a8f79f98532d04a
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash_ex.h.40.ad66c77e153bc5a4a1d60e46727f4ae5
                           .group:0000000000000000 wm4.stm32f1xx_hal_pwr.h.40.ecccf9071314b0ab3f6ffcfd7c596e95
                           .group:0000000000000000 wm4.stm32f1xx_hal_spi.h.40.5dd367ee94b0bb430a3842862fe7d7da
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim.h.40.ac3feb225ff72b119eeddfe8acac07a3
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim_ex.h.40.9b926a51c24898708ad2e47fd5ff9d32
                           .group:0000000000000000 wm4.stm32f1xx_hal_uart.h.40.9914ca79b81d8b23b4e5425c156b0acd
                           .group:0000000000000000 wm4.stm32f1xx_hal.h.82.f2fd9c01c6f8c9e676a37d84eb9dc553

ARM GAS  /tmp/cc3lpWmf.s 			page 136


UNDEFINED SYMBOLS
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
