ARM GAS  /tmp/ccQrq4iZ.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.weak	HAL_ADC_MspInit
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_ADC_MspInit:
  25              	.LFB102:
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 7047     		bx	lr
  31              		.cfi_endproc
  32              	.LFE102:
  34 0002 00BF     		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
  35              		.align	1
  36              		.p2align 2,,3
  37              		.weak	HAL_ADC_MspDeInit
  38              		.syntax unified
  39              		.thumb
  40              		.thumb_func
  41              		.fpu softvfp
  43              	HAL_ADC_MspDeInit:
  44              	.LFB100:
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48              		@ link register save eliminated.
  49 0000 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE100:
  53 0002 00BF     		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
  54              		.align	1
  55              		.p2align 2,,3
  56              		.global	HAL_ADC_PollForConversion
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	HAL_ADC_PollForConversion:
ARM GAS  /tmp/ccQrq4iZ.s 			page 2


  63              	.LFB70:
  64              		.file 1 "drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c"
   1:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
   2:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ******************************************************************************
   3:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @file    stm32f1xx_hal_adc.c
   4:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @author  MCD Application Team
   5:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @version V1.1.1
   6:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @date    12-May-2017
   7:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   9:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          peripheral:
  10:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *           + Initialization and de-initialization functions
  11:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  12:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *           + Operation functions
  13:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  14:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  15:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *           + Control functions
  16:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Channels configuration on regular group
  17:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Channels configuration on injected group
  18:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  19:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *           + State functions
  20:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ ADC state machine management
  21:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *             ++ Interrupts and flags management
  22:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          Other functions (extended functions) are available in file 
  23:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          "stm32f1xx_hal_adc_ex.c".
  24:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
  25:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   @verbatim
  26:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ==============================================================================
  27:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                      ##### ADC peripheral features #####
  28:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ==============================================================================
  29:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   [..]
  30:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) 12-bit resolution
  31:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  32:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion, end of injected
  33:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       conversion, and in case of analog watchdog or overrun events.
  34:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  35:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  36:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  37:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  38:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  39:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  40:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  41:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  42:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  43:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) ADC conversion of regular group and injected group.
  44:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  45:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) External trigger (timer or EXTI) 
  46:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       for both regular and injected groups.
  47:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  48:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  49:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  50:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Multimode Dual mode (available on devices with 2 ADCs or more).
  51:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  52:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Configurable DMA data storage in Multimode Dual mode (available on devices
  53:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       with 2 DCs or more).
  54:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  55:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode (available 
ARM GAS  /tmp/ccQrq4iZ.s 			page 3


  56:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       on devices with 2 DCs or more).
  57:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  58:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) ADC calibration
  59:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  60:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  61:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       slower speed.
  62:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
  63:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to 
  64:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       Vdda or to an external voltage reference).
  65:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  66:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  67:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                      ##### How to use this driver #####
  68:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ==============================================================================
  69:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
  70:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  71:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  72:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      ============================================================
  73:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
  74:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  75:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Enable the ADC interface
  76:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (++) As prerequisite, ADC clock must be configured at RCC top level.
  77:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****            Caution: On STM32F1, ADC clock frequency max is 14MHz (refer
  78:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                     to device datasheet).
  79:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                     Therefore, ADC clock prescaler must be configured in 
  80:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                     function of ADC clock source frequency to remain below
  81:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                     this maximum frequency.
  82:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) One clock setting is mandatory:
  83:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC clock (core clock, also possibly conversion clock).
  84:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              (+++) Example:
  85:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  86:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                    other device clock parameters configuration:
  87:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) RCC_PeriphCLKInitTypeDef  PeriphClkInit;
  88:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) __ADC1_CLK_ENABLE();
  89:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  90:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
  91:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  92:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  93:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) ADC pins configuration
  94:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  95:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  96:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  97:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_GPIO_Init()
  98:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
  99:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 100:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 101:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 102:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 103:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               into the function of corresponding ADC interruption vector 
 104:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               ADCx_IRQHandler().
 105:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 106:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 107:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 108:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_DMA_Init().
 109:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 110:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 111:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 112:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               into the function of corresponding DMA interruption vector 
ARM GAS  /tmp/ccQrq4iZ.s 			page 4


 113:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 114:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 115:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      *** Configuration of ADC, groups regular/injected, channels parameters ***
 116:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      ==========================================================================
 117:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 118:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 119:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 120:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 121:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADC_Init().
 122:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 123:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number, 
 124:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 125:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 126:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 127:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, configure the injected group parameters (conversion trigger, 
 128:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         sequencer, ..., of injected group)
 129:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         and the channels for injected group parameters (channel number, 
 130:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         channel rank into sequencer, ..., into injected group)
 131:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADCEx_InjectedConfigChannel().
 132:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 133:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 134:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         monitored, thresholds, ...)
 135:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 136:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 137:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, for devices with several ADC instances: configure the 
 138:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         multimode parameters
 139:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADCEx_MultiModeConfigChannel().
 140:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 141:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      *** Execution of ADC conversions ***
 142:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      ====================================
 143:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 144:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 145:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 146:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         conversion accuracy
 147:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 148:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 149:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 150:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         transfer by DMA.
 151:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 152:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) ADC conversion by polling:
 153:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 154:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Start()
 155:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion 
 156:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 157:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedPollForConversion() )
 158:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Retrieve conversion results 
 159:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 160:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedGetValue() )
 161:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 162:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 163:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 164:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) ADC conversion by interruption: 
 165:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 166:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 167:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 168:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 169:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (this function must be implemented in user program)
ARM GAS  /tmp/ccQrq4iZ.s 			page 5


 170:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedConvCpltCallback() )
 171:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Retrieve conversion results 
 172:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 173:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedGetValue() )
 174:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 175:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 176:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 177:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 178:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 179:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 180:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 181:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 182:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (these functions must be implemented in user program)
 183:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 184:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 destination variable address.
 185:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 186:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 187:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 188:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) For devices with several ADCs: ADC multimode conversion 
 189:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              with transfer by DMA:
 190:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral (slave) and start conversions
 191:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Start()
 192:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Activate the ADC peripheral (master) and start conversions
 193:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADCEx_MultiModeStart_DMA()
 194:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 195:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 196:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 (these functions must be implemented in user program)
 197:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 198:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 destination variable address.
 199:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral (master)
 200:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADCEx_MultiModeStop_DMA()
 201:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral (slave)
 202:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 203:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 204:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 205:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 206:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 207:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 208:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 209:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 210:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 211:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+@) HAL_ADCEx_InjectedConvCpltCallback()
 212:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 213:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      *** Deinitialization of ADC ***
 214:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      ============================================================
 215:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      [..]
 216:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 217:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Disable the ADC interface
 218:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 219:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 220:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 221:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         (++) ADC clock disable
 222:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 223:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              (+++) Example:
 224:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 225:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                    other device clock parameters configuration:
 226:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC
ARM GAS  /tmp/ccQrq4iZ.s 			page 6


 227:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection = RCC_ADCPLLCLK2_OFF
 228:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit)
 229:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 230:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) ADC pins configuration
 231:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 232:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 233:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 234:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 235:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 236:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 237:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 238:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 239:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Deinitialize the DMA
 240:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_DMA_Init().
 241:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 242:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 243:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 244:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
 245:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 246:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     @endverbatim
 247:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ******************************************************************************
 248:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @attention
 249:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
 250:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 251:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
 252:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 253:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * are permitted provided that the following conditions are met:
 254:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 255:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *      this list of conditions and the following disclaimer.
 256:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 257:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *      this list of conditions and the following disclaimer in the documentation
 258:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *      and/or other materials provided with the distribution.
 259:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 260:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *      may be used to endorse or promote products derived from this software
 261:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *      without specific prior written permission.
 262:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
 263:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 264:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 265:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 266:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 267:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 268:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 269:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 270:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 271:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 272:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 273:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
 274:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ******************************************************************************  
 275:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 276:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 277:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 278:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #include "stm32f1xx_hal.h"
 279:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 280:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @addtogroup STM32F1xx_HAL_Driver
 281:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 282:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 283:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
ARM GAS  /tmp/ccQrq4iZ.s 			page 7


 284:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC ADC
 285:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief ADC HAL module driver
 286:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 287:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 288:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 289:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 290:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 291:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 292:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 293:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 294:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 295:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 296:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 297:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Timeout values for ADC enable and disable settling time.                 */
 298:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Values defined to be higher than worst cases: low clocks freq,           */
 299:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* maximum prescaler.                                                       */
 300:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 301:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* prescaler 4, sampling time 12.5 ADC clock cycles, resolution 12 bits.    */
 302:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Unit: ms                                                                 */
 303:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   #define ADC_ENABLE_TIMEOUT              2U
 304:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   #define ADC_DISABLE_TIMEOUT             2U
 305:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 306:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Delay for ADC stabilization time.                                        */
 307:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Maximum delay is 1us (refer to device datasheet, parameter tSTAB).       */
 308:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Unit: us                                                                 */
 309:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   #define ADC_STAB_DELAY_US               1U
 310:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 311:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Delay for temperature sensor stabilization time.                         */
 312:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Maximum delay is 10us (refer to device datasheet, parameter tSTART).     */
 313:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Unit: us                                                                 */
 314:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   #define ADC_TEMPSENSOR_DELAY_US         10U
 315:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 316:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 317:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
 318:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 319:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 320:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 321:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 322:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 323:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
 324:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 325:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 326:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 327:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
 328:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 329:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 330:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 331:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 332:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 333:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 334:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 335:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 336:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization/de-initialization functions 
 337:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief    Initialization and Configuration functions
 338:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *
 339:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @verbatim    
 340:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
ARM GAS  /tmp/ccQrq4iZ.s 			page 8


 341:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 342:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
 343:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 344:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 345:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) De-initialize the ADC.
 346:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 347:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @endverbatim
 348:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 349:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 350:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 351:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 352:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Initializes the ADC peripheral and regular group according to  
 353:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 354:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 355:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         (clock source APB2).
 356:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         See commented example code below that can be copied and uncommented 
 357:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         into HAL_ADC_MspInit().
 358:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 359:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 360:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 361:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef  
 362:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC  
 363:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 364:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         before HAL_ADC_Init().
 365:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 366:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
 367:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 368:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire 
 369:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments 
 370:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 371:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 372:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
 373:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 374:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 375:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 376:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 377:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tmp_cr1 = 0U;
 378:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tmp_cr2 = 0U;
 379:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tmp_sqr1 = 0U;
 380:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 381:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check ADC handle */
 382:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(hadc == NULL)
 383:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 384:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     return HAL_ERROR;
 385:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 386:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 387:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 388:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 389:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 390:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 391:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 392:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 393:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 394:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 395:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 396:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 397:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
ARM GAS  /tmp/ccQrq4iZ.s 			page 9


 398:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(hadc->Init.DiscontinuousConvMode != DISABLE)
 399:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 400:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 401:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 402:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 403:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 404:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* As prerequisite, into HAL_ADC_MspInit(), ADC clock must be configured    */
 405:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* at RCC top level.                                                        */
 406:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Refer to header of this file for more details on clock enabling          */
 407:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* procedure.                                                               */
 408:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 409:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 410:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 411:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 412:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 413:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Initialize ADC error code */
 414:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 415:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 416:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Allocate lock resource and initialize it */
 417:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 418:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 419:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Init the low level hardware */
 420:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 421:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 422:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 423:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 424:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
 425:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Note: In case of ADC already enabled, precaution to not launch an        */
 426:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       unwanted conversion while modifying register CR2 by writing 1 to   */
 427:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       bit ADON.                                                          */
 428:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 429:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 430:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 431:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 432:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* correctly completed.                                                     */
 433:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 434:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (tmp_hal_status == HAL_OK)                                  )
 435:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 436:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
 437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 438:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 439:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 440:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 441:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC parameters */
 442:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 443:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 444:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - data alignment                                                      */
 445:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - external trigger to start conversion                                */
 446:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - external trigger polarity (always set to 1, because needed for all  */
 447:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*    triggers: external trigger of SW start)                             */
 448:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - continuous conversion mode                                          */
 449:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Note: External trigger polarity (ADC_CR2_EXTTRIG) is set into          */
 450:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       HAL_ADC_Start_xxx functions because if set in this function,     */
 451:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       a conversion on injected group would start a conversion also on  */
 452:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       regular group after ADC enabling.                                */
 453:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_cr2 |= (hadc->Init.DataAlign                               |
 454:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CFGR_EXTSEL(hadc, hadc->Init.ExternalTrigConv) |
ARM GAS  /tmp/ccQrq4iZ.s 			page 10


 455:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode)   );
 456:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 457:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 458:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - scan mode                                                           */
 459:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - discontinuous mode disable/enable                                   */
 460:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - discontinuous mode number of conversions                            */
 461:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_cr1 |= (ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode));
 462:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 463:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable discontinuous mode only if continuous mode is disabled */
 464:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Note: If parameter "Init.ScanConvMode" is set to disable, parameter    */
 465:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       discontinuous is set anyway, but will have no effect on ADC HW.  */
 466:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 467:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 468:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (hadc->Init.ContinuousConvMode == DISABLE)
 469:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 470:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Enable the selected ADC regular discontinuous mode */
 471:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set the number of channels to be converted in discontinuous mode */
 472:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(tmp_cr1, ADC_CR1_DISCEN                                            |
 473:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                          ADC_CR1_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion)  );
 474:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 475:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       else
 476:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 477:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* ADC regular group settings continuous and sequencer discontinuous*/
 478:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* cannot be enabled simultaneously.                                */
 479:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 480:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update ADC state machine to error */
 481:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 482:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 483:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
 484:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 485:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 486:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 487:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 488:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC configuration register CR1 with previous settings */
 489:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CR1,
 490:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_SCAN    |
 491:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_DISCEN  |
 492:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_DISCNUM    ,
 493:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  tmp_cr1             );
 494:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 495:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC configuration register CR2 with previous settings */
 496:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CR2,
 497:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_ALIGN   |
 498:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_EXTSEL  |
 499:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_EXTTRIG |
 500:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_CONT       ,
 501:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  tmp_cr2             );
 502:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 503:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 504:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 505:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 506:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 507:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   Note: Scan mode is present by hardware on this device and, if        */
 508:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   disabled, discards automatically nb of conversions. Anyway, nb of    */
 509:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   conversions is forced to 0x00 for alignment over all STM32 devices.  */
 510:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 511:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*   parameter "NbrOfConversion"                                          */
ARM GAS  /tmp/ccQrq4iZ.s 			page 11


 512:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode) == ADC_SCAN_ENABLE)
 513:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 514:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       tmp_sqr1 = ADC_SQR1_L_SHIFT(hadc->Init.NbrOfConversion);
 515:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 516:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 517:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR1,
 518:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_L          ,
 519:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                tmp_sqr1             );
 520:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 521:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Check back that ADC registers have effectively been configured to      */
 522:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* ensure of no potential problem of ADC core IP clocking.                */
 523:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Check through register CR2 (excluding bits set in other functions:     */
 524:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* execution control bits (ADON, JSWSTART, SWSTART), regular group bits   */
 525:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* (DMA), injected group bits (JEXTTRIG and JEXTSEL), channel internal    */
 526:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* measurement path bit (TSVREFE).                                        */
 527:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR2, ~(ADC_CR2_ADON | ADC_CR2_DMA |
 528:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 529:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_JEXTTRIG | ADC_CR2_JEXTSEL |
 530:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_TSVREFE                     ))
 531:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          == tmp_cr2)
 532:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 533:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC error code to none */
 534:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 535:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 536:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set the ADC state */
 537:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 538:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 539:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
 540:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 541:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
 542:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 543:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update ADC state machine to error */
 544:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 545:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 546:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 547:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 548:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC error code to ADC IP internal error */
 549:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 550:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 551:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 552:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 553:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 554:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 555:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
 556:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 557:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC state machine to error */
 558:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 559:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 560:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 561:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 562:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 563:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
 564:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 565:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 566:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 567:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 568:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
ARM GAS  /tmp/ccQrq4iZ.s 			page 12


 569:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 570:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         If needed, the example code can be copied and uncommented into
 571:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         function HAL_ADC_MspDeInit().
 572:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 573:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
 574:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 575:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 576:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 577:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 578:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 579:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check ADC handle */
 580:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(hadc == NULL)
 581:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 582:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      return HAL_ERROR;
 583:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 584:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 585:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 586:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 587:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 588:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set ADC state */
 589:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 590:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 591:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 592:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
 593:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 594:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 595:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 596:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 597:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* correctly completed.                                                     */
 598:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 599:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 600:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* ========== Reset ADC registers ========== */
 601:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 602:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 603:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 604:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 605:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SR */
 606:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD | ADC_FLAG_JEOC | ADC_FLAG_EOC |
 607:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                 ADC_FLAG_JSTRT | ADC_FLAG_STRT));
 608:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                          
 609:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register CR1 */
 610:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR1, (ADC_CR1_AWDEN   | ADC_CR1_JAWDEN | ADC_CR1_DISCNUM | 
 611:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_JDISCEN | ADC_CR1_DISCEN | ADC_CR1_JAUTO   | 
 612:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_AWDSGL  | ADC_CR1_SCAN   | ADC_CR1_JEOCIE  |   
 613:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_AWDIE   | ADC_CR1_EOCIE  | ADC_CR1_AWDCH    ));
 614:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 615:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register CR2 */
 616:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR2, (ADC_CR2_TSVREFE | ADC_CR2_SWSTART | ADC_CR2_JSWSTART | 
 617:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL  | ADC_CR2_JEXTTRIG |  
 618:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_JEXTSEL | ADC_CR2_ALIGN   | ADC_CR2_DMA      |        
 619:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_RSTCAL  | ADC_CR2_CAL     | ADC_CR2_CONT     |         
 620:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_ADON                                          ));
 621:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 622:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SMPR1 */
 623:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SMPR1, (ADC_SMPR1_SMP17 | ADC_SMPR1_SMP16 | ADC_SMPR1_SMP15 | 
 624:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR1_SMP14 | ADC_SMPR1_SMP13 | ADC_SMPR1_SMP12 | 
 625:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR1_SMP11 | ADC_SMPR1_SMP10                    ));
ARM GAS  /tmp/ccQrq4iZ.s 			page 13


 626:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 627:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SMPR2 */
 628:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SMPR2, (ADC_SMPR2_SMP9 | ADC_SMPR2_SMP8 | ADC_SMPR2_SMP7 | 
 629:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR2_SMP6 | ADC_SMPR2_SMP5 | ADC_SMPR2_SMP4 | 
 630:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR2_SMP3 | ADC_SMPR2_SMP2 | ADC_SMPR2_SMP1 | 
 631:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR2_SMP0                                    ));
 632:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 633:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR1 */
 634:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR1, ADC_JOFR1_JOFFSET1);
 635:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR2 */
 636:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR2, ADC_JOFR2_JOFFSET2);
 637:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR3 */
 638:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR3, ADC_JOFR3_JOFFSET3);
 639:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR4 */
 640:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JOFR4, ADC_JOFR4_JOFFSET4);
 641:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 642:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register HTR */
 643:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->HTR, ADC_HTR_HT);
 644:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register LTR */
 645:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->LTR, ADC_LTR_LT);
 646:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 647:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SQR1 */
 648:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L    |
 649:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
 650:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ14 | ADC_SQR1_SQ13  );
 651:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 652:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SQR1 */
 653:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L    |
 654:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
 655:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ14 | ADC_SQR1_SQ13  );
 656:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 657:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SQR2 */
 658:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ12 | ADC_SQR2_SQ11 | ADC_SQR2_SQ10 | 
 659:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR2_SQ9  | ADC_SQR2_SQ8  | ADC_SQR2_SQ7   );
 660:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 661:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register SQR3 */
 662:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ6 | ADC_SQR3_SQ5 | ADC_SQR3_SQ4 | 
 663:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR3_SQ3 | ADC_SQR3_SQ2 | ADC_SQR3_SQ1  );
 664:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 665:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JSQR */
 666:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JSQR, ADC_JSQR_JL |
 667:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 668:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ2 | ADC_JSQR_JSQ1  );
 669:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 670:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JSQR */
 671:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->JSQR, ADC_JSQR_JL |
 672:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 673:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ2 | ADC_JSQR_JSQ1  );
 674:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 675:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register DR */
 676:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* bits in access mode read only, no direct reset applicable*/
 677:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 678:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 679:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* bits in access mode read only, no direct reset applicable*/
 680:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 681:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* ========== Hard reset ADC peripheral ========== */
 682:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Performs a global reset of the entire ADC peripheral: ADC state is     */
ARM GAS  /tmp/ccQrq4iZ.s 			page 14


 683:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* forced to a similar state after device power-on.                       */
 684:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If needed, copy-paste and uncomment the following reset code into      */
 685:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* function "void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)":              */
 686:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*                                                                        */
 687:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  __HAL_RCC_ADC1_FORCE_RESET()                                          */
 688:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  __HAL_RCC_ADC1_RELEASE_RESET()                                        */
 689:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 690:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* DeInit the low level hardware */
 691:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
 692:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 693:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC error code to none */
 694:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 695:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 696:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
 697:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_RESET; 
 698:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 699:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 700:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 701:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
 702:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 703:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 704:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
 705:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 706:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 707:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 708:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 709:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 710:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 711:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
 712:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 713:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 714:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 715:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 716:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
 717:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 718:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 719:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    */ 
 720:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 721:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 722:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 723:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 724:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 725:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
 726:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 727:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 728:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 729:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 730:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
 731:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 732:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 733:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    */ 
 734:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 735:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 736:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 737:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
 738:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 739:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
ARM GAS  /tmp/ccQrq4iZ.s 			page 15


 740:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 IO operation functions
 741:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *  @brief    Input and Output operation functions
 742:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *
 743:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @verbatim   
 744:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
 745:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       ##### IO operation functions #####
 746:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
 747:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 748:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Start conversion of regular group.
 749:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Stop conversion of regular group.
 750:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
 751:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Poll for conversion event.
 752:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Get result of regular channel conversion.
 753:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
 754:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
 755:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Handle ADC interrupt request
 756:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
 757:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
 758:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @endverbatim
 759:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
 760:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 761:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 762:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 763:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group.
 764:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Interruptions enabled in this function: None.
 765:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 766:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
 767:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 768:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
 769:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 770:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 771:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 772:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 773:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 774:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 775:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
 776:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
 777:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
 778:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Enable the ADC peripheral */
 779:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_Enable(hadc);
 780:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 781:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
 782:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 783:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 784:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state                                                          */
 785:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
 786:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - Set state bitfield related to regular operation                      */
 787:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 788:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
 789:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
 790:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 791:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set group injected state (from auto-injection) and multimode state     */
 792:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* for all cases of multimode: independent mode, multimode ADC master     */
 793:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* or multimode ADC slave (for devices with several ADCs):                */
 794:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
 795:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 796:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC independent or master) */
ARM GAS  /tmp/ccQrq4iZ.s 			page 16


 797:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 798:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 799:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
 800:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
 801:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 802:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 803:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 804:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 805:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 806:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
 807:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 808:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC slave) */
 809:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 810:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 811:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
 812:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
 813:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
 814:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 815:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 816:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 817:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 818:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 819:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
 820:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 821:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 822:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
 823:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 824:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 825:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
 826:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 827:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Reset ADC all error code fields */
 828:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 829:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 830:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 831:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
 832:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 833:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 834:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 835:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 836:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Clear regular group conversion flag */
 837:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 838:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
 839:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 840:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable conversion of regular group.                                    */
 841:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If software start has been selected, conversion starts immediately.    */
 842:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If external trigger has been selected, conversion will start at next   */
 843:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* trigger event.                                                         */
 844:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Case of multimode enabled:                                             */ 
 845:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - if ADC is slave, ADC is enabled only (conversion is not started).   */
 846:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - if ADC is master, ADC is enabled and conversion is started.         */
 847:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If ADC is master, ADC is enabled and conversion is started.            */
 848:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Note: Alternate trigger for single conversion could be to force an     */
 849:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       additional set of bit ADON "hadc->Instance->CR2 |= ADC_CR2_ADON;"*/
 850:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc)      &&
 851:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 852:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 853:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start ADC conversion on regular group with SW start */
ARM GAS  /tmp/ccQrq4iZ.s 			page 17


 854:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
 855:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 856:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
 857:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 858:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start ADC conversion on regular group with external trigger */
 859:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
 860:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 861:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 862:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
 863:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 864:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
 865:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 866:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 867:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 868:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
 869:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 870:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 871:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 872:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 873:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in 
 874:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
 875:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential 
 876:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
 877:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
 878:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 879:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status.
 880:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 881:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
 882:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 883:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 884:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 885:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 886:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 887:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
 888:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
 889:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
 890:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 891:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 892:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
 893:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 894:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 895:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
 896:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 897:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 898:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
 899:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 900:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 901:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 902:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 903:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 904:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
 905:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 906:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 907:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
 908:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
 909:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 910:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
ARM GAS  /tmp/ccQrq4iZ.s 			page 18


 911:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
 912:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
 913:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
 914:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         in DMA mode.
 915:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
 916:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         performed on each conversion.
 917:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   On STM32F1 devices, limitation in case of sequencer enabled
 918:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         (several ranks selected): polling cannot be done on each 
 919:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         conversion inside the sequence. In this case, polling is replaced by
 920:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         wait for maximum conversion time.
 921:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
 922:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  Timeout: Timeout value in millisecond.
 923:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
 924:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
 925:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 926:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
  65              		.loc 1 926 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 8
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              	.LVL0:
  70              		.loc 1 926 0
  71 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  72              		.cfi_def_cfa_offset 20
  73              		.cfi_offset 4, -20
  74              		.cfi_offset 5, -16
  75              		.cfi_offset 6, -12
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 0546     		mov	r5, r0
 927:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
 928:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 929:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Variables for polling in case of scan mode enabled and polling for each  */
 930:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* conversion.                                                              */
 931:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t Conversion_Timeout_CPU_cycles = 0U;
  79              		.loc 1 931 0
  80 0004 0027     		movs	r7, #0
 926:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
  81              		.loc 1 926 0
  82 0006 83B0     		sub	sp, sp, #12
  83              		.cfi_def_cfa_offset 32
 926:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
  84              		.loc 1 926 0
  85 0008 0C46     		mov	r4, r1
  86              		.loc 1 931 0
  87 000a 0197     		str	r7, [sp, #4]
  88              	.LVL1:
 932:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles_max = 0U;
 933:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  
 934:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 935:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 936:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 937:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Get tick count */
 938:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tickstart = HAL_GetTick();
  89              		.loc 1 938 0
  90 000c FFF7FEFF 		bl	HAL_GetTick
  91              	.LVL2:
ARM GAS  /tmp/ccQrq4iZ.s 			page 19


 939:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 940:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Verification that ADC configuration is compliant with polling for        */
 941:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* each conversion:                                                         */
 942:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Particular case is ADC configured in DMA mode                            */
 943:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
  92              		.loc 1 943 0
  93 0010 2B68     		ldr	r3, [r5]
  94 0012 9A68     		ldr	r2, [r3, #8]
  95 0014 D605     		lsls	r6, r2, #23
  96 0016 62D4     		bmi	.L36
 944:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 945:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC state machine to error */
 946:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 947:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 948:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
 949:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 950:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 951:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     return HAL_ERROR;
 952:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 953:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 954:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Polling for end of conversion: differentiation if single/sequence        */
 955:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* conversion.                                                              */
 956:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*  - If single conversion for regular group (Scan mode disabled or enabled */
 957:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    with NbrOfConversion =1), flag EOC is used to determine the           */
 958:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    conversion completion.                                                */
 959:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*  - If sequence conversion for regular group (scan mode enabled and       */
 960:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    NbrOfConversion >=2), flag EOC is set only at the end of the          */
 961:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    sequence.                                                             */
 962:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    To poll for each conversion, the maximum conversion time is computed  */
 963:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    from ADC conversion time (selected sampling time + conversion time of */
 964:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    12.5 ADC clock cycles) and APB2/ADC clock prescalers (depending on    */
 965:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    settings, conversion time range can be from 28 to 32256 CPU cycles).  */
 966:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    As flag EOC is not set after each conversion, no timeout status can   */
 967:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    be set.                                                               */
 968:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_SCAN) &&
  97              		.loc 1 968 0
  98 0018 5A68     		ldr	r2, [r3, #4]
  99 001a 0646     		mov	r6, r0
 100 001c D005     		lsls	r0, r2, #23
 101              	.LVL3:
 102 001e 03D4     		bmi	.L6
 969:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L)    )
 103              		.loc 1 969 0 discriminator 1
 104 0020 DA6A     		ldr	r2, [r3, #44]
 968:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L)    )
 105              		.loc 1 968 0 discriminator 1
 106 0022 12F4700F 		tst	r2, #15728640
 107 0026 1ED0     		beq	.L8
 108              	.L6:
 970:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 971:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Wait until End of Conversion flag is raised */
 972:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_EOC))
 973:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 974:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Check if timeout is disabled (set to infinite wait) */
 975:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if(Timeout != HAL_MAX_DELAY)
 976:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 977:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
ARM GAS  /tmp/ccQrq4iZ.s 			page 20


 978:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 979:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Update ADC state machine to timeout */
 980:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 981:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 982:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Process unlocked */
 983:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 984:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 985:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           return HAL_TIMEOUT;
 986:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
 987:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 988:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 989:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 990:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
 991:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 992:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Replace polling by wait for maximum conversion time */
 993:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - Computation of CPU clock cycles corresponding to ADC clock cycles   */
 994:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*    and ADC maximum conversion cycles on all channels.                  */
 995:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - Wait for the expected ADC clock cycles delay                        */
 996:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     Conversion_Timeout_CPU_cycles_max = ((SystemCoreClock
 997:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                           / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
 109              		.loc 1 997 0
 110 0028 454B     		ldr	r3, .L38
 111 002a 0220     		movs	r0, #2
 112 002c 1F68     		ldr	r7, [r3]
 113 002e FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 114              	.LVL4:
 998:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                          * ADC_CONVCYCLES_MAX_RANGE(hadc)                 );
 115              		.loc 1 998 0
 116 0032 2B68     		ldr	r3, [r5]
 117 0034 434A     		ldr	r2, .L38+4
 118 0036 1969     		ldr	r1, [r3, #16]
 997:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                          * ADC_CONVCYCLES_MAX_RANGE(hadc)                 );
 119              		.loc 1 997 0
 120 0038 B7FBF0F7 		udiv	r7, r7, r0
 121              		.loc 1 998 0
 122 003c 1142     		tst	r1, r2
 123 003e 25D1     		bne	.L13
 124              		.loc 1 998 0 is_stmt 0 discriminator 1
 125 0040 D968     		ldr	r1, [r3, #12]
 126 0042 02F15C42 		add	r2, r2, #-603979776
 127 0046 1142     		tst	r1, r2
 128 0048 20D1     		bne	.L13
 129              		.loc 1 998 0 discriminator 3
 130 004a 1969     		ldr	r1, [r3, #16]
 131 004c 3E4A     		ldr	r2, .L38+8
 132 004e 1142     		tst	r1, r2
 133 0050 73D1     		bne	.L22
 134              		.loc 1 998 0 discriminator 5
 135 0052 D968     		ldr	r1, [r3, #12]
 136 0054 02F16E42 		add	r2, r2, #-301989888
 137 0058 1142     		tst	r1, r2
 138 005a 14BF     		ite	ne
 139 005c 2920     		movne	r0, #41
 140 005e 1420     		moveq	r0, #20
 141 0060 1EE0     		b	.L14
 142              	.L11:
 975:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
ARM GAS  /tmp/ccQrq4iZ.s 			page 21


 143              		.loc 1 975 0 is_stmt 1
 144 0062 611C     		adds	r1, r4, #1
 145 0064 50D1     		bne	.L37
 146              	.L8:
 972:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 147              		.loc 1 972 0
 148 0066 1A68     		ldr	r2, [r3]
 149 0068 9207     		lsls	r2, r2, #30
 150 006a FAD5     		bpl	.L11
 151              	.LVL5:
 152              	.L12:
 999:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1000:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(Conversion_Timeout_CPU_cycles < Conversion_Timeout_CPU_cycles_max)
1001:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1002:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Check if timeout is disabled (set to infinite wait) */
1003:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if(Timeout != HAL_MAX_DELAY)
1004:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1005:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
1006:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
1007:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1008:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1009:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
1010:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Process unlocked */
1011:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
1012:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
1013:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           return HAL_TIMEOUT;
1014:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1015:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1016:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       Conversion_Timeout_CPU_cycles ++;
1017:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1018:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1019:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1020:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Clear regular group conversion flag */
1021:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 153              		.loc 1 1021 0
 154 006c 6FF01202 		mvn	r2, #18
 155 0070 1A60     		str	r2, [r3]
1022:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1023:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Update ADC state machine */
1024:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 156              		.loc 1 1024 0
 157 0072 AA6A     		ldr	r2, [r5, #40]
 158 0074 42F40072 		orr	r2, r2, #512
 159 0078 AA62     		str	r2, [r5, #40]
1025:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1026:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1027:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1028:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Note: On STM32F1 devices, in case of sequencer enabled                   */
1029:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       (several ranks selected), end of conversion flag is raised         */
1030:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       at the end of the sequence.                                        */
1031:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 160              		.loc 1 1031 0
 161 007a 9B68     		ldr	r3, [r3, #8]
 162 007c 03F46023 		and	r3, r3, #917504
 163 0080 B3F5602F 		cmp	r3, #917504
 164 0084 49D0     		beq	.L20
 165              	.L21:
ARM GAS  /tmp/ccQrq4iZ.s 			page 22


1032:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
1033:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {   
1034:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
1035:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
1036:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1037:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1038:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     { 
1039:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1040:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1041:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1042:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1043:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC state */
1044:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
 166              		.loc 1 1044 0
 167 0086 0020     		movs	r0, #0
 168              	.L5:
1045:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 169              		.loc 1 1045 0
 170 0088 03B0     		add	sp, sp, #12
 171              		.cfi_remember_state
 172              		.cfi_def_cfa_offset 20
 173              		@ sp needed
 174 008a F0BD     		pop	{r4, r5, r6, r7, pc}
 175              	.LVL6:
 176              	.L13:
 177              		.cfi_restore_state
 998:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 178              		.loc 1 998 0 discriminator 4
 179 008c 1969     		ldr	r1, [r3, #16]
 180 008e 2E4A     		ldr	r2, .L38+8
 181 0090 1142     		tst	r1, r2
 182 0092 1AD1     		bne	.L15
 998:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 183              		.loc 1 998 0 is_stmt 0 discriminator 11
 184 0094 D968     		ldr	r1, [r3, #12]
 185 0096 02F16E42 		add	r2, r2, #-301989888
 186 009a 1142     		tst	r1, r2
 187 009c 15D1     		bne	.L15
 998:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 188              		.loc 1 998 0
 189 009e 5420     		movs	r0, #84
 190              	.L14:
 996:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                           / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
 191              		.loc 1 996 0 is_stmt 1
 192 00a0 07FB00F7 		mul	r7, r7, r0
 193              	.LVL7:
1000:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 194              		.loc 1 1000 0
 195 00a4 019A     		ldr	r2, [sp, #4]
 196 00a6 9742     		cmp	r7, r2
 197 00a8 E0D9     		bls	.L12
 198              	.L30:
1003:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 199              		.loc 1 1003 0
 200 00aa 631C     		adds	r3, r4, #1
 201 00ac 05D0     		beq	.L16
1005:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
ARM GAS  /tmp/ccQrq4iZ.s 			page 23


 202              		.loc 1 1005 0
 203 00ae 0CB3     		cbz	r4, .L18
1005:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 204              		.loc 1 1005 0 is_stmt 0 discriminator 1
 205 00b0 FFF7FEFF 		bl	HAL_GetTick
 206              	.LVL8:
 207 00b4 801B     		subs	r0, r0, r6
 208 00b6 8442     		cmp	r4, r0
 209 00b8 1CD3     		bcc	.L18
 210              	.L16:
1016:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 211              		.loc 1 1016 0 is_stmt 1
 212 00ba 019B     		ldr	r3, [sp, #4]
 213 00bc 0133     		adds	r3, r3, #1
 214 00be 0193     		str	r3, [sp, #4]
1000:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 215              		.loc 1 1000 0
 216 00c0 019B     		ldr	r3, [sp, #4]
 217 00c2 9F42     		cmp	r7, r3
 218 00c4 F1D8     		bhi	.L30
 219 00c6 2B68     		ldr	r3, [r5]
 220 00c8 D0E7     		b	.L12
 221              	.LVL9:
 222              	.L15:
 998:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 223              		.loc 1 998 0 discriminator 14
 224 00ca 1969     		ldr	r1, [r3, #16]
 225 00cc 1F4A     		ldr	r2, .L38+12
 226 00ce 1142     		tst	r1, r2
 227 00d0 0ED1     		bne	.L25
 998:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 228              		.loc 1 998 0 is_stmt 0 discriminator 15
 229 00d2 D968     		ldr	r1, [r3, #12]
 230 00d4 1142     		tst	r1, r2
 231 00d6 14BF     		ite	ne
 232 00d8 FC20     		movne	r0, #252
 233 00da 5420     		moveq	r0, #84
 234 00dc E0E7     		b	.L14
 235              	.LVL10:
 236              	.L36:
 951:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 237              		.loc 1 951 0 is_stmt 1
 238 00de 0120     		movs	r0, #1
 239              	.LVL11:
 946:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 240              		.loc 1 946 0
 241 00e0 AB6A     		ldr	r3, [r5, #40]
 949:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 242              		.loc 1 949 0
 243 00e2 85F82470 		strb	r7, [r5, #36]
 946:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 244              		.loc 1 946 0
 245 00e6 43F02003 		orr	r3, r3, #32
 246 00ea AB62     		str	r3, [r5, #40]
 247              		.loc 1 1045 0
 248 00ec 03B0     		add	sp, sp, #12
 249              		.cfi_remember_state
ARM GAS  /tmp/ccQrq4iZ.s 			page 24


 250              		.cfi_def_cfa_offset 20
 251              		@ sp needed
 252 00ee F0BD     		pop	{r4, r5, r6, r7, pc}
 253              	.LVL12:
 254              	.L25:
 255              		.cfi_restore_state
 998:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 256              		.loc 1 998 0
 257 00f0 FC20     		movs	r0, #252
 258 00f2 D5E7     		b	.L14
 259              	.LVL13:
 260              	.L18:
1011:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 261              		.loc 1 1011 0
 262 00f4 0022     		movs	r2, #0
1013:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
 263              		.loc 1 1013 0
 264 00f6 0320     		movs	r0, #3
1008:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 265              		.loc 1 1008 0
 266 00f8 AB6A     		ldr	r3, [r5, #40]
1011:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 267              		.loc 1 1011 0
 268 00fa 85F82420 		strb	r2, [r5, #36]
1008:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           
 269              		.loc 1 1008 0
 270 00fe 43F00403 		orr	r3, r3, #4
 271 0102 AB62     		str	r3, [r5, #40]
 272              		.loc 1 1045 0
 273 0104 03B0     		add	sp, sp, #12
 274              		.cfi_remember_state
 275              		.cfi_def_cfa_offset 20
 276              		@ sp needed
 277 0106 F0BD     		pop	{r4, r5, r6, r7, pc}
 278              	.LVL14:
 279              	.L37:
 280              		.cfi_restore_state
 977:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 281              		.loc 1 977 0
 282 0108 002C     		cmp	r4, #0
 283 010a F3D0     		beq	.L18
 977:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 284              		.loc 1 977 0 is_stmt 0 discriminator 1
 285 010c FFF7FEFF 		bl	HAL_GetTick
 286              	.LVL15:
 287 0110 801B     		subs	r0, r0, r6
 288 0112 8442     		cmp	r4, r0
 289 0114 EED3     		bcc	.L18
 290 0116 2B68     		ldr	r3, [r5]
 291 0118 A5E7     		b	.L8
 292              	.LVL16:
 293              	.L20:
1031:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
 294              		.loc 1 1031 0 is_stmt 1 discriminator 1
 295 011a EB68     		ldr	r3, [r5, #12]
 296 011c 002B     		cmp	r3, #0
 297 011e B2D1     		bne	.L21
ARM GAS  /tmp/ccQrq4iZ.s 			page 25


1035:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 298              		.loc 1 1035 0
 299 0120 AB6A     		ldr	r3, [r5, #40]
 300 0122 23F48073 		bic	r3, r3, #256
 301 0126 AB62     		str	r3, [r5, #40]
1037:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     { 
 302              		.loc 1 1037 0
 303 0128 A86A     		ldr	r0, [r5, #40]
 304 012a 10F48050 		ands	r0, r0, #4096
 305 012e AAD1     		bne	.L21
1039:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 306              		.loc 1 1039 0
 307 0130 AB6A     		ldr	r3, [r5, #40]
 308 0132 43F00103 		orr	r3, r3, #1
 309 0136 AB62     		str	r3, [r5, #40]
 310 0138 A6E7     		b	.L5
 311              	.LVL17:
 312              	.L22:
 998:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 313              		.loc 1 998 0
 314 013a 2920     		movs	r0, #41
 315 013c B0E7     		b	.L14
 316              	.L39:
 317 013e 00BF     		.align	2
 318              	.L38:
 319 0140 00000000 		.word	SystemCoreClock
 320 0144 24499224 		.word	613566756
 321 0148 92244912 		.word	306783378
 322 014c 49922400 		.word	2396745
 323              		.cfi_endproc
 324              	.LFE70:
 326              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 327              		.align	1
 328              		.p2align 2,,3
 329              		.global	HAL_ADC_PollForEvent
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 333              		.fpu softvfp
 335              	HAL_ADC_PollForEvent:
 336              	.LFB71:
1046:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1047:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1048:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Poll for conversion event.
1049:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1050:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  EventType: the ADC event type.
1051:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          This parameter can be one of the following values:
1052:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watchdog event.
1053:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  Timeout: Timeout value in millisecond.
1054:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1055:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1056:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
1057:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 337              		.loc 1 1057 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccQrq4iZ.s 			page 26


 341              	.LVL18:
 342 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 343              		.cfi_def_cfa_offset 24
 344              		.cfi_offset 4, -24
 345              		.cfi_offset 5, -20
 346              		.cfi_offset 6, -16
 347              		.cfi_offset 7, -12
 348              		.cfi_offset 8, -8
 349              		.cfi_offset 14, -4
 350              		.loc 1 1057 0
 351 0004 0746     		mov	r7, r0
 352 0006 0E46     		mov	r6, r1
 353 0008 1546     		mov	r5, r2
1058:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U; 
1059:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1060:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1061:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1062:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
1063:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1064:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Get tick count */
1065:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tickstart = HAL_GetTick();
 354              		.loc 1 1065 0
 355 000a FFF7FEFF 		bl	HAL_GetTick
 356              	.LVL19:
 357 000e 8046     		mov	r8, r0
 358              	.LVL20:
 359              	.L41:
 360 0010 3C68     		ldr	r4, [r7]
 361 0012 01E0     		b	.L42
 362              	.L46:
1066:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1067:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check selected event flag */
1068:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   while(__HAL_ADC_GET_FLAG(hadc, EventType) == RESET)
1069:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1070:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1071:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 363              		.loc 1 1071 0
 364 0014 6B1C     		adds	r3, r5, #1
 365 0016 0DD1     		bne	.L50
 366              	.L42:
1068:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 367              		.loc 1 1068 0
 368 0018 2368     		ldr	r3, [r4]
 369 001a 36EA0303 		bics	r3, r6, r3
 370 001e F9D1     		bne	.L46
1072:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1073:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
1074:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1075:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1076:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1077:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1078:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Process unlocked */
1079:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1080:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1081:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         return HAL_TIMEOUT;
1082:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1083:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
ARM GAS  /tmp/ccQrq4iZ.s 			page 27


1084:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1085:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1086:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
1087:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set ADC state */
1088:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1089:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1090:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Clear ADC analog watchdog flag */
1091:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 371              		.loc 1 1091 0
 372 0020 6FF00102 		mvn	r2, #1
1088:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 373              		.loc 1 1088 0
 374 0024 BB6A     		ldr	r3, [r7, #40]
1092:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1093:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC state */
1094:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
 375              		.loc 1 1094 0
 376 0026 0020     		movs	r0, #0
1088:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 377              		.loc 1 1088 0
 378 0028 43F48033 		orr	r3, r3, #65536
 379 002c BB62     		str	r3, [r7, #40]
1091:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 380              		.loc 1 1091 0
 381 002e 2260     		str	r2, [r4]
1095:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 382              		.loc 1 1095 0
 383 0030 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 384              	.LVL21:
 385              	.L50:
1073:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 386              		.loc 1 1073 0
 387 0034 2DB1     		cbz	r5, .L45
1073:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 388              		.loc 1 1073 0 is_stmt 0 discriminator 1
 389 0036 FFF7FEFF 		bl	HAL_GetTick
 390              	.LVL22:
 391 003a A0EB0800 		sub	r0, r0, r8
 392 003e 8542     		cmp	r5, r0
 393 0040 E6D2     		bcs	.L41
 394              	.L45:
1079:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 395              		.loc 1 1079 0 is_stmt 1
 396 0042 0022     		movs	r2, #0
1076:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 397              		.loc 1 1076 0
 398 0044 BB6A     		ldr	r3, [r7, #40]
1079:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 399              		.loc 1 1079 0
 400 0046 87F82420 		strb	r2, [r7, #36]
1076:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 401              		.loc 1 1076 0
 402 004a 43F00403 		orr	r3, r3, #4
 403 004e BB62     		str	r3, [r7, #40]
1081:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 404              		.loc 1 1081 0
 405 0050 0320     		movs	r0, #3
ARM GAS  /tmp/ccQrq4iZ.s 			page 28


 406 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 407              		.cfi_endproc
 408              	.LFE71:
 410 0056 00BF     		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 411              		.align	1
 412              		.p2align 2,,3
 413              		.global	HAL_ADC_GetValue
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 417              		.fpu softvfp
 419              	HAL_ADC_GetValue:
 420              	.LFB76:
1096:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1097:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1098:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group with interruption.
1099:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Interruptions enabled in this function:
1100:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - EOC (end of conversion of regular group)
1101:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1102:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1103:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1104:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1105:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1106:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1107:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1108:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1109:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1110:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1111:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1112:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1113:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1114:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1115:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Enable the ADC peripheral */
1116:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_Enable(hadc);
1117:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1118:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1119:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1120:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1121:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state                                                          */
1122:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1123:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* - Set state bitfield related to regular operation                      */
1124:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1125:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_ADC
1126:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1127:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1128:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set group injected state (from auto-injection) and multimode state     */
1129:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* for all cases of multimode: independent mode, multimode ADC master     */
1130:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* or multimode ADC slave (for devices with several ADCs):                */
1131:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
1132:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1133:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC independent or master) */
1134:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1135:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1136:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1137:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1138:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
1139:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
ARM GAS  /tmp/ccQrq4iZ.s 			page 29


1140:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1141:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1142:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1143:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1144:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1145:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC slave) */
1146:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1147:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1148:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1149:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1150:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
1151:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1152:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1153:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1154:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1155:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1156:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1157:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1158:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1159:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1160:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1161:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1162:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1163:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1164:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Reset ADC all error code fields */
1165:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1166:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1167:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1168:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
1169:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1170:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1171:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
1172:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1173:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1174:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1175:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
1176:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1177:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable end of conversion interrupt for regular group */
1178:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1179:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1180:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable conversion of regular group.                                    */
1181:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If software start has been selected, conversion starts immediately.    */
1182:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* If external trigger has been selected, conversion will start at next   */
1183:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* trigger event.                                                         */
1184:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Case of multimode enabled:                                             */ 
1185:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - if ADC is slave, ADC is enabled only (conversion is not started).   */
1186:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*  - if ADC is master, ADC is enabled and conversion is started.         */
1187:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc)      &&
1188:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
1189:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1190:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start ADC conversion on regular group with SW start */
1191:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
1192:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1193:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1194:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1195:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start ADC conversion on regular group with external trigger */
1196:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
ARM GAS  /tmp/ccQrq4iZ.s 			page 30


1197:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1198:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1199:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
1200:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1201:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process unlocked */
1202:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
1203:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1204:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1205:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1206:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
1207:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1208:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1209:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1210:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
1211:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of 
1212:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1213:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1214:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1215:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1216:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
1217:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1218:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1219:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1220:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1221:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1222:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
1223:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1224:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1225:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1226:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1227:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
1228:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
1229:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1230:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1231:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1232:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1233:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1234:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
1235:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1236:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set ADC state */
1237:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
1238:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1239:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1240:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1241:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1242:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
1243:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1244:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1245:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1246:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
1247:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1248:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1249:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1250:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group and transfers result
1251:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         through DMA.
1252:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Interruptions enabled in this function:
1253:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - DMA transfer complete
ARM GAS  /tmp/ccQrq4iZ.s 			page 31


1254:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - DMA half transfer
1255:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1256:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   For devices with several ADCs: This function is for single-ADC mode 
1257:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         only. For multimode, use the dedicated MultimodeStart function.
1258:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   On STM32F1 devices, only ADC1 and ADC3 (ADC availability depending
1259:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         on devices) have DMA capability.
1260:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC2 converted data can be transferred in dual ADC mode using DMA
1261:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         of ADC1 (ADC master in multimode).
1262:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         In case of using ADC1 with DMA on a device featuring 2 ADC
1263:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         instances: ADC1 conversion register DR contains ADC1 conversion 
1264:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         result (ADC1 register DR bits 0 to 11) and, additionally, ADC2 last
1265:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         conversion result (ADC1 register DR bits 16 to 27). Therefore, to
1266:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         have DMA transferring the conversion results of ADC1 only, DMA must
1267:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         be configured to transfer size: half word.
1268:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1269:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  pData: The destination Buffer address.
1270:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  Length: The length of data to be transferred from ADC peripheral to memory.
1271:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1272:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1273:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1274:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1275:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1276:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1277:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1278:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_DMA_CAPABILITY_INSTANCE(hadc->Instance));
1279:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1280:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Verification if multimode is disabled (for devices with several ADC)     */
1281:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* If multimode is enabled, dedicated function multimode conversion         */
1282:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* start DMA must be used.                                                  */
1283:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(ADC_MULTIMODE_IS_ENABLE(hadc) == RESET)
1284:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1285:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Process locked */
1286:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_LOCK(hadc);
1287:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1288:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable the ADC peripheral */
1289:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1290:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1291:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1292:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1293:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1294:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state                                                        */
1295:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1296:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1297:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1298:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1299:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1300:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1301:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Set group injected state (from auto-injection) and multimode state     */
1302:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* for all cases of multimode: independent mode, multimode ADC master     */
1303:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* or multimode ADC slave (for devices with several ADCs):                */
1304:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
1305:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1306:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC independent or master) */
1307:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1308:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1309:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1310:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
ARM GAS  /tmp/ccQrq4iZ.s 			page 32


1311:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
1312:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1313:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1314:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1315:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1316:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1317:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1318:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state (ADC slave) */
1319:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1320:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1321:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If conversions on group regular are also triggering group injected,  */
1322:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* update ADC state.                                                    */
1323:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
1324:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1325:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1326:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1327:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1328:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1329:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* State machine update: Check if an injected conversion is ongoing */
1330:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1331:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1332:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Reset ADC error code fields related to conversions on group regular */
1333:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1334:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1335:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       else
1336:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1337:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Reset ADC all error code fields */
1338:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1339:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1340:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1341:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Process unlocked */
1342:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1343:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1344:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1345:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1346:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set the DMA transfer complete callback */
1347:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1348:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1349:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set the DMA half transfer complete callback */
1350:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1351:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1352:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set the DMA error callback */
1353:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
1354:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1355:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1356:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC   */
1357:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* start (in case of SW start):                                         */
1358:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1359:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Clear regular group conversion flag and overrun flag */
1360:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC           */
1361:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* operations)                                                          */
1362:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
1363:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1364:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Enable ADC DMA mode */
1365:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
1366:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1367:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Start the DMA channel */
ARM GAS  /tmp/ccQrq4iZ.s 			page 33


1368:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
1369:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1370:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1371:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1372:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1373:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* trigger event.                                                       */
1374:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
1375:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1376:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Start ADC conversion on regular group with SW start */
1377:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
1378:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1379:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       else
1380:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1381:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Start ADC conversion on regular group with external trigger */
1382:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
1383:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1384:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1385:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1386:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1387:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Process unlocked */
1388:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1389:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1390:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1391:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
1392:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1393:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
1394:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1395:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1396:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1397:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
1398:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1399:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1400:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1401:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
1402:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable 
1403:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC peripheral.
1404:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential 
1405:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1406:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1407:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   For devices with several ADCs: This function is for single-ADC mode 
1408:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         only. For multimode, use the dedicated MultimodeStop function.
1409:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   On STM32F1 devices, only ADC1 and ADC3 (ADC availability depending
1410:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         on devices) have DMA capability.
1411:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1412:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status.
1413:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1414:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1415:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1416:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1417:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1418:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1419:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_DMA_CAPABILITY_INSTANCE(hadc->Instance));
1420:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
1421:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1422:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1423:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1424:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
ARM GAS  /tmp/ccQrq4iZ.s 			page 34


1425:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Disable ADC peripheral */
1426:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
1427:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1428:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1429:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1430:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1431:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable ADC DMA mode */
1432:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
1433:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1434:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1435:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* DMA transfer is on going)                                              */
1436:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1438:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Check if DMA channel effectively disabled */
1439:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1440:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1441:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state */
1442:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1443:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1444:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1445:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1446:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
1447:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1448:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update ADC state machine to error */
1449:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1450:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1451:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1452:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1453:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
1454:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1455:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1456:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1457:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
1458:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1459:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1460:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1461:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
1462:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
1463:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
1464:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS 
1465:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
1466:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
1467:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
1468:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *            to flag EOC.
1469:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
1470:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
1471:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
1472:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         To clear this flag, either use function: 
1473:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1474:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion() 
1475:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
1476:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1477:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval ADC group regular conversion data
1478:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1479:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1480:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 421              		.loc 1 1480 0
ARM GAS  /tmp/ccQrq4iZ.s 			page 35


 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 426              	.LVL23:
1481:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1482:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1483:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1484:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
1485:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
1486:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1487:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC converted value */ 
1488:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return hadc->Instance->DR;
 427              		.loc 1 1488 0
 428 0000 0368     		ldr	r3, [r0]
 429 0002 D86C     		ldr	r0, [r3, #76]
 430              	.LVL24:
1489:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 431              		.loc 1 1489 0
 432 0004 7047     		bx	lr
 433              		.cfi_endproc
 434              	.LFE76:
 436 0006 00BF     		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 437              		.align	1
 438              		.p2align 2,,3
 439              		.weak	HAL_ADC_ConvCpltCallback
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu softvfp
 445              	HAL_ADC_ConvCpltCallback:
 446              	.LFB98:
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451 0000 7047     		bx	lr
 452              		.cfi_endproc
 453              	.LFE98:
 455 0002 00BF     		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 456              		.align	1
 457              		.p2align 2,,3
 458              		.global	ADC_DMAConvCplt
 459              		.syntax unified
 460              		.thumb
 461              		.thumb_func
 462              		.fpu softvfp
 464              	ADC_DMAConvCplt:
 465              	.LFB88:
1490:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1491:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1492:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Handles ADC interrupt request  
1493:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1494:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1495:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1496:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
1497:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
ARM GAS  /tmp/ccQrq4iZ.s 			page 36


1498:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1499:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1500:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1501:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
1502:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1503:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1504:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* ========== Check End of Conversion flag for regular group ========== */
1505:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC))
1506:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1507:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC) )
1508:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1509:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update state machine on conversion status if not in error state */
1510:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1511:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1512:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1513:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
1514:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1515:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1516:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Determine whether any further conversion upcoming on group regular   */
1517:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* by external trigger, continuous mode or scan sequence on going.      */
1518:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Note: On STM32F1 devices, in case of sequencer enabled               */
1519:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /*       (several ranks selected), end of conversion flag is raised     */
1520:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /*       at the end of the sequence.                                    */
1521:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
1522:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (hadc->Init.ContinuousConvMode == DISABLE)   )
1523:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1524:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Disable ADC end of conversion interrupt on group regular */
1525:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
1526:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1527:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1528:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
1529:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1530:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1531:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
1532:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1533:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1534:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1535:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1536:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Conversion complete callback */
1537:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_ADC_ConvCpltCallback(hadc);
1538:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1539:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Clear regular group conversion flag */
1540:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
1541:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1542:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1543:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1544:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* ========== Check End of Conversion flag for injected group ========== */
1545:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC))
1546:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1547:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC))
1548:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1549:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update state machine on conversion status if not in error state */
1550:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
1551:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1552:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1553:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
1554:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
ARM GAS  /tmp/ccQrq4iZ.s 			page 37


1555:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1556:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Determine whether any further conversion upcoming on group injected  */
1557:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* by external trigger, scan sequence on going or by automatic injected */
1558:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* conversion from group regular (same conditions as group regular      */
1559:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* interruption disabling above).                                       */
1560:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Note: On STM32F1 devices, in case of sequencer enabled               */
1561:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /*       (several ranks selected), end of conversion flag is raised     */
1562:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /*       at the end of the sequence.                                    */
1563:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                     || 
1564:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
1565:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
1566:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
1567:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1568:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Disable ADC end of conversion interrupt on group injected */
1569:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1570:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1571:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC state */
1572:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
1573:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1574:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
1575:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         { 
1576:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1577:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1578:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1579:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1580:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Conversion complete callback */ 
1581:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_ADCEx_InjectedConvCpltCallback(hadc);
1582:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1583:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Clear injected group conversion flag */
1584:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
1585:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1586:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1587:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
1588:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* ========== Check Analog watchdog flags ========== */
1589:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD))
1590:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1591:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
1592:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1593:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state */
1594:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1595:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1596:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Level out of window callback */ 
1597:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
1598:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1599:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Clear the ADC analog watchdog flag */
1600:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
1601:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1602:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1603:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1604:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1605:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1606:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1607:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Conversion complete callback in non blocking mode 
1608:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1609:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1610:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1611:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
ARM GAS  /tmp/ccQrq4iZ.s 			page 38


1612:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1613:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1614:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
1615:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1616:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
1617:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    */
1618:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1619:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1620:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1621:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non blocking mode 
1622:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1623:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1624:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1625:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
1626:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1627:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1628:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
1629:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1630:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
1631:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1632:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1633:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1634:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1635:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode. 
1636:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1637:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1638:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1639:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
1640:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1641:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1642:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
1643:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1644:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
1645:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1646:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1647:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1648:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1649:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  ADC error callback in non blocking mode
1650:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *        (ADC conversion with interruption or transfer by DMA)
1651:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1652:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
1653:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1654:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
1655:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1656:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1657:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   UNUSED(hadc);
1658:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1659:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
1660:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1661:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1662:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1663:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1664:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1665:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
1666:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1667:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1668:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
ARM GAS  /tmp/ccQrq4iZ.s 			page 39


1669:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *  @brief    Peripheral Control functions
1670:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *
1671:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @verbatim   
1672:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
1673:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ##### Peripheral Control functions #####
1674:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================  
1675:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1676:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Configure channels on regular group
1677:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Configure the analog watchdog
1678:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1679:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @endverbatim
1680:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
1681:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1682:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1683:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1684:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Configures the the selected channel to be linked to the regular
1685:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         group.
1686:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
1687:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
1688:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         These internal paths can be be disabled using function 
1689:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         HAL_ADC_DeInit().
1690:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
1691:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         This function initializes channel into regular group, following  
1692:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters 
1693:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         of structure "ADC_ChannelConfTypeDef" on the fly, without reseting 
1694:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         the ADC.
1695:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
1696:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
1697:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         "ADC_ChannelConfTypeDef".
1698:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1699:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  sConfig: Structure of ADC channel for regular group.
1700:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1701:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1702:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
1703:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** { 
1704:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1705:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
1706:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1707:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1708:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1709:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
1710:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
1711:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
1712:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1713:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1714:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1715:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1716:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1717:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Regular sequence configuration */
1718:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* For Rank 1 to 6 */
1719:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (sConfig->Rank < 7U)
1720:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1721:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR3                        ,
1722:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank)    ,
1723:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR3_RK(sConfig->Channel, sConfig->Rank) );
1724:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1725:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* For Rank 7 to 12 */
ARM GAS  /tmp/ccQrq4iZ.s 			page 40


1726:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else if (sConfig->Rank < 13U)
1727:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1728:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR2                        ,
1729:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank)    ,
1730:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR2_RK(sConfig->Channel, sConfig->Rank) );
1731:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1732:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* For Rank 13 to 16 */
1733:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
1734:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1735:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SQR1                        ,
1736:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank)   ,
1737:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_RK(sConfig->Channel, sConfig->Rank) );
1738:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1739:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1740:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1741:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Channel sampling time configuration */
1742:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* For channels 10 to 17 */
1743:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (sConfig->Channel >= ADC_CHANNEL_10)
1744:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1745:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SMPR1                             ,
1746:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel)      ,
1747:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel) );
1748:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1749:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else /* For channels 0 to 9 */
1750:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1751:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->SMPR2                             ,
1752:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel)       ,
1753:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel) );
1754:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1755:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1756:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* If ADC1 Channel_16 or Channel_17 is selected, enable Temperature sensor  */
1757:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* and VREFINT measurement path.                                            */
1758:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) ||
1759:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
1760:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1761:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* For STM32F1 devices with several ADC: Only ADC1 can access internal    */
1762:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* measurement channels (VrefInt/TempSensor). If these channels are       */
1763:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* intended to be set on other ADC instances, an error is reported.       */
1764:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if (hadc->Instance == ADC1)
1765:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1766:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE) == RESET)
1767:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1768:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE);
1769:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1770:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
1771:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
1772:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
1773:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           /* Compute number of CPU cycles to wait for */
1774:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
1775:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           while(wait_loop_index != 0U)
1776:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           {
1777:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             wait_loop_index--;
1778:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           }
1779:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
1780:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1781:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1782:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     else
ARM GAS  /tmp/ccQrq4iZ.s 			page 41


1783:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1784:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Update ADC state machine to error */
1785:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1786:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1787:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
1788:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1789:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1790:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1791:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
1792:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1793:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1794:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1795:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return tmp_hal_status;
1796:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1797:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1798:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1799:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
1800:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Analog watchdog thresholds can be modified while ADC conversion
1801:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         is on going.
1802:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
1803:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         the programmed threshold values are effective from the next
1804:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
1805:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         Considering that registers write delay may happen due to
1806:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
1807:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
1808:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1809:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  AnalogWDGConfig: Structure of ADC analog watchdog configuration
1810:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status
1811:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1812:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
1813:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1814:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
1815:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1816:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
1817:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
1818:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(AnalogWDGConfig->HighThreshold));
1819:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(AnalogWDGConfig->LowThreshold));
1820:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1821:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
1822:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
1823:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC)  )
1824:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1825:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
1826:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1827:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1828:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process locked */
1829:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_LOCK(hadc);
1830:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1831:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Analog watchdog configuration */
1832:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1833:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Configure ADC Analog watchdog interrupt */
1834:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
1835:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1836:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable the ADC Analog watchdog interrupt */
1837:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
1838:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1839:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
ARM GAS  /tmp/ccQrq4iZ.s 			page 42


1840:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1841:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable the ADC Analog watchdog interrupt */
1842:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
1843:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1844:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1845:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Configuration of analog watchdog:                                        */
1846:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*  - Set the analog watchdog enable mode: regular and/or injected groups,  */
1847:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    one or all channels.                                                  */
1848:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*  - Set the Analog watchdog channel (is not used if watchdog              */
1849:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /*    mode "all channels": ADC_CFGR_AWD1SGL=0).                             */
1850:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   MODIFY_REG(hadc->Instance->CR1            ,
1851:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_AWDSGL |
1852:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_JAWDEN |
1853:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_AWDEN  |
1854:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_AWDCH                  ,
1855:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              AnalogWDGConfig->WatchdogMode |
1856:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              AnalogWDGConfig->Channel        );
1857:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1858:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set the high threshold */
1859:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   WRITE_REG(hadc->Instance->HTR, AnalogWDGConfig->HighThreshold);
1860:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1861:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set the low threshold */
1862:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   WRITE_REG(hadc->Instance->LTR, AnalogWDGConfig->LowThreshold);
1863:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1864:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Process unlocked */
1865:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1866:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1867:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return function status */
1868:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
1869:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1870:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1871:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1872:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1873:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
1874:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1875:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1876:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1877:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
1878:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *  @brief    Peripheral State functions
1879:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  *
1880:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @verbatim
1881:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================
1882:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****             ##### Peripheral State and Errors functions #####
1883:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  ===============================================================================  
1884:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     [..]
1885:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the  
1886:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     peripheral.
1887:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Check the ADC state
1888:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (+) Check the ADC error code
1889:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1890:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** @endverbatim
1891:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
1892:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1893:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1894:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1895:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  return the ADC state
1896:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
ARM GAS  /tmp/ccQrq4iZ.s 			page 43


1897:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL state
1898:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1899:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
1900:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1901:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC state */
1902:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return hadc->State;
1903:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1904:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1905:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1906:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Return the ADC error code
1907:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1908:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval ADC Error Code
1909:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1910:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
1911:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1912:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return hadc->ErrorCode;
1913:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1914:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1915:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1916:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
1917:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1918:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1919:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1920:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @}
1921:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1922:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1923:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
1924:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @{
1925:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1926:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1927:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1928:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Enable the selected ADC.
1929:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
1930:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
1931:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1932:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status.
1933:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1934:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
1935:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1936:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
1937:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
1938:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1939:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
1940:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
1941:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
1942:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
1943:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
1944:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1945:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Enable the Peripheral */
1946:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
1947:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1948:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1949:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1950:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     wait_loop_index = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
1951:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(wait_loop_index != 0U)
1952:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1953:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       wait_loop_index--;
ARM GAS  /tmp/ccQrq4iZ.s 			page 44


1954:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1955:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
1956:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Get tick count */
1957:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tickstart = HAL_GetTick();
1958:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1959:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
1960:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(ADC_IS_ENABLE(hadc) == RESET)
1961:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
1962:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
1963:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
1964:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update ADC state machine to error */
1965:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1966:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1967:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
1968:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1969:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
1970:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Process unlocked */
1971:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1972:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
1973:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         return HAL_ERROR;
1974:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
1975:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
1976:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
1977:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
1978:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return HAL status */
1979:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
1980:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
1981:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
1982:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
1983:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  Stop ADC conversion and disable the selected ADC
1984:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
1985:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   *         stopped to disable the ADC.
1986:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hadc: ADC handle
1987:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval HAL status.
1988:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
1989:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop_Disable(ADC_HandleTypeDef* hadc)
1990:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
1991:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
1992:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
1993:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Verification if ADC is not already disabled */
1994:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (ADC_IS_ENABLE(hadc) != RESET)
1995:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
1996:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Disable the ADC peripheral */
1997:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     __HAL_ADC_DISABLE(hadc);
1998:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
1999:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Get tick count */
2000:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     tickstart = HAL_GetTick();
2001:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
2002:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
2003:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(ADC_IS_ENABLE(hadc) != RESET)
2004:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
2005:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
2006:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
2007:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Update ADC state machine to error */
2008:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2009:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
2010:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         /* Set ADC error code to ADC IP internal error */
ARM GAS  /tmp/ccQrq4iZ.s 			page 45


2011:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2012:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
2013:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         return HAL_ERROR;
2014:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
2015:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
2016:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2017:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2018:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return HAL status */
2019:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return HAL_OK;
2020:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
2021:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2022:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2023:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
2024:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hdma: pointer to DMA handle.
2025:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
2026:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2027:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
2028:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 466              		.loc 1 2028 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              	.LVL25:
2029:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2030:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 471              		.loc 1 2030 0
 472 0000 436A     		ldr	r3, [r0, #36]
 473              	.LVL26:
2031:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****  
2032:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
2033:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 474              		.loc 1 2033 0
 475 0002 9A6A     		ldr	r2, [r3, #40]
 476 0004 12F0500F 		tst	r2, #80
 477 0008 1ED1     		bne	.L54
2034:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2035:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Update ADC state machine */
2036:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 478              		.loc 1 2036 0
 479 000a 9A6A     		ldr	r2, [r3, #40]
2037:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
2038:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2039:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.        */
2040:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Note: On STM32F1 devices, in case of sequencer enabled                 */
2041:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       (several ranks selected), end of conversion flag is raised       */
2042:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /*       at the end of the sequence.                                      */
2043:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 480              		.loc 1 2043 0
 481 000c 1968     		ldr	r1, [r3]
2036:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 482              		.loc 1 2036 0
 483 000e 42F40072 		orr	r2, r2, #512
2028:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 484              		.loc 1 2028 0
 485 0012 10B5     		push	{r4, lr}
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 4, -8
ARM GAS  /tmp/ccQrq4iZ.s 			page 46


 488              		.cfi_offset 14, -4
2036:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 489              		.loc 1 2036 0
 490 0014 9A62     		str	r2, [r3, #40]
 491              		.loc 1 2043 0
 492 0016 8A68     		ldr	r2, [r1, #8]
 493 0018 02F46022 		and	r2, r2, #917504
 494 001c B2F5602F 		cmp	r2, #917504
 495 0020 03D0     		beq	.L63
 496              	.L56:
2044:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
2045:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
2046:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       /* Set ADC state */
2047:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
2048:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
2049:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
2050:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
2051:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2052:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
2053:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
2054:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
2055:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Conversion complete callback */
2056:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc); 
 497              		.loc 1 2056 0
 498 0022 1846     		mov	r0, r3
 499              	.LVL27:
 500 0024 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 501              	.LVL28:
 502 0028 10BD     		pop	{r4, pc}
 503              	.LVL29:
 504              	.L63:
2043:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
 505              		.loc 1 2043 0 discriminator 1
 506 002a DA68     		ldr	r2, [r3, #12]
 507 002c 002A     		cmp	r2, #0
 508 002e F8D1     		bne	.L56
2047:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 509              		.loc 1 2047 0
 510 0030 9A6A     		ldr	r2, [r3, #40]
 511 0032 22F48072 		bic	r2, r2, #256
 512 0036 9A62     		str	r2, [r3, #40]
2049:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 513              		.loc 1 2049 0
 514 0038 9A6A     		ldr	r2, [r3, #40]
 515 003a D204     		lsls	r2, r2, #19
 516 003c F1D4     		bmi	.L56
2051:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 517              		.loc 1 2051 0
 518 003e 9A6A     		ldr	r2, [r3, #40]
 519 0040 42F00102 		orr	r2, r2, #1
 520 0044 9A62     		str	r2, [r3, #40]
 521 0046 ECE7     		b	.L56
 522              	.L54:
 523              		.cfi_def_cfa_offset 0
 524              		.cfi_restore 4
 525              		.cfi_restore 14
2057:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
ARM GAS  /tmp/ccQrq4iZ.s 			page 47


2058:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   else
2059:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
2060:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Call DMA error callback */
2061:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback(hdma);
 526              		.loc 1 2061 0
 527 0048 1B6A     		ldr	r3, [r3, #32]
 528              	.LVL30:
 529 004a 1B6B     		ldr	r3, [r3, #48]
 530 004c 1847     		bx	r3	@ indirect register sibling call
 531              	.LVL31:
 532              		.cfi_endproc
 533              	.LFE88:
 535 004e 00BF     		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 536              		.align	1
 537              		.p2align 2,,3
 538              		.weak	HAL_ADC_ConvHalfCpltCallback
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 542              		.fpu softvfp
 544              	HAL_ADC_ConvHalfCpltCallback:
 545              	.LFB96:
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 550 0000 7047     		bx	lr
 551              		.cfi_endproc
 552              	.LFE96:
 554 0002 00BF     		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 555              		.align	1
 556              		.p2align 2,,3
 557              		.global	ADC_DMAHalfConvCplt
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu softvfp
 563              	ADC_DMAHalfConvCplt:
 564              	.LFB89:
2062:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
2063:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
2064:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2065:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
2066:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
2067:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hdma: pointer to DMA handle.
2068:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
2069:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2070:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
2071:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 565              		.loc 1 2071 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              	.LVL32:
 570              		.loc 1 2071 0
 571 0000 08B5     		push	{r3, lr}
 572              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccQrq4iZ.s 			page 48


 573              		.cfi_offset 3, -8
 574              		.cfi_offset 14, -4
2072:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2073:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2074:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2075:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Half conversion callback */
2076:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc); 
 575              		.loc 1 2076 0
 576 0002 406A     		ldr	r0, [r0, #36]
 577              	.LVL33:
 578 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 579              	.LVL34:
 580 0008 08BD     		pop	{r3, pc}
 581              		.cfi_endproc
 582              	.LFE89:
 584 000a 00BF     		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 585              		.align	1
 586              		.p2align 2,,3
 587              		.weak	HAL_ADC_LevelOutOfWindowCallback
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 591              		.fpu softvfp
 593              	HAL_ADC_LevelOutOfWindowCallback:
 594              	.LFB94:
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599 0000 7047     		bx	lr
 600              		.cfi_endproc
 601              	.LFE94:
 603 0002 00BF     		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 604              		.align	1
 605              		.p2align 2,,3
 606              		.global	HAL_ADC_IRQHandler
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 610              		.fpu softvfp
 612              	HAL_ADC_IRQHandler:
 613              	.LFB77:
1497:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 614              		.loc 1 1497 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              	.LVL35:
1505:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 619              		.loc 1 1505 0
 620 0000 0368     		ldr	r3, [r0]
1497:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 621              		.loc 1 1497 0
 622 0002 10B5     		push	{r4, lr}
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 4, -8
 625              		.cfi_offset 14, -4
ARM GAS  /tmp/ccQrq4iZ.s 			page 49


1505:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 626              		.loc 1 1505 0
 627 0004 5A68     		ldr	r2, [r3, #4]
1497:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 628              		.loc 1 1497 0
 629 0006 0446     		mov	r4, r0
1505:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 630              		.loc 1 1505 0
 631 0008 9006     		lsls	r0, r2, #26
 632              	.LVL36:
 633 000a 02D5     		bpl	.L69
1507:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 634              		.loc 1 1507 0
 635 000c 1A68     		ldr	r2, [r3]
 636 000e 9107     		lsls	r1, r2, #30
 637 0010 2AD4     		bmi	.L103
 638              	.L69:
1545:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 639              		.loc 1 1545 0
 640 0012 5A68     		ldr	r2, [r3, #4]
 641 0014 1006     		lsls	r0, r2, #24
 642 0016 02D5     		bpl	.L74
1547:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 643              		.loc 1 1547 0
 644 0018 1A68     		ldr	r2, [r3]
 645 001a 5107     		lsls	r1, r2, #29
 646 001c 06D4     		bmi	.L104
 647              	.L74:
1589:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 648              		.loc 1 1589 0
 649 001e 5A68     		ldr	r2, [r3, #4]
 650 0020 5206     		lsls	r2, r2, #25
 651 0022 02D5     		bpl	.L68
1591:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 652              		.loc 1 1591 0
 653 0024 1B68     		ldr	r3, [r3]
 654 0026 DB07     		lsls	r3, r3, #31
 655 0028 33D4     		bmi	.L105
 656              	.L68:
 657 002a 10BD     		pop	{r4, pc}
 658              	.LVL37:
 659              	.L104:
1550:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 660              		.loc 1 1550 0
 661 002c A26A     		ldr	r2, [r4, #40]
 662 002e D206     		lsls	r2, r2, #27
 663 0030 03D4     		bmi	.L75
1553:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 664              		.loc 1 1553 0
 665 0032 A26A     		ldr	r2, [r4, #40]
 666 0034 42F40052 		orr	r2, r2, #8192
 667 0038 A262     		str	r2, [r4, #40]
 668              	.L75:
1563:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 669              		.loc 1 1563 0
 670 003a 9A68     		ldr	r2, [r3, #8]
 671 003c 02F4E042 		and	r2, r2, #28672
ARM GAS  /tmp/ccQrq4iZ.s 			page 50


 672 0040 B2F5E04F 		cmp	r2, #28672
 673 0044 34D0     		beq	.L76
1564:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
 674              		.loc 1 1564 0 discriminator 1
 675 0046 5A68     		ldr	r2, [r3, #4]
1563:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 676              		.loc 1 1563 0 discriminator 1
 677 0048 5005     		lsls	r0, r2, #21
 678 004a 05D4     		bmi	.L78
1565:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
 679              		.loc 1 1565 0
 680 004c 9A68     		ldr	r2, [r3, #8]
 681 004e 02F46022 		and	r2, r2, #917504
1564:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
 682              		.loc 1 1564 0
 683 0052 B2F5602F 		cmp	r2, #917504
 684 0056 28D0     		beq	.L106
 685              	.L78:
1581:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 686              		.loc 1 1581 0
 687 0058 2046     		mov	r0, r4
 688 005a FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 689              	.LVL38:
1584:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 690              		.loc 1 1584 0
 691 005e 6FF00C02 		mvn	r2, #12
 692 0062 2368     		ldr	r3, [r4]
 693 0064 1A60     		str	r2, [r3]
 694 0066 DAE7     		b	.L74
 695              	.L103:
1510:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 696              		.loc 1 1510 0
 697 0068 A26A     		ldr	r2, [r4, #40]
 698 006a D206     		lsls	r2, r2, #27
 699 006c 03D4     		bmi	.L70
1513:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 700              		.loc 1 1513 0
 701 006e A26A     		ldr	r2, [r4, #40]
 702 0070 42F40072 		orr	r2, r2, #512
 703 0074 A262     		str	r2, [r4, #40]
 704              	.L70:
1521:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (hadc->Init.ContinuousConvMode == DISABLE)   )
 705              		.loc 1 1521 0
 706 0076 9A68     		ldr	r2, [r3, #8]
 707 0078 02F46022 		and	r2, r2, #917504
 708 007c B2F5602F 		cmp	r2, #917504
 709 0080 26D0     		beq	.L107
 710              	.L72:
1537:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 711              		.loc 1 1537 0
 712 0082 2046     		mov	r0, r4
 713 0084 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 714              	.LVL39:
1540:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 715              		.loc 1 1540 0
 716 0088 6FF01202 		mvn	r2, #18
 717 008c 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccQrq4iZ.s 			page 51


 718 008e 1A60     		str	r2, [r3]
 719 0090 BFE7     		b	.L69
 720              	.L105:
1594:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 721              		.loc 1 1594 0
 722 0092 A36A     		ldr	r3, [r4, #40]
1597:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 723              		.loc 1 1597 0
 724 0094 2046     		mov	r0, r4
1594:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 725              		.loc 1 1594 0
 726 0096 43F48033 		orr	r3, r3, #65536
 727 009a A362     		str	r3, [r4, #40]
1597:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 728              		.loc 1 1597 0
 729 009c FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 730              	.LVL40:
1600:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 731              		.loc 1 1600 0
 732 00a0 6FF00102 		mvn	r2, #1
 733 00a4 2368     		ldr	r3, [r4]
 734 00a6 1A60     		str	r2, [r3]
 735 00a8 10BD     		pop	{r4, pc}
 736              	.LVL41:
 737              	.L106:
1565:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
 738              		.loc 1 1565 0
 739 00aa E268     		ldr	r2, [r4, #12]
 740 00ac 002A     		cmp	r2, #0
 741 00ae D3D1     		bne	.L78
 742              	.L76:
1569:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 743              		.loc 1 1569 0
 744 00b0 5A68     		ldr	r2, [r3, #4]
 745 00b2 22F08002 		bic	r2, r2, #128
 746 00b6 5A60     		str	r2, [r3, #4]
1572:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 747              		.loc 1 1572 0
 748 00b8 A36A     		ldr	r3, [r4, #40]
 749 00ba 23F48053 		bic	r3, r3, #4096
 750 00be A362     		str	r3, [r4, #40]
1574:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         { 
 751              		.loc 1 1574 0
 752 00c0 A36A     		ldr	r3, [r4, #40]
 753 00c2 D905     		lsls	r1, r3, #23
 754 00c4 C8D4     		bmi	.L78
1576:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
 755              		.loc 1 1576 0
 756 00c6 A36A     		ldr	r3, [r4, #40]
 757 00c8 43F00103 		orr	r3, r3, #1
 758 00cc A362     		str	r3, [r4, #40]
 759 00ce C3E7     		b	.L78
 760              	.L107:
1521:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****          (hadc->Init.ContinuousConvMode == DISABLE)   )
 761              		.loc 1 1521 0 discriminator 1
 762 00d0 E268     		ldr	r2, [r4, #12]
 763 00d2 002A     		cmp	r2, #0
ARM GAS  /tmp/ccQrq4iZ.s 			page 52


 764 00d4 D5D1     		bne	.L72
1525:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 765              		.loc 1 1525 0
 766 00d6 5A68     		ldr	r2, [r3, #4]
 767 00d8 22F02002 		bic	r2, r2, #32
 768 00dc 5A60     		str	r2, [r3, #4]
1528:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 769              		.loc 1 1528 0
 770 00de A36A     		ldr	r3, [r4, #40]
 771 00e0 23F48073 		bic	r3, r3, #256
 772 00e4 A362     		str	r3, [r4, #40]
1530:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 773              		.loc 1 1530 0
 774 00e6 A36A     		ldr	r3, [r4, #40]
 775 00e8 DB04     		lsls	r3, r3, #19
 776 00ea CAD4     		bmi	.L72
1532:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         }
 777              		.loc 1 1532 0
 778 00ec A36A     		ldr	r3, [r4, #40]
 779 00ee 43F00103 		orr	r3, r3, #1
 780 00f2 A362     		str	r3, [r4, #40]
 781 00f4 C5E7     		b	.L72
 782              		.cfi_endproc
 783              	.LFE77:
 785 00f6 00BF     		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 786              		.align	1
 787              		.p2align 2,,3
 788              		.weak	HAL_ADC_ErrorCallback
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu softvfp
 794              	HAL_ADC_ErrorCallback:
 795              	.LFB81:
1655:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 796              		.loc 1 1655 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 801              	.LVL42:
 802 0000 7047     		bx	lr
 803              		.cfi_endproc
 804              	.LFE81:
 806 0002 00BF     		.section	.text.ADC_DMAError,"ax",%progbits
 807              		.align	1
 808              		.p2align 2,,3
 809              		.global	ADC_DMAError
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 813              		.fpu softvfp
 815              	ADC_DMAError:
 816              	.LFB90:
2077:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
2078:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
2079:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** /**
ARM GAS  /tmp/ccQrq4iZ.s 			page 53


2080:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @brief  DMA error callback 
2081:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @param  hdma: pointer to DMA handle.
2082:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   * @retval None
2083:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   */
2084:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)   
2085:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** {
 817              		.loc 1 2085 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821              	.LVL43:
 822              		.loc 1 2085 0
 823 0000 08B5     		push	{r3, lr}
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 3, -8
 826              		.cfi_offset 14, -4
2086:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2087:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 827              		.loc 1 2087 0
 828 0002 436A     		ldr	r3, [r0, #36]
 829              	.LVL44:
2088:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2089:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set ADC state */
2090:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 830              		.loc 1 2090 0
 831 0004 9A6A     		ldr	r2, [r3, #40]
2091:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2092:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Set ADC error code to DMA error */
2093:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
2094:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
2095:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Error callback */
2096:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc); 
 832              		.loc 1 2096 0
 833 0006 1846     		mov	r0, r3
 834              	.LVL45:
2090:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 835              		.loc 1 2090 0
 836 0008 42F04002 		orr	r2, r2, #64
 837 000c 9A62     		str	r2, [r3, #40]
2093:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 838              		.loc 1 2093 0
 839 000e DA6A     		ldr	r2, [r3, #44]
 840 0010 42F00402 		orr	r2, r2, #4
 841 0014 DA62     		str	r2, [r3, #44]
 842              		.loc 1 2096 0
 843 0016 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 844              	.LVL46:
 845 001a 08BD     		pop	{r3, pc}
 846              		.cfi_endproc
 847              	.LFE90:
 849              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 850              		.align	1
 851              		.p2align 2,,3
 852              		.global	HAL_ADC_ConfigChannel
 853              		.syntax unified
 854              		.thumb
 855              		.thumb_func
ARM GAS  /tmp/ccQrq4iZ.s 			page 54


 856              		.fpu softvfp
 858              	HAL_ADC_ConfigChannel:
 859              	.LFB82:
1703:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 860              		.loc 1 1703 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 8
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864              		@ link register save eliminated.
 865              	.LVL47:
 866 0000 0246     		mov	r2, r0
1705:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 867              		.loc 1 1705 0
 868 0002 0020     		movs	r0, #0
 869              	.LVL48:
1703:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 870              		.loc 1 1703 0
 871 0004 70B4     		push	{r4, r5, r6}
 872              		.cfi_def_cfa_offset 12
 873              		.cfi_offset 4, -12
 874              		.cfi_offset 5, -8
 875              		.cfi_offset 6, -4
1714:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 876              		.loc 1 1714 0
 877 0006 92F82430 		ldrb	r3, [r2, #36]	@ zero_extendqisi2
1703:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 878              		.loc 1 1703 0
 879 000a 83B0     		sub	sp, sp, #12
 880              		.cfi_def_cfa_offset 24
1714:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 881              		.loc 1 1714 0
 882 000c 012B     		cmp	r3, #1
1705:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 883              		.loc 1 1705 0
 884 000e 0190     		str	r0, [sp, #4]
1714:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 885              		.loc 1 1714 0
 886 0010 54D0     		beq	.L123
1714:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 887              		.loc 1 1714 0 is_stmt 0 discriminator 2
 888 0012 0120     		movs	r0, #1
1719:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 889              		.loc 1 1719 0 is_stmt 1 discriminator 2
 890 0014 4B68     		ldr	r3, [r1, #4]
1721:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank)    ,
 891              		.loc 1 1721 0 discriminator 2
 892 0016 1F26     		movs	r6, #31
1719:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 893              		.loc 1 1719 0 discriminator 2
 894 0018 062B     		cmp	r3, #6
1714:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 895              		.loc 1 1714 0 discriminator 2
 896 001a 82F82400 		strb	r0, [r2, #36]
1721:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank)    ,
 897              		.loc 1 1721 0 discriminator 2
 898 001e 1468     		ldr	r4, [r2]
1719:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
ARM GAS  /tmp/ccQrq4iZ.s 			page 55


 899              		.loc 1 1719 0 discriminator 2
 900 0020 24D8     		bhi	.L113
1721:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank)    ,
 901              		.loc 1 1721 0
 902 0022 03EB8303 		add	r3, r3, r3, lsl #2
 903 0026 053B     		subs	r3, r3, #5
 904 0028 656B     		ldr	r5, [r4, #52]
 905 002a 0868     		ldr	r0, [r1]
 906 002c 9E40     		lsls	r6, r6, r3
 907 002e 25EA0605 		bic	r5, r5, r6
 908 0032 00FA03F3 		lsl	r3, r0, r3
 909 0036 2B43     		orrs	r3, r3, r5
 910 0038 6363     		str	r3, [r4, #52]
 911              	.L114:
1743:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 912              		.loc 1 1743 0
 913 003a 0928     		cmp	r0, #9
 914 003c 26D9     		bls	.L116
 915              	.L130:
1745:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel)      ,
 916              		.loc 1 1745 0
 917 003e 0726     		movs	r6, #7
 918 0040 00EB4003 		add	r3, r0, r0, lsl #1
 919 0044 8D68     		ldr	r5, [r1, #8]
 920 0046 1E3B     		subs	r3, r3, #30
 921 0048 E168     		ldr	r1, [r4, #12]
 922              	.LVL49:
 923 004a 9E40     		lsls	r6, r6, r3
 924 004c 9D40     		lsls	r5, r5, r3
 925 004e 21EA0603 		bic	r3, r1, r6
 926 0052 2B43     		orrs	r3, r3, r5
 927 0054 E360     		str	r3, [r4, #12]
1758:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
 928              		.loc 1 1758 0
 929 0056 A0F11003 		sub	r3, r0, #16
 930 005a 012B     		cmp	r3, #1
 931 005c 25D9     		bls	.L118
 932              	.L121:
1704:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0U;
 933              		.loc 1 1704 0
 934 005e 0020     		movs	r0, #0
 935              	.LVL50:
 936              	.L119:
1792:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 937              		.loc 1 1792 0
 938 0060 0023     		movs	r3, #0
 939 0062 82F82430 		strb	r3, [r2, #36]
1796:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 940              		.loc 1 1796 0
 941 0066 03B0     		add	sp, sp, #12
 942              		.cfi_remember_state
 943              		.cfi_def_cfa_offset 12
 944              		@ sp needed
 945 0068 70BC     		pop	{r4, r5, r6}
 946              		.cfi_restore 6
 947              		.cfi_restore 5
 948              		.cfi_restore 4
ARM GAS  /tmp/ccQrq4iZ.s 			page 56


 949              		.cfi_def_cfa_offset 0
 950 006a 7047     		bx	lr
 951              	.LVL51:
 952              	.L113:
 953              		.cfi_restore_state
1726:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 954              		.loc 1 1726 0
 955 006c 0C2B     		cmp	r3, #12
1728:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank)    ,
 956              		.loc 1 1728 0
 957 006e 03EB8303 		add	r3, r3, r3, lsl #2
1726:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 958              		.loc 1 1726 0
 959 0072 27D8     		bhi	.L115
1728:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank)    ,
 960              		.loc 1 1728 0
 961 0074 0868     		ldr	r0, [r1]
 962 0076 233B     		subs	r3, r3, #35
 963 0078 256B     		ldr	r5, [r4, #48]
 964 007a 9E40     		lsls	r6, r6, r3
 965 007c 25EA0605 		bic	r5, r5, r6
 966 0080 00FA03F3 		lsl	r3, r0, r3
 967 0084 2B43     		orrs	r3, r3, r5
1743:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 968              		.loc 1 1743 0
 969 0086 0928     		cmp	r0, #9
1728:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank)    ,
 970              		.loc 1 1728 0
 971 0088 2363     		str	r3, [r4, #48]
1743:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 972              		.loc 1 1743 0
 973 008a D8D8     		bhi	.L130
 974              	.L116:
1751:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel)       ,
 975              		.loc 1 1751 0
 976 008c 0725     		movs	r5, #7
 977 008e 8968     		ldr	r1, [r1, #8]
 978              	.LVL52:
 979 0090 00EB4006 		add	r6, r0, r0, lsl #1
 980 0094 2369     		ldr	r3, [r4, #16]
 981 0096 B540     		lsls	r5, r5, r6
 982 0098 B140     		lsls	r1, r1, r6
 983 009a 23EA0503 		bic	r3, r3, r5
 984 009e 0B43     		orrs	r3, r3, r1
 985 00a0 2361     		str	r3, [r4, #16]
1758:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
 986              		.loc 1 1758 0
 987 00a2 A0F11003 		sub	r3, r0, #16
 988 00a6 012B     		cmp	r3, #1
 989 00a8 D9D8     		bhi	.L121
 990              	.L118:
1764:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 991              		.loc 1 1764 0
 992 00aa 1A4B     		ldr	r3, .L132
 993 00ac 9C42     		cmp	r4, r3
 994 00ae 14D0     		beq	.L131
1785:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
ARM GAS  /tmp/ccQrq4iZ.s 			page 57


 995              		.loc 1 1785 0
 996 00b0 936A     		ldr	r3, [r2, #40]
1787:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 997              		.loc 1 1787 0
 998 00b2 0120     		movs	r0, #1
1785:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 999              		.loc 1 1785 0
 1000 00b4 43F02003 		orr	r3, r3, #32
 1001 00b8 9362     		str	r3, [r2, #40]
 1002              	.LVL53:
 1003 00ba D1E7     		b	.L119
 1004              	.LVL54:
 1005              	.L123:
1714:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1006              		.loc 1 1714 0
 1007 00bc 0220     		movs	r0, #2
1796:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1008              		.loc 1 1796 0
 1009 00be 03B0     		add	sp, sp, #12
 1010              		.cfi_remember_state
 1011              		.cfi_def_cfa_offset 12
 1012              		@ sp needed
 1013 00c0 70BC     		pop	{r4, r5, r6}
 1014              		.cfi_restore 4
 1015              		.cfi_restore 5
 1016              		.cfi_restore 6
 1017              		.cfi_def_cfa_offset 0
 1018 00c2 7047     		bx	lr
 1019              	.L115:
 1020              		.cfi_restore_state
1735:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank)   ,
 1021              		.loc 1 1735 0
 1022 00c4 413B     		subs	r3, r3, #65
 1023 00c6 E56A     		ldr	r5, [r4, #44]
 1024 00c8 0868     		ldr	r0, [r1]
 1025 00ca 9E40     		lsls	r6, r6, r3
 1026 00cc 25EA0605 		bic	r5, r5, r6
 1027 00d0 00FA03F3 		lsl	r3, r0, r3
 1028 00d4 2B43     		orrs	r3, r3, r5
 1029 00d6 E362     		str	r3, [r4, #44]
 1030 00d8 AFE7     		b	.L114
 1031              	.LVL55:
 1032              	.L131:
1766:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1033              		.loc 1 1766 0
 1034 00da A368     		ldr	r3, [r4, #8]
 1035 00dc 1B02     		lsls	r3, r3, #8
 1036 00de BED4     		bmi	.L121
1768:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 1037              		.loc 1 1768 0
 1038 00e0 A368     		ldr	r3, [r4, #8]
1770:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 1039              		.loc 1 1770 0
 1040 00e2 1028     		cmp	r0, #16
1768:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 1041              		.loc 1 1768 0
 1042 00e4 43F40003 		orr	r3, r3, #8388608
ARM GAS  /tmp/ccQrq4iZ.s 			page 58


 1043 00e8 A360     		str	r3, [r4, #8]
1770:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         {
 1044              		.loc 1 1770 0
 1045 00ea B8D1     		bne	.L121
1774:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           while(wait_loop_index != 0U)
 1046              		.loc 1 1774 0
 1047 00ec 0A4B     		ldr	r3, .L132+4
 1048 00ee 0B49     		ldr	r1, .L132+8
 1049 00f0 1B68     		ldr	r3, [r3]
 1050 00f2 A1FB0313 		umull	r1, r3, r1, r3
 1051 00f6 9B0C     		lsrs	r3, r3, #18
 1052 00f8 03EB8303 		add	r3, r3, r3, lsl #2
 1053 00fc 5B00     		lsls	r3, r3, #1
 1054 00fe 0193     		str	r3, [sp, #4]
1775:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           {
 1055              		.loc 1 1775 0
 1056 0100 019B     		ldr	r3, [sp, #4]
 1057 0102 002B     		cmp	r3, #0
 1058 0104 ABD0     		beq	.L121
 1059              	.L126:
1777:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           }
 1060              		.loc 1 1777 0
 1061 0106 019B     		ldr	r3, [sp, #4]
 1062 0108 013B     		subs	r3, r3, #1
 1063 010a 0193     		str	r3, [sp, #4]
1775:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****           {
 1064              		.loc 1 1775 0
 1065 010c 019B     		ldr	r3, [sp, #4]
 1066 010e 002B     		cmp	r3, #0
 1067 0110 F9D1     		bne	.L126
 1068 0112 A4E7     		b	.L121
 1069              	.L133:
 1070              		.align	2
 1071              	.L132:
 1072 0114 00240140 		.word	1073816576
 1073 0118 00000000 		.word	SystemCoreClock
 1074 011c 83DE1B43 		.word	1125899907
 1075              		.cfi_endproc
 1076              	.LFE82:
 1078              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 1079              		.align	1
 1080              		.p2align 2,,3
 1081              		.global	HAL_ADC_AnalogWDGConfig
 1082              		.syntax unified
 1083              		.thumb
 1084              		.thumb_func
 1085              		.fpu softvfp
 1087              	HAL_ADC_AnalogWDGConfig:
 1088              	.LFB83:
1813:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 1089              		.loc 1 1813 0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
 1093              		@ link register save eliminated.
 1094              	.LVL56:
1829:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
ARM GAS  /tmp/ccQrq4iZ.s 			page 59


 1095              		.loc 1 1829 0
 1096 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1097 0004 012B     		cmp	r3, #1
 1098 0006 20D0     		beq	.L138
1813:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Check the parameters */
 1099              		.loc 1 1813 0 discriminator 2
 1100 0008 F0B4     		push	{r4, r5, r6, r7}
 1101              		.cfi_def_cfa_offset 16
 1102              		.cfi_offset 4, -16
 1103              		.cfi_offset 5, -12
 1104              		.cfi_offset 6, -8
 1105              		.cfi_offset 7, -4
 1106 000a 0246     		mov	r2, r0
1829:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1107              		.loc 1 1829 0 discriminator 2
 1108 000c 0124     		movs	r4, #1
1865:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1109              		.loc 1 1865 0 discriminator 2
 1110 000e 0025     		movs	r5, #0
1834:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1111              		.loc 1 1834 0 discriminator 2
 1112 0010 8B68     		ldr	r3, [r1, #8]
1821:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 1113              		.loc 1 1821 0 discriminator 2
 1114 0012 0868     		ldr	r0, [r1]
 1115              	.LVL57:
1834:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1116              		.loc 1 1834 0 discriminator 2
 1117 0014 A342     		cmp	r3, r4
1837:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 1118              		.loc 1 1837 0 discriminator 2
 1119 0016 1368     		ldr	r3, [r2]
1829:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1120              		.loc 1 1829 0 discriminator 2
 1121 0018 82F82440 		strb	r4, [r2, #36]
1837:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 1122              		.loc 1 1837 0 discriminator 2
 1123 001c 5C68     		ldr	r4, [r3, #4]
 1124 001e 0CBF     		ite	eq
 1125 0020 44F04004 		orreq	r4, r4, #64
1842:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 1126              		.loc 1 1842 0 discriminator 2
 1127 0024 24F04004 		bicne	r4, r4, #64
 1128 0028 5C60     		str	r4, [r3, #4]
1850:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_AWDSGL |
 1129              		.loc 1 1850 0 discriminator 2
 1130 002a 5F68     		ldr	r7, [r3, #4]
 1131 002c 4E68     		ldr	r6, [r1, #4]
 1132 002e 084C     		ldr	r4, .L143
 1133 0030 3043     		orrs	r0, r0, r6
 1134 0032 3C40     		ands	r4, r4, r7
1862:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1135              		.loc 1 1862 0 discriminator 2
 1136 0034 0E69     		ldr	r6, [r1, #16]
1859:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1137              		.loc 1 1859 0 discriminator 2
 1138 0036 CF68     		ldr	r7, [r1, #12]
ARM GAS  /tmp/ccQrq4iZ.s 			page 60


1850:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****              ADC_CR1_AWDSGL |
 1139              		.loc 1 1850 0 discriminator 2
 1140 0038 2043     		orrs	r0, r0, r4
 1141 003a 5860     		str	r0, [r3, #4]
1859:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1142              		.loc 1 1859 0 discriminator 2
 1143 003c 5F62     		str	r7, [r3, #36]
1868:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1144              		.loc 1 1868 0 discriminator 2
 1145 003e 2846     		mov	r0, r5
1862:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1146              		.loc 1 1862 0 discriminator 2
 1147 0040 9E62     		str	r6, [r3, #40]
1865:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1148              		.loc 1 1865 0 discriminator 2
 1149 0042 82F82450 		strb	r5, [r2, #36]
1869:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1150              		.loc 1 1869 0 discriminator 2
 1151 0046 F0BC     		pop	{r4, r5, r6, r7}
 1152              		.cfi_restore 7
 1153              		.cfi_restore 6
 1154              		.cfi_restore 5
 1155              		.cfi_restore 4
 1156              		.cfi_def_cfa_offset 0
 1157 0048 7047     		bx	lr
 1158              	.LVL58:
 1159              	.L138:
1829:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1160              		.loc 1 1829 0
 1161 004a 0220     		movs	r0, #2
 1162              	.LVL59:
 1163 004c 7047     		bx	lr
 1164              	.L144:
 1165 004e 00BF     		.align	2
 1166              	.L143:
 1167 0050 E0FD3FFF 		.word	-12583456
 1168              		.cfi_endproc
 1169              	.LFE83:
 1171              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 1172              		.align	1
 1173              		.p2align 2,,3
 1174              		.global	HAL_ADC_GetState
 1175              		.syntax unified
 1176              		.thumb
 1177              		.thumb_func
 1178              		.fpu softvfp
 1180              	HAL_ADC_GetState:
 1181              	.LFB84:
1900:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   /* Return ADC state */
 1182              		.loc 1 1900 0
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 0
 1185              		@ frame_needed = 0, uses_anonymous_args = 0
 1186              		@ link register save eliminated.
 1187              	.LVL60:
1902:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1188              		.loc 1 1902 0
ARM GAS  /tmp/ccQrq4iZ.s 			page 61


 1189 0000 806A     		ldr	r0, [r0, #40]
 1190              	.LVL61:
1903:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1191              		.loc 1 1903 0
 1192 0002 7047     		bx	lr
 1193              		.cfi_endproc
 1194              	.LFE84:
 1196              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 1197              		.align	1
 1198              		.p2align 2,,3
 1199              		.global	HAL_ADC_GetError
 1200              		.syntax unified
 1201              		.thumb
 1202              		.thumb_func
 1203              		.fpu softvfp
 1205              	HAL_ADC_GetError:
 1206              	.LFB85:
1911:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   return hadc->ErrorCode;
 1207              		.loc 1 1911 0
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 0
 1210              		@ frame_needed = 0, uses_anonymous_args = 0
 1211              		@ link register save eliminated.
 1212              	.LVL62:
1912:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1213              		.loc 1 1912 0
 1214 0000 C06A     		ldr	r0, [r0, #44]
 1215              	.LVL63:
1913:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1216              		.loc 1 1913 0
 1217 0002 7047     		bx	lr
 1218              		.cfi_endproc
 1219              	.LFE85:
 1221              		.section	.text.ADC_Enable,"ax",%progbits
 1222              		.align	1
 1223              		.p2align 2,,3
 1224              		.global	ADC_Enable
 1225              		.syntax unified
 1226              		.thumb
 1227              		.thumb_func
 1228              		.fpu softvfp
 1230              	ADC_Enable:
 1231              	.LFB86:
1935:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
 1232              		.loc 1 1935 0
 1233              		.cfi_startproc
 1234              		@ args = 0, pretend = 0, frame = 8
 1235              		@ frame_needed = 0, uses_anonymous_args = 0
 1236              	.LVL64:
1937:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1237              		.loc 1 1937 0
 1238 0000 0023     		movs	r3, #0
1935:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
 1239              		.loc 1 1935 0
 1240 0002 70B5     		push	{r4, r5, r6, lr}
 1241              		.cfi_def_cfa_offset 16
 1242              		.cfi_offset 4, -16
ARM GAS  /tmp/ccQrq4iZ.s 			page 62


 1243              		.cfi_offset 5, -12
 1244              		.cfi_offset 6, -8
 1245              		.cfi_offset 14, -4
1943:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1246              		.loc 1 1943 0
 1247 0004 0268     		ldr	r2, [r0]
1935:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
 1248              		.loc 1 1935 0
 1249 0006 82B0     		sub	sp, sp, #8
 1250              		.cfi_def_cfa_offset 24
1937:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1251              		.loc 1 1937 0
 1252 0008 0193     		str	r3, [sp, #4]
1943:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1253              		.loc 1 1943 0
 1254 000a 9368     		ldr	r3, [r2, #8]
 1255 000c DB07     		lsls	r3, r3, #31
 1256 000e 21D4     		bmi	.L154
1950:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(wait_loop_index != 0U)
 1257              		.loc 1 1950 0
 1258 0010 184B     		ldr	r3, .L160
 1259 0012 194C     		ldr	r4, .L160+4
 1260 0014 1B68     		ldr	r3, [r3]
1946:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1261              		.loc 1 1946 0
 1262 0016 9168     		ldr	r1, [r2, #8]
1950:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(wait_loop_index != 0U)
 1263              		.loc 1 1950 0
 1264 0018 A4FB0343 		umull	r4, r3, r4, r3
1946:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1265              		.loc 1 1946 0
 1266 001c 41F00101 		orr	r1, r1, #1
1950:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(wait_loop_index != 0U)
 1267              		.loc 1 1950 0
 1268 0020 9B0C     		lsrs	r3, r3, #18
1946:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1269              		.loc 1 1946 0
 1270 0022 9160     		str	r1, [r2, #8]
1950:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     while(wait_loop_index != 0U)
 1271              		.loc 1 1950 0
 1272 0024 0193     		str	r3, [sp, #4]
1951:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1273              		.loc 1 1951 0
 1274 0026 019B     		ldr	r3, [sp, #4]
 1275 0028 2BB1     		cbz	r3, .L152
 1276              	.L155:
1953:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1277              		.loc 1 1953 0
 1278 002a 019B     		ldr	r3, [sp, #4]
 1279 002c 013B     		subs	r3, r3, #1
 1280 002e 0193     		str	r3, [sp, #4]
1951:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1281              		.loc 1 1951 0
 1282 0030 019B     		ldr	r3, [sp, #4]
 1283 0032 002B     		cmp	r3, #0
 1284 0034 F9D1     		bne	.L155
 1285              	.L152:
ARM GAS  /tmp/ccQrq4iZ.s 			page 63


 1286 0036 0546     		mov	r5, r0
1957:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1287              		.loc 1 1957 0
 1288 0038 FFF7FEFF 		bl	HAL_GetTick
 1289              	.LVL65:
 1290 003c 0646     		mov	r6, r0
 1291              	.LVL66:
1960:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1292              		.loc 1 1960 0
 1293 003e 04E0     		b	.L151
 1294              	.LVL67:
 1295              	.L153:
1962:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1296              		.loc 1 1962 0
 1297 0040 FFF7FEFF 		bl	HAL_GetTick
 1298              	.LVL68:
 1299 0044 801B     		subs	r0, r0, r6
 1300 0046 0228     		cmp	r0, #2
 1301 0048 07D8     		bhi	.L159
 1302              	.L151:
1960:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1303              		.loc 1 1960 0
 1304 004a 2B68     		ldr	r3, [r5]
 1305 004c 9C68     		ldr	r4, [r3, #8]
 1306 004e 14F00104 		ands	r4, r4, #1
 1307 0052 F5D0     		beq	.L153
 1308              	.LVL69:
 1309              	.L154:
1979:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1310              		.loc 1 1979 0
 1311 0054 0020     		movs	r0, #0
1980:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1312              		.loc 1 1980 0
 1313 0056 02B0     		add	sp, sp, #8
 1314              		.cfi_remember_state
 1315              		.cfi_def_cfa_offset 16
 1316              		@ sp needed
 1317 0058 70BD     		pop	{r4, r5, r6, pc}
 1318              	.LVL70:
 1319              	.L159:
 1320              		.cfi_restore_state
 1321              	.LBB4:
 1322              	.LBB5:
1971:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1323              		.loc 1 1971 0
 1324 005a 0120     		movs	r0, #1
1965:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1325              		.loc 1 1965 0
 1326 005c AB6A     		ldr	r3, [r5, #40]
1971:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1327              		.loc 1 1971 0
 1328 005e 85F82440 		strb	r4, [r5, #36]
 1329              	.LVL71:
1965:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1330              		.loc 1 1965 0
 1331 0062 43F01003 		orr	r3, r3, #16
 1332 0066 AB62     		str	r3, [r5, #40]
ARM GAS  /tmp/ccQrq4iZ.s 			page 64


1968:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 1333              		.loc 1 1968 0
 1334 0068 EB6A     		ldr	r3, [r5, #44]
 1335 006a 0343     		orrs	r3, r3, r0
 1336 006c EB62     		str	r3, [r5, #44]
 1337              	.LBE5:
 1338              	.LBE4:
1980:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1339              		.loc 1 1980 0
 1340 006e 02B0     		add	sp, sp, #8
 1341              		.cfi_def_cfa_offset 16
 1342              		@ sp needed
 1343 0070 70BD     		pop	{r4, r5, r6, pc}
 1344              	.LVL72:
 1345              	.L161:
 1346 0072 00BF     		.align	2
 1347              	.L160:
 1348 0074 00000000 		.word	SystemCoreClock
 1349 0078 83DE1B43 		.word	1125899907
 1350              		.cfi_endproc
 1351              	.LFE86:
 1353              		.section	.text.HAL_ADC_Start,"ax",%progbits
 1354              		.align	1
 1355              		.p2align 2,,3
 1356              		.global	HAL_ADC_Start
 1357              		.syntax unified
 1358              		.thumb
 1359              		.thumb_func
 1360              		.fpu softvfp
 1362              	HAL_ADC_Start:
 1363              	.LFB68:
 769:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1364              		.loc 1 769 0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 0
 1367              		@ frame_needed = 0, uses_anonymous_args = 0
 1368              	.LVL73:
 776:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
 1369              		.loc 1 776 0
 1370 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
 1371 0004 012B     		cmp	r3, #1
 1372 0006 01D1     		bne	.L183
 1373 0008 0220     		movs	r0, #2
 1374              	.LVL74:
 1375 000a 7047     		bx	lr
 1376              	.LVL75:
 1377              	.L183:
 776:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
 1378              		.loc 1 776 0 is_stmt 0 discriminator 2
 1379 000c 0123     		movs	r3, #1
 769:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1380              		.loc 1 769 0 is_stmt 1 discriminator 2
 1381 000e 10B5     		push	{r4, lr}
 1382              		.cfi_def_cfa_offset 8
 1383              		.cfi_offset 4, -8
 1384              		.cfi_offset 14, -4
 776:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****    
ARM GAS  /tmp/ccQrq4iZ.s 			page 65


 1385              		.loc 1 776 0 discriminator 2
 1386 0010 80F82430 		strb	r3, [r0, #36]
 1387 0014 0446     		mov	r4, r0
 779:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1388              		.loc 1 779 0 discriminator 2
 1389 0016 FFF7FEFF 		bl	ADC_Enable
 1390              	.LVL76:
 782:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1391              		.loc 1 782 0 discriminator 2
 1392 001a 0028     		cmp	r0, #0
 1393 001c 32D1     		bne	.L164
 787:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
 1394              		.loc 1 787 0
 1395 001e A36A     		ldr	r3, [r4, #40]
 794:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1396              		.loc 1 794 0
 1397 0020 2268     		ldr	r2, [r4]
 787:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
 1398              		.loc 1 787 0
 1399 0022 23F44073 		bic	r3, r3, #768
 794:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1400              		.loc 1 794 0
 1401 0026 2749     		ldr	r1, .L187
 787:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
 1402              		.loc 1 787 0
 1403 0028 23F00103 		bic	r3, r3, #1
 1404 002c 43F48073 		orr	r3, r3, #256
 794:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1405              		.loc 1 794 0
 1406 0030 8A42     		cmp	r2, r1
 787:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
 1407              		.loc 1 787 0
 1408 0032 A362     		str	r3, [r4, #40]
 794:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1409              		.loc 1 794 0
 1410 0034 32D0     		beq	.L184
 1411              	.L165:
 797:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1412              		.loc 1 797 0
 1413 0036 A36A     		ldr	r3, [r4, #40]
 1414 0038 23F48013 		bic	r3, r3, #1048576
 1415 003c A362     		str	r3, [r4, #40]
 801:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1416              		.loc 1 801 0
 1417 003e 5368     		ldr	r3, [r2, #4]
 1418 0040 5905     		lsls	r1, r3, #21
 1419 0042 05D5     		bpl	.L168
 1420              	.L182:
 815:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1421              		.loc 1 815 0
 1422 0044 A36A     		ldr	r3, [r4, #40]
 1423 0046 23F44053 		bic	r3, r3, #12288
 1424 004a 43F48053 		orr	r3, r3, #4096
 1425 004e A362     		str	r3, [r4, #40]
 1426              	.L168:
 820:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1427              		.loc 1 820 0
ARM GAS  /tmp/ccQrq4iZ.s 			page 66


 1428 0050 A36A     		ldr	r3, [r4, #40]
 834:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1429              		.loc 1 834 0
 1430 0052 0021     		movs	r1, #0
 820:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1431              		.loc 1 820 0
 1432 0054 13F48053 		ands	r3, r3, #4096
 823:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1433              		.loc 1 823 0
 1434 0058 18BF     		it	ne
 1435 005a E36A     		ldrne	r3, [r4, #44]
 834:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1436              		.loc 1 834 0
 1437 005c 84F82410 		strb	r1, [r4, #36]
 823:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1438              		.loc 1 823 0
 1439 0060 18BF     		it	ne
 1440 0062 23F00603 		bicne	r3, r3, #6
 828:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1441              		.loc 1 828 0
 1442 0066 E362     		str	r3, [r4, #44]
 838:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1443              		.loc 1 838 0
 1444 0068 6FF00203 		mvn	r3, #2
 1445 006c 1360     		str	r3, [r2]
 850:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1446              		.loc 1 850 0
 1447 006e 9368     		ldr	r3, [r2, #8]
 1448 0070 03F46023 		and	r3, r3, #917504
 1449 0074 B3F5602F 		cmp	r3, #917504
 1450 0078 08D0     		beq	.L185
 1451              	.L172:
 859:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1452              		.loc 1 859 0
 1453 007a 9368     		ldr	r3, [r2, #8]
 1454 007c 43F48013 		orr	r3, r3, #1048576
 1455 0080 9360     		str	r3, [r2, #8]
 1456 0082 10BD     		pop	{r4, pc}
 1457              	.LVL77:
 1458              	.L164:
 865:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 1459              		.loc 1 865 0
 1460 0084 0023     		movs	r3, #0
 1461 0086 84F82430 		strb	r3, [r4, #36]
 1462 008a 10BD     		pop	{r4, pc}
 1463              	.LVL78:
 1464              	.L185:
 850:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1465              		.loc 1 850 0 discriminator 1
 1466 008c 0D4B     		ldr	r3, .L187
 1467 008e 9A42     		cmp	r2, r3
 1468 0090 11D0     		beq	.L186
 1469              	.L173:
 854:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1470              		.loc 1 854 0
 1471 0092 9368     		ldr	r3, [r2, #8]
 1472 0094 43F4A003 		orr	r3, r3, #5242880
ARM GAS  /tmp/ccQrq4iZ.s 			page 67


 1473 0098 9360     		str	r3, [r2, #8]
 1474 009a 10BD     		pop	{r4, pc}
 1475              	.LVL79:
 1476              	.L184:
 794:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1477              		.loc 1 794 0 discriminator 1
 1478 009c 0A4B     		ldr	r3, .L187+4
 1479 009e 5968     		ldr	r1, [r3, #4]
 1480 00a0 11F4702F 		tst	r1, #983040
 1481 00a4 C7D0     		beq	.L165
 809:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1482              		.loc 1 809 0
 1483 00a6 A16A     		ldr	r1, [r4, #40]
 1484 00a8 41F48011 		orr	r1, r1, #1048576
 1485 00ac A162     		str	r1, [r4, #40]
 813:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1486              		.loc 1 813 0
 1487 00ae 5B68     		ldr	r3, [r3, #4]
 1488 00b0 5B05     		lsls	r3, r3, #21
 1489 00b2 CDD5     		bpl	.L168
 1490 00b4 C6E7     		b	.L182
 1491              	.L186:
 851:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1492              		.loc 1 851 0 discriminator 2
 1493 00b6 A3F58063 		sub	r3, r3, #1024
 1494 00ba 5B68     		ldr	r3, [r3, #4]
 850:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1495              		.loc 1 850 0 discriminator 2
 1496 00bc 13F4702F 		tst	r3, #983040
 1497 00c0 DBD1     		bne	.L172
 1498 00c2 E6E7     		b	.L173
 1499              	.L188:
 1500              		.align	2
 1501              	.L187:
 1502 00c4 00280140 		.word	1073817600
 1503 00c8 00240140 		.word	1073816576
 1504              		.cfi_endproc
 1505              	.LFE68:
 1507              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 1508              		.align	1
 1509              		.p2align 2,,3
 1510              		.global	HAL_ADC_Start_IT
 1511              		.syntax unified
 1512              		.thumb
 1513              		.thumb_func
 1514              		.fpu softvfp
 1516              	HAL_ADC_Start_IT:
 1517              	.LFB72:
1106:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1518              		.loc 1 1106 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 0
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
 1522              	.LVL80:
1113:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1523              		.loc 1 1113 0
 1524 0000 90F82430 		ldrb	r3, [r0, #36]	@ zero_extendqisi2
ARM GAS  /tmp/ccQrq4iZ.s 			page 68


 1525 0004 012B     		cmp	r3, #1
 1526 0006 01D1     		bne	.L210
 1527 0008 0220     		movs	r0, #2
 1528              	.LVL81:
 1529 000a 7047     		bx	lr
 1530              	.LVL82:
 1531              	.L210:
1113:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1532              		.loc 1 1113 0 is_stmt 0 discriminator 2
 1533 000c 0123     		movs	r3, #1
1106:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1534              		.loc 1 1106 0 is_stmt 1 discriminator 2
 1535 000e 10B5     		push	{r4, lr}
 1536              		.cfi_def_cfa_offset 8
 1537              		.cfi_offset 4, -8
 1538              		.cfi_offset 14, -4
1113:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1539              		.loc 1 1113 0 discriminator 2
 1540 0010 80F82430 		strb	r3, [r0, #36]
 1541 0014 0446     		mov	r4, r0
1116:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1542              		.loc 1 1116 0 discriminator 2
 1543 0016 FFF7FEFF 		bl	ADC_Enable
 1544              	.LVL83:
1119:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1545              		.loc 1 1119 0 discriminator 2
 1546 001a 0028     		cmp	r0, #0
 1547 001c 36D1     		bne	.L191
1124:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_ADC
 1548              		.loc 1 1124 0
 1549 001e A26A     		ldr	r2, [r4, #40]
1131:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1550              		.loc 1 1131 0
 1551 0020 2368     		ldr	r3, [r4]
1124:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_ADC
 1552              		.loc 1 1124 0
 1553 0022 22F47062 		bic	r2, r2, #3840
1131:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1554              		.loc 1 1131 0
 1555 0026 2949     		ldr	r1, .L214
1124:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_ADC
 1556              		.loc 1 1124 0
 1557 0028 22F00102 		bic	r2, r2, #1
 1558 002c 42F48072 		orr	r2, r2, #256
1131:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1559              		.loc 1 1131 0
 1560 0030 8B42     		cmp	r3, r1
1124:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_ADC
 1561              		.loc 1 1124 0
 1562 0032 A262     		str	r2, [r4, #40]
1131:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1563              		.loc 1 1131 0
 1564 0034 36D0     		beq	.L211
 1565              	.L192:
1134:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1566              		.loc 1 1134 0
 1567 0036 A26A     		ldr	r2, [r4, #40]
ARM GAS  /tmp/ccQrq4iZ.s 			page 69


 1568 0038 22F48012 		bic	r2, r2, #1048576
 1569 003c A262     		str	r2, [r4, #40]
1138:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1570              		.loc 1 1138 0
 1571 003e 5A68     		ldr	r2, [r3, #4]
 1572 0040 5105     		lsls	r1, r2, #21
 1573 0042 05D5     		bpl	.L195
 1574              	.L209:
1152:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1575              		.loc 1 1152 0
 1576 0044 A26A     		ldr	r2, [r4, #40]
 1577 0046 22F44052 		bic	r2, r2, #12288
 1578 004a 42F48052 		orr	r2, r2, #4096
 1579 004e A262     		str	r2, [r4, #40]
 1580              	.L195:
1157:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1581              		.loc 1 1157 0
 1582 0050 A26A     		ldr	r2, [r4, #40]
1171:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1583              		.loc 1 1171 0
 1584 0052 0021     		movs	r1, #0
1157:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1585              		.loc 1 1157 0
 1586 0054 12F48052 		ands	r2, r2, #4096
1160:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1587              		.loc 1 1160 0
 1588 0058 18BF     		it	ne
 1589 005a E26A     		ldrne	r2, [r4, #44]
1171:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1590              		.loc 1 1171 0
 1591 005c 84F82410 		strb	r1, [r4, #36]
1160:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1592              		.loc 1 1160 0
 1593 0060 18BF     		it	ne
 1594 0062 22F00602 		bicne	r2, r2, #6
1165:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1595              		.loc 1 1165 0
 1596 0066 E262     		str	r2, [r4, #44]
1175:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1597              		.loc 1 1175 0
 1598 0068 6FF00202 		mvn	r2, #2
 1599 006c 1A60     		str	r2, [r3]
1178:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1600              		.loc 1 1178 0
 1601 006e 5A68     		ldr	r2, [r3, #4]
 1602 0070 42F02002 		orr	r2, r2, #32
 1603 0074 5A60     		str	r2, [r3, #4]
1187:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1604              		.loc 1 1187 0
 1605 0076 9A68     		ldr	r2, [r3, #8]
 1606 0078 02F46022 		and	r2, r2, #917504
 1607 007c B2F5602F 		cmp	r2, #917504
 1608 0080 08D0     		beq	.L212
 1609              	.L199:
1196:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1610              		.loc 1 1196 0
 1611 0082 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/ccQrq4iZ.s 			page 70


 1612 0084 42F48012 		orr	r2, r2, #1048576
 1613 0088 9A60     		str	r2, [r3, #8]
 1614 008a 10BD     		pop	{r4, pc}
 1615              	.LVL84:
 1616              	.L191:
1202:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 1617              		.loc 1 1202 0
 1618 008c 0023     		movs	r3, #0
 1619 008e 84F82430 		strb	r3, [r4, #36]
 1620 0092 10BD     		pop	{r4, pc}
 1621              	.LVL85:
 1622              	.L212:
1187:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1623              		.loc 1 1187 0 discriminator 1
 1624 0094 0D4A     		ldr	r2, .L214
 1625 0096 9342     		cmp	r3, r2
 1626 0098 11D0     		beq	.L213
 1627              	.L200:
1191:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1628              		.loc 1 1191 0
 1629 009a 9A68     		ldr	r2, [r3, #8]
 1630 009c 42F4A002 		orr	r2, r2, #5242880
 1631 00a0 9A60     		str	r2, [r3, #8]
 1632 00a2 10BD     		pop	{r4, pc}
 1633              	.LVL86:
 1634              	.L211:
1131:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1635              		.loc 1 1131 0 discriminator 1
 1636 00a4 0A4A     		ldr	r2, .L214+4
 1637 00a6 5168     		ldr	r1, [r2, #4]
 1638 00a8 11F4702F 		tst	r1, #983040
 1639 00ac C3D0     		beq	.L192
1146:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1640              		.loc 1 1146 0
 1641 00ae A16A     		ldr	r1, [r4, #40]
 1642 00b0 41F48011 		orr	r1, r1, #1048576
 1643 00b4 A162     		str	r1, [r4, #40]
1150:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1644              		.loc 1 1150 0
 1645 00b6 5268     		ldr	r2, [r2, #4]
 1646 00b8 5205     		lsls	r2, r2, #21
 1647 00ba C9D5     		bpl	.L195
 1648 00bc C2E7     		b	.L209
 1649              	.L213:
1188:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1650              		.loc 1 1188 0 discriminator 2
 1651 00be A2F58062 		sub	r2, r2, #1024
 1652 00c2 5268     		ldr	r2, [r2, #4]
1187:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1653              		.loc 1 1187 0 discriminator 2
 1654 00c4 12F4702F 		tst	r2, #983040
 1655 00c8 DBD1     		bne	.L199
 1656 00ca E6E7     		b	.L200
 1657              	.L215:
 1658              		.align	2
 1659              	.L214:
 1660 00cc 00280140 		.word	1073817600
ARM GAS  /tmp/ccQrq4iZ.s 			page 71


 1661 00d0 00240140 		.word	1073816576
 1662              		.cfi_endproc
 1663              	.LFE72:
 1665              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 1666              		.align	1
 1667              		.p2align 2,,3
 1668              		.global	HAL_ADC_Start_DMA
 1669              		.syntax unified
 1670              		.thumb
 1671              		.thumb_func
 1672              		.fpu softvfp
 1674              	HAL_ADC_Start_DMA:
 1675              	.LFB74:
1274:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1676              		.loc 1 1274 0
 1677              		.cfi_startproc
 1678              		@ args = 0, pretend = 0, frame = 0
 1679              		@ frame_needed = 0, uses_anonymous_args = 0
 1680              	.LVL87:
 1681 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1682              		.cfi_def_cfa_offset 24
 1683              		.cfi_offset 3, -24
 1684              		.cfi_offset 4, -20
 1685              		.cfi_offset 5, -16
 1686              		.cfi_offset 6, -12
 1687              		.cfi_offset 7, -8
 1688              		.cfi_offset 14, -4
1283:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1689              		.loc 1 1283 0
 1690 0002 3F4D     		ldr	r5, .L238
 1691 0004 0468     		ldr	r4, [r0]
 1692 0006 AC42     		cmp	r4, r5
 1693 0008 60D0     		beq	.L217
1283:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1694              		.loc 1 1283 0 is_stmt 0 discriminator 1
 1695 000a 05F58065 		add	r5, r5, #1024
 1696 000e AC42     		cmp	r4, r5
 1697 0010 5CD0     		beq	.L217
 1698              	.L218:
1286:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1699              		.loc 1 1286 0 is_stmt 1
 1700 0012 90F82440 		ldrb	r4, [r0, #36]	@ zero_extendqisi2
 1701 0016 012C     		cmp	r4, #1
 1702 0018 02D1     		bne	.L236
 1703 001a 0225     		movs	r5, #2
1398:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1704              		.loc 1 1398 0
 1705 001c 2846     		mov	r0, r5
 1706              	.LVL88:
 1707 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1708              	.LVL89:
 1709              	.L236:
1286:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1710              		.loc 1 1286 0 discriminator 2
 1711 0020 0123     		movs	r3, #1
 1712 0022 80F82430 		strb	r3, [r0, #36]
 1713 0026 1746     		mov	r7, r2
ARM GAS  /tmp/ccQrq4iZ.s 			page 72


 1714 0028 0E46     		mov	r6, r1
 1715 002a 0446     		mov	r4, r0
1289:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1716              		.loc 1 1289 0 discriminator 2
 1717 002c FFF7FEFF 		bl	ADC_Enable
 1718              	.LVL90:
1292:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1719              		.loc 1 1292 0 discriminator 2
 1720 0030 0546     		mov	r5, r0
 1721 0032 0028     		cmp	r0, #0
 1722 0034 52D1     		bne	.L220
1297:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 1723              		.loc 1 1297 0
 1724 0036 A36A     		ldr	r3, [r4, #40]
1304:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1725              		.loc 1 1304 0
 1726 0038 2168     		ldr	r1, [r4]
1297:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 1727              		.loc 1 1297 0
 1728 003a 23F47063 		bic	r3, r3, #3840
1304:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1729              		.loc 1 1304 0
 1730 003e 314A     		ldr	r2, .L238+4
1297:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 1731              		.loc 1 1297 0
 1732 0040 23F00103 		bic	r3, r3, #1
 1733 0044 43F48073 		orr	r3, r3, #256
1304:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1734              		.loc 1 1304 0
 1735 0048 9142     		cmp	r1, r2
1297:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 1736              		.loc 1 1297 0
 1737 004a A362     		str	r3, [r4, #40]
1304:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1738              		.loc 1 1304 0
 1739 004c 4BD0     		beq	.L237
 1740              	.L221:
1307:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1741              		.loc 1 1307 0
 1742 004e A36A     		ldr	r3, [r4, #40]
 1743 0050 23F48013 		bic	r3, r3, #1048576
 1744 0054 A362     		str	r3, [r4, #40]
1311:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1745              		.loc 1 1311 0
 1746 0056 4B68     		ldr	r3, [r1, #4]
 1747 0058 5A05     		lsls	r2, r3, #21
 1748 005a 05D5     		bpl	.L224
 1749              	.L235:
1325:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1750              		.loc 1 1325 0
 1751 005c A36A     		ldr	r3, [r4, #40]
 1752 005e 23F44053 		bic	r3, r3, #12288
 1753 0062 43F48053 		orr	r3, r3, #4096
 1754 0066 A362     		str	r3, [r4, #40]
 1755              	.L224:
1330:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1756              		.loc 1 1330 0
ARM GAS  /tmp/ccQrq4iZ.s 			page 73


 1757 0068 A36A     		ldr	r3, [r4, #40]
1362:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1758              		.loc 1 1362 0
 1759 006a 6FF00202 		mvn	r2, #2
1330:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1760              		.loc 1 1330 0
 1761 006e 13F48053 		ands	r3, r3, #4096
1333:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1762              		.loc 1 1333 0
 1763 0072 18BF     		it	ne
 1764 0074 E36A     		ldrne	r3, [r4, #44]
1347:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1765              		.loc 1 1347 0
 1766 0076 206A     		ldr	r0, [r4, #32]
 1767              	.LVL91:
1333:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1768              		.loc 1 1333 0
 1769 0078 18BF     		it	ne
 1770 007a 23F00603 		bicne	r3, r3, #6
1338:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1771              		.loc 1 1338 0
 1772 007e E362     		str	r3, [r4, #44]
1344:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1773              		.loc 1 1344 0
 1774 0080 0023     		movs	r3, #0
1347:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1775              		.loc 1 1347 0
 1776 0082 DFF888E0 		ldr	lr, .L238+12
1344:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1777              		.loc 1 1344 0
 1778 0086 84F82430 		strb	r3, [r4, #36]
1347:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1779              		.loc 1 1347 0
 1780 008a C0F828E0 		str	lr, [r0, #40]
1350:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1781              		.loc 1 1350 0
 1782 008e 1E4B     		ldr	r3, .L238+8
1353:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1783              		.loc 1 1353 0
 1784 0090 DFF87CE0 		ldr	lr, .L238+16
1350:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1785              		.loc 1 1350 0
 1786 0094 C362     		str	r3, [r0, #44]
1353:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1787              		.loc 1 1353 0
 1788 0096 C0F830E0 		str	lr, [r0, #48]
1362:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1789              		.loc 1 1362 0
 1790 009a 0A60     		str	r2, [r1]
1368:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1791              		.loc 1 1368 0
 1792 009c 3B46     		mov	r3, r7
1365:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1793              		.loc 1 1365 0
 1794 009e 8F68     		ldr	r7, [r1, #8]
 1795              	.LVL92:
1368:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
ARM GAS  /tmp/ccQrq4iZ.s 			page 74


 1796              		.loc 1 1368 0
 1797 00a0 3246     		mov	r2, r6
1365:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1798              		.loc 1 1365 0
 1799 00a2 47F48077 		orr	r7, r7, #256
 1800 00a6 8F60     		str	r7, [r1, #8]
1368:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1801              		.loc 1 1368 0
 1802 00a8 4C31     		adds	r1, r1, #76
 1803 00aa FFF7FEFF 		bl	HAL_DMA_Start_IT
 1804              	.LVL93:
1374:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1805              		.loc 1 1374 0
 1806 00ae 2268     		ldr	r2, [r4]
1398:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1807              		.loc 1 1398 0
 1808 00b0 2846     		mov	r0, r5
1374:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1809              		.loc 1 1374 0
 1810 00b2 9368     		ldr	r3, [r2, #8]
 1811 00b4 03F46023 		and	r3, r3, #917504
 1812 00b8 B3F5602F 		cmp	r3, #917504
1377:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1813              		.loc 1 1377 0
 1814 00bc 9368     		ldr	r3, [r2, #8]
 1815 00be 0CBF     		ite	eq
 1816 00c0 43F4A003 		orreq	r3, r3, #5242880
1382:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 1817              		.loc 1 1382 0
 1818 00c4 43F48013 		orrne	r3, r3, #1048576
 1819 00c8 9360     		str	r3, [r2, #8]
1398:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1820              		.loc 1 1398 0
 1821 00ca F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1822              	.LVL94:
 1823              	.L217:
1283:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1824              		.loc 1 1283 0 discriminator 3
 1825 00cc 0C4B     		ldr	r3, .L238
 1826 00ce 5B68     		ldr	r3, [r3, #4]
 1827 00d0 13F4702F 		tst	r3, #983040
 1828 00d4 9DD0     		beq	.L218
1393:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 1829              		.loc 1 1393 0
 1830 00d6 0125     		movs	r5, #1
1398:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1831              		.loc 1 1398 0
 1832 00d8 2846     		mov	r0, r5
 1833              	.LVL95:
 1834 00da F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1835              	.LVL96:
 1836              	.L220:
1388:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1837              		.loc 1 1388 0
 1838 00dc 0023     		movs	r3, #0
1398:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1839              		.loc 1 1398 0
ARM GAS  /tmp/ccQrq4iZ.s 			page 75


 1840 00de 2846     		mov	r0, r5
 1841              	.LVL97:
1388:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 1842              		.loc 1 1388 0
 1843 00e0 84F82430 		strb	r3, [r4, #36]
1398:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 1844              		.loc 1 1398 0
 1845 00e4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1846              	.LVL98:
 1847              	.L237:
1304:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1848              		.loc 1 1304 0 discriminator 1
 1849 00e6 064B     		ldr	r3, .L238
 1850 00e8 5A68     		ldr	r2, [r3, #4]
 1851 00ea 12F4702F 		tst	r2, #983040
 1852 00ee AED0     		beq	.L221
1319:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 1853              		.loc 1 1319 0
 1854 00f0 A26A     		ldr	r2, [r4, #40]
 1855 00f2 42F48012 		orr	r2, r2, #1048576
 1856 00f6 A262     		str	r2, [r4, #40]
1323:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1857              		.loc 1 1323 0
 1858 00f8 5B68     		ldr	r3, [r3, #4]
 1859 00fa 5B05     		lsls	r3, r3, #21
 1860 00fc B4D5     		bpl	.L224
 1861 00fe ADE7     		b	.L235
 1862              	.L239:
 1863              		.align	2
 1864              	.L238:
 1865 0100 00240140 		.word	1073816576
 1866 0104 00280140 		.word	1073817600
 1867 0108 00000000 		.word	ADC_DMAHalfConvCplt
 1868 010c 00000000 		.word	ADC_DMAConvCplt
 1869 0110 00000000 		.word	ADC_DMAError
 1870              		.cfi_endproc
 1871              	.LFE74:
 1873              		.section	.text.ADC_ConversionStop_Disable,"ax",%progbits
 1874              		.align	1
 1875              		.p2align 2,,3
 1876              		.global	ADC_ConversionStop_Disable
 1877              		.syntax unified
 1878              		.thumb
 1879              		.thumb_func
 1880              		.fpu softvfp
 1882              	ADC_ConversionStop_Disable:
 1883              	.LFB87:
1990:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   uint32_t tickstart = 0U;
 1884              		.loc 1 1990 0
 1885              		.cfi_startproc
 1886              		@ args = 0, pretend = 0, frame = 0
 1887              		@ frame_needed = 0, uses_anonymous_args = 0
 1888              	.LVL99:
 1889 0000 38B5     		push	{r3, r4, r5, lr}
 1890              		.cfi_def_cfa_offset 16
 1891              		.cfi_offset 3, -16
 1892              		.cfi_offset 4, -12
ARM GAS  /tmp/ccQrq4iZ.s 			page 76


 1893              		.cfi_offset 5, -8
 1894              		.cfi_offset 14, -4
1994:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1895              		.loc 1 1994 0
 1896 0002 0368     		ldr	r3, [r0]
 1897 0004 9A68     		ldr	r2, [r3, #8]
 1898 0006 D207     		lsls	r2, r2, #31
 1899 0008 01D4     		bmi	.L241
 1900              	.LVL100:
 1901              	.L245:
2019:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 1902              		.loc 1 2019 0
 1903 000a 0020     		movs	r0, #0
 1904 000c 38BD     		pop	{r3, r4, r5, pc}
 1905              	.LVL101:
 1906              	.L241:
1997:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****      
 1907              		.loc 1 1997 0
 1908 000e 9A68     		ldr	r2, [r3, #8]
 1909 0010 0446     		mov	r4, r0
 1910 0012 22F00102 		bic	r2, r2, #1
 1911 0016 9A60     		str	r2, [r3, #8]
2000:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 1912              		.loc 1 2000 0
 1913 0018 FFF7FEFF 		bl	HAL_GetTick
 1914              	.LVL102:
 1915 001c 0546     		mov	r5, r0
 1916              	.LVL103:
 1917              	.L243:
2003:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 1918              		.loc 1 2003 0
 1919 001e 2368     		ldr	r3, [r4]
 1920 0020 9B68     		ldr	r3, [r3, #8]
 1921 0022 DB07     		lsls	r3, r3, #31
 1922 0024 F1D5     		bpl	.L245
2005:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 1923              		.loc 1 2005 0
 1924 0026 FFF7FEFF 		bl	HAL_GetTick
 1925              	.LVL104:
 1926 002a 401B     		subs	r0, r0, r5
 1927 002c 0228     		cmp	r0, #2
 1928 002e F6D9     		bls	.L243
 1929              	.LVL105:
 1930              	.LBB8:
 1931              	.LBB9:
2011:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 1932              		.loc 1 2011 0
 1933 0030 0120     		movs	r0, #1
2008:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 1934              		.loc 1 2008 0
 1935 0032 A36A     		ldr	r3, [r4, #40]
 1936 0034 43F01003 		orr	r3, r3, #16
 1937 0038 A362     		str	r3, [r4, #40]
2011:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 1938              		.loc 1 2011 0
 1939 003a E36A     		ldr	r3, [r4, #44]
 1940 003c 0343     		orrs	r3, r3, r0
ARM GAS  /tmp/ccQrq4iZ.s 			page 77


 1941 003e E362     		str	r3, [r4, #44]
 1942              	.LVL106:
 1943 0040 38BD     		pop	{r3, r4, r5, pc}
 1944              	.LBE9:
 1945              	.LBE8:
 1946              		.cfi_endproc
 1947              	.LFE87:
 1949 0042 00BF     		.section	.text.HAL_ADC_Init,"ax",%progbits
 1950              		.align	1
 1951              		.p2align 2,,3
 1952              		.global	HAL_ADC_Init
 1953              		.syntax unified
 1954              		.thumb
 1955              		.thumb_func
 1956              		.fpu softvfp
 1958              	HAL_ADC_Init:
 1959              	.LFB64:
 375:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1960              		.loc 1 375 0
 1961              		.cfi_startproc
 1962              		@ args = 0, pretend = 0, frame = 0
 1963              		@ frame_needed = 0, uses_anonymous_args = 0
 1964              	.LVL107:
 382:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1965              		.loc 1 382 0
 1966 0000 0028     		cmp	r0, #0
 1967 0002 63D0     		beq	.L264
 375:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1968              		.loc 1 375 0
 1969 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1970              		.cfi_def_cfa_offset 24
 1971              		.cfi_offset 3, -24
 1972              		.cfi_offset 4, -20
 1973              		.cfi_offset 5, -16
 1974              		.cfi_offset 6, -12
 1975              		.cfi_offset 7, -8
 1976              		.cfi_offset 14, -4
 411:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 1977              		.loc 1 411 0
 1978 0006 836A     		ldr	r3, [r0, #40]
 1979 0008 0446     		mov	r4, r0
 1980 000a 002B     		cmp	r3, #0
 1981 000c 45D0     		beq	.L285
 1982              	.LVL108:
 1983              	.L250:
 428:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 1984              		.loc 1 428 0
 1985 000e 2046     		mov	r0, r4
 1986 0010 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 1987              	.LVL109:
 433:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (tmp_hal_status == HAL_OK)                                  )
 1988              		.loc 1 433 0
 1989 0014 A36A     		ldr	r3, [r4, #40]
 1990 0016 13F01003 		ands	r3, r3, #16
 1991 001a 38D1     		bne	.L251
 433:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       (tmp_hal_status == HAL_OK)                                  )
 1992              		.loc 1 433 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccQrq4iZ.s 			page 78


 1993 001c 0028     		cmp	r0, #0
 1994 001e 36D1     		bne	.L251
 437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1995              		.loc 1 437 0 is_stmt 1
 1996 0020 A26A     		ldr	r2, [r4, #40]
 453:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CFGR_EXTSEL(hadc, hadc->Init.ExternalTrigConv) |
 1997              		.loc 1 453 0
 1998 0022 6168     		ldr	r1, [r4, #4]
 437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1999              		.loc 1 437 0
 2000 0024 22F48852 		bic	r2, r2, #4352
 453:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CFGR_EXTSEL(hadc, hadc->Init.ExternalTrigConv) |
 2001              		.loc 1 453 0
 2002 0028 E669     		ldr	r6, [r4, #28]
 461:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2003              		.loc 1 461 0
 2004 002a A568     		ldr	r5, [r4, #8]
 437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2005              		.loc 1 437 0
 2006 002c 22F00202 		bic	r2, r2, #2
 455:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2007              		.loc 1 455 0
 2008 0030 E768     		ldr	r7, [r4, #12]
 437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2009              		.loc 1 437 0
 2010 0032 42F00202 		orr	r2, r2, #2
 453:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CFGR_EXTSEL(hadc, hadc->Init.ExternalTrigConv) |
 2011              		.loc 1 453 0
 2012 0036 3143     		orrs	r1, r1, r6
 461:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2013              		.loc 1 461 0
 2014 0038 B5F5807F 		cmp	r5, #256
 437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2015              		.loc 1 437 0
 2016 003c A262     		str	r2, [r4, #40]
 454:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode)   );
 2017              		.loc 1 454 0
 2018 003e 41EA4701 		orr	r1, r1, r7, lsl #1
 2019              	.LVL110:
 461:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2020              		.loc 1 461 0
 2021 0042 30D0     		beq	.L252
 461:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2022              		.loc 1 461 0 is_stmt 0 discriminator 2
 2023 0044 012D     		cmp	r5, #1
 2024 0046 4CD0     		beq	.L286
 466:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 2025              		.loc 1 466 0 is_stmt 1
 2026 0048 6269     		ldr	r2, [r4, #20]
 2027 004a 012A     		cmp	r2, #1
 2028 004c 4FD0     		beq	.L260
 379:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2029              		.loc 1 379 0
 2030 004e 0646     		mov	r6, r0
 489:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_SCAN    |
 2031              		.loc 1 489 0
 2032 0050 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccQrq4iZ.s 			page 79


 496:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_ALIGN   |
 2033              		.loc 1 496 0
 2034 0052 3B4B     		ldr	r3, .L290
 489:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_SCAN    |
 2035              		.loc 1 489 0
 2036 0054 5568     		ldr	r5, [r2, #4]
 2037 0056 25F46945 		bic	r5, r5, #59648
 2038 005a 5560     		str	r5, [r2, #4]
 496:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_ALIGN   |
 2039              		.loc 1 496 0
 2040 005c 9568     		ldr	r5, [r2, #8]
 2041 005e 2B40     		ands	r3, r3, r5
 2042 0060 0B43     		orrs	r3, r3, r1
 2043 0062 9360     		str	r3, [r2, #8]
 2044              	.LVL111:
 2045              	.L258:
 517:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_L          ,
 2046              		.loc 1 517 0
 2047 0064 D36A     		ldr	r3, [r2, #44]
 527:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 2048              		.loc 1 527 0
 2049 0066 374D     		ldr	r5, .L290+4
 517:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                ADC_SQR1_L          ,
 2050              		.loc 1 517 0
 2051 0068 23F47003 		bic	r3, r3, #15728640
 2052 006c 3343     		orrs	r3, r3, r6
 2053 006e D362     		str	r3, [r2, #44]
 527:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                         ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 2054              		.loc 1 527 0
 2055 0070 9368     		ldr	r3, [r2, #8]
 2056 0072 1D40     		ands	r5, r5, r3
 2057 0074 A942     		cmp	r1, r5
 2058 0076 2BD0     		beq	.L287
 551:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 2059              		.loc 1 551 0
 2060 0078 0120     		movs	r0, #1
 2061              	.LVL112:
 544:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 2062              		.loc 1 544 0
 2063 007a A36A     		ldr	r3, [r4, #40]
 2064 007c 23F01203 		bic	r3, r3, #18
 2065 0080 43F01003 		orr	r3, r3, #16
 2066 0084 A362     		str	r3, [r4, #40]
 549:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 2067              		.loc 1 549 0
 2068 0086 E36A     		ldr	r3, [r4, #44]
 2069 0088 0343     		orrs	r3, r3, r0
 2070 008a E362     		str	r3, [r4, #44]
 2071              	.LVL113:
 2072 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2073              	.LVL114:
 2074              	.L251:
 558:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 2075              		.loc 1 558 0
 2076 008e A36A     		ldr	r3, [r4, #40]
 560:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 2077              		.loc 1 560 0
ARM GAS  /tmp/ccQrq4iZ.s 			page 80


 2078 0090 0120     		movs	r0, #1
 2079              	.LVL115:
 558:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 2080              		.loc 1 558 0
 2081 0092 43F01003 		orr	r3, r3, #16
 2082 0096 A362     		str	r3, [r4, #40]
 2083              	.LVL116:
 2084 0098 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2085              	.LVL117:
 2086              	.L285:
 414:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2087              		.loc 1 414 0
 2088 009a C362     		str	r3, [r0, #44]
 417:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2089              		.loc 1 417 0
 2090 009c 80F82430 		strb	r3, [r0, #36]
 420:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 2091              		.loc 1 420 0
 2092 00a0 FFF7FEFF 		bl	HAL_ADC_MspInit
 2093              	.LVL118:
 2094 00a4 B3E7     		b	.L250
 2095              	.LVL119:
 2096              	.L252:
 466:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 2097              		.loc 1 466 0
 2098 00a6 6369     		ldr	r3, [r4, #20]
 2099 00a8 012B     		cmp	r3, #1
 2100 00aa 45D0     		beq	.L288
 2101              	.L278:
 489:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_SCAN    |
 2102              		.loc 1 489 0
 2103 00ac 2268     		ldr	r2, [r4]
 496:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_ALIGN   |
 2104              		.loc 1 496 0
 2105 00ae 244B     		ldr	r3, .L290
 489:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_SCAN    |
 2106              		.loc 1 489 0
 2107 00b0 5568     		ldr	r5, [r2, #4]
 2108 00b2 25F46945 		bic	r5, r5, #59648
 2109 00b6 45F48075 		orr	r5, r5, #256
 2110 00ba 5560     		str	r5, [r2, #4]
 496:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_ALIGN   |
 2111              		.loc 1 496 0
 2112 00bc 9568     		ldr	r5, [r2, #8]
 2113 00be 2B40     		ands	r3, r3, r5
 2114 00c0 0B43     		orrs	r3, r3, r1
 2115 00c2 9360     		str	r3, [r2, #8]
 2116              	.LVL120:
 2117              	.L257:
 514:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 2118              		.loc 1 514 0
 2119 00c4 2369     		ldr	r3, [r4, #16]
 2120 00c6 013B     		subs	r3, r3, #1
 2121 00c8 1E05     		lsls	r6, r3, #20
 2122              	.LVL121:
 2123 00ca CBE7     		b	.L258
 2124              	.LVL122:
ARM GAS  /tmp/ccQrq4iZ.s 			page 81


 2125              	.L264:
 2126              		.cfi_def_cfa_offset 0
 2127              		.cfi_restore 3
 2128              		.cfi_restore 4
 2129              		.cfi_restore 5
 2130              		.cfi_restore 6
 2131              		.cfi_restore 7
 2132              		.cfi_restore 14
 384:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 2133              		.loc 1 384 0
 2134 00cc 0120     		movs	r0, #1
 2135              	.LVL123:
 2136 00ce 7047     		bx	lr
 2137              	.LVL124:
 2138              	.L287:
 2139              		.cfi_def_cfa_offset 24
 2140              		.cfi_offset 3, -24
 2141              		.cfi_offset 4, -20
 2142              		.cfi_offset 5, -16
 2143              		.cfi_offset 6, -12
 2144              		.cfi_offset 7, -8
 2145              		.cfi_offset 14, -4
 534:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       
 2146              		.loc 1 534 0
 2147 00d0 0023     		movs	r3, #0
 2148 00d2 E362     		str	r3, [r4, #44]
 537:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 2149              		.loc 1 537 0
 2150 00d4 A36A     		ldr	r3, [r4, #40]
 2151 00d6 23F00303 		bic	r3, r3, #3
 2152 00da 43F00103 		orr	r3, r3, #1
 2153 00de A362     		str	r3, [r4, #40]
 2154 00e0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2155              	.LVL125:
 2156              	.L286:
 466:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 2157              		.loc 1 466 0
 2158 00e2 6369     		ldr	r3, [r4, #20]
 2159 00e4 012B     		cmp	r3, #1
 461:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2160              		.loc 1 461 0
 2161 00e6 08BF     		it	eq
 2162 00e8 4FF48073 		moveq	r3, #256
 466:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 2163              		.loc 1 466 0
 2164 00ec DED1     		bne	.L278
 2165              	.LVL126:
 2166              	.L260:
 468:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
 2167              		.loc 1 468 0
 2168 00ee E7B1     		cbz	r7, .L289
 2169              	.L255:
 481:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****         
 2170              		.loc 1 481 0
 2171 00f0 A26A     		ldr	r2, [r4, #40]
 2172 00f2 42F02002 		orr	r2, r2, #32
 2173 00f6 A262     		str	r2, [r4, #40]
ARM GAS  /tmp/ccQrq4iZ.s 			page 82


 484:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       }
 2174              		.loc 1 484 0
 2175 00f8 E26A     		ldr	r2, [r4, #44]
 2176 00fa 42F00102 		orr	r2, r2, #1
 2177 00fe E262     		str	r2, [r4, #44]
 2178              	.L256:
 2179              	.LVL127:
 489:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_SCAN    |
 2180              		.loc 1 489 0
 2181 0100 2268     		ldr	r2, [r4]
 496:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_ALIGN   |
 2182              		.loc 1 496 0
 2183 0102 0F4E     		ldr	r6, .L290
 489:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_SCAN    |
 2184              		.loc 1 489 0
 2185 0104 5768     		ldr	r7, [r2, #4]
 512:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 2186              		.loc 1 512 0
 2187 0106 B5F5807F 		cmp	r5, #256
 489:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR1_SCAN    |
 2188              		.loc 1 489 0
 2189 010a 27F46947 		bic	r7, r7, #59648
 2190 010e 43EA0703 		orr	r3, r3, r7
 2191              	.LVL128:
 2192 0112 5360     		str	r3, [r2, #4]
 496:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                  ADC_CR2_ALIGN   |
 2193              		.loc 1 496 0
 2194 0114 9368     		ldr	r3, [r2, #8]
 2195 0116 06EA0306 		and	r6, r6, r3
 2196 011a 46EA0106 		orr	r6, r6, r1
 2197 011e 9660     		str	r6, [r2, #8]
 512:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 2198              		.loc 1 512 0
 2199 0120 D0D0     		beq	.L257
 512:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 2200              		.loc 1 512 0 is_stmt 0 discriminator 1
 2201 0122 012D     		cmp	r5, #1
 2202 0124 CED0     		beq	.L257
 379:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2203              		.loc 1 379 0 is_stmt 1
 2204 0126 0026     		movs	r6, #0
 2205 0128 9CE7     		b	.L258
 2206              	.L289:
 472:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                          ADC_CR1_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion)  );
 2207              		.loc 1 472 0
 2208 012a A269     		ldr	r2, [r4, #24]
 2209 012c 013A     		subs	r2, r2, #1
 2210 012e 43EA4233 		orr	r3, r3, r2, lsl #13
 2211 0132 43F40063 		orr	r3, r3, #2048
 2212              	.LVL129:
 2213 0136 E3E7     		b	.L256
 2214              	.LVL130:
 2215              	.L288:
 461:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2216              		.loc 1 461 0
 2217 0138 2B46     		mov	r3, r5
 468:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****       {
ARM GAS  /tmp/ccQrq4iZ.s 			page 83


 2218              		.loc 1 468 0
 2219 013a 002F     		cmp	r7, #0
 2220 013c D8D1     		bne	.L255
 2221 013e F4E7     		b	.L289
 2222              	.L291:
 2223              		.align	2
 2224              	.L290:
 2225 0140 FDF7E1FF 		.word	-1968131
 2226 0144 FE0E1FFF 		.word	-14741762
 2227              		.cfi_endproc
 2228              	.LFE64:
 2230              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 2231              		.align	1
 2232              		.p2align 2,,3
 2233              		.global	HAL_ADC_DeInit
 2234              		.syntax unified
 2235              		.thumb
 2236              		.thumb_func
 2237              		.fpu softvfp
 2239              	HAL_ADC_DeInit:
 2240              	.LFB65:
 576:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2241              		.loc 1 576 0
 2242              		.cfi_startproc
 2243              		@ args = 0, pretend = 0, frame = 0
 2244              		@ frame_needed = 0, uses_anonymous_args = 0
 2245              	.LVL131:
 2246 0000 70B5     		push	{r4, r5, r6, lr}
 2247              		.cfi_def_cfa_offset 16
 2248              		.cfi_offset 4, -16
 2249              		.cfi_offset 5, -12
 2250              		.cfi_offset 6, -8
 2251              		.cfi_offset 14, -4
 580:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 2252              		.loc 1 580 0
 2253 0002 0028     		cmp	r0, #0
 2254 0004 51D0     		beq	.L295
 589:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2255              		.loc 1 589 0
 2256 0006 836A     		ldr	r3, [r0, #40]
 2257 0008 0446     		mov	r4, r0
 2258 000a 43F00203 		orr	r3, r3, #2
 2259 000e 8362     		str	r3, [r0, #40]
 593:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2260              		.loc 1 593 0
 2261 0010 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 2262              	.LVL132:
 598:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 2263              		.loc 1 598 0
 2264 0014 0546     		mov	r5, r0
 2265 0016 20B1     		cbz	r0, .L297
 2266              	.LVL133:
 2267              	.L294:
 702:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2268              		.loc 1 702 0
 2269 0018 0023     		movs	r3, #0
 706:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
ARM GAS  /tmp/ccQrq4iZ.s 			page 84


 2270              		.loc 1 706 0
 2271 001a 2846     		mov	r0, r5
 702:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2272              		.loc 1 702 0
 2273 001c 84F82430 		strb	r3, [r4, #36]
 706:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2274              		.loc 1 706 0
 2275 0020 70BD     		pop	{r4, r5, r6, pc}
 2276              	.LVL134:
 2277              	.L297:
 606:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                 ADC_FLAG_JSTRT | ADC_FLAG_STRT));
 2278              		.loc 1 606 0
 2279 0022 6FF01F01 		mvn	r1, #31
 2280 0026 2368     		ldr	r3, [r4]
 610:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_JDISCEN | ADC_CR1_DISCEN | ADC_CR1_JAUTO   | 
 2281              		.loc 1 610 0
 2282 0028 214A     		ldr	r2, .L298
 606:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                 ADC_FLAG_JSTRT | ADC_FLAG_STRT));
 2283              		.loc 1 606 0
 2284 002a 1960     		str	r1, [r3]
 610:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_JDISCEN | ADC_CR1_DISCEN | ADC_CR1_JAUTO   | 
 2285              		.loc 1 610 0
 2286 002c 5868     		ldr	r0, [r3, #4]
 2287              	.LVL135:
 616:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL  | ADC_CR2_JEXTTRIG |  
 2288              		.loc 1 616 0
 2289 002e 2149     		ldr	r1, .L298+4
 610:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR1_JDISCEN | ADC_CR1_DISCEN | ADC_CR1_JAUTO   | 
 2290              		.loc 1 610 0
 2291 0030 0240     		ands	r2, r2, r0
 2292 0032 5A60     		str	r2, [r3, #4]
 616:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL  | ADC_CR2_JEXTTRIG |  
 2293              		.loc 1 616 0
 2294 0034 9868     		ldr	r0, [r3, #8]
 634:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR2 */
 2295              		.loc 1 634 0
 2296 0036 204A     		ldr	r2, .L298+8
 616:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL  | ADC_CR2_JEXTTRIG |  
 2297              		.loc 1 616 0
 2298 0038 0140     		ands	r1, r1, r0
 2299 003a 9960     		str	r1, [r3, #8]
 623:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR1_SMP14 | ADC_SMPR1_SMP13 | ADC_SMPR1_SMP12 | 
 2300              		.loc 1 623 0
 2301 003c D968     		ldr	r1, [r3, #12]
 666:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 2302              		.loc 1 666 0
 2303 003e 1F4E     		ldr	r6, .L298+12
 623:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR1_SMP14 | ADC_SMPR1_SMP13 | ADC_SMPR1_SMP12 | 
 2304              		.loc 1 623 0
 2305 0040 01F07F41 		and	r1, r1, #-16777216
 2306 0044 D960     		str	r1, [r3, #12]
 628:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR2_SMP6 | ADC_SMPR2_SMP5 | ADC_SMPR2_SMP4 | 
 2307              		.loc 1 628 0
 2308 0046 1969     		ldr	r1, [r3, #16]
 691:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2309              		.loc 1 691 0
 2310 0048 2046     		mov	r0, r4
ARM GAS  /tmp/ccQrq4iZ.s 			page 85


 628:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                       ADC_SMPR2_SMP6 | ADC_SMPR2_SMP5 | ADC_SMPR2_SMP4 | 
 2311              		.loc 1 628 0
 2312 004a 01F04041 		and	r1, r1, #-1073741824
 2313 004e 1961     		str	r1, [r3, #16]
 634:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR2 */
 2314              		.loc 1 634 0
 2315 0050 5969     		ldr	r1, [r3, #20]
 2316 0052 1140     		ands	r1, r1, r2
 2317 0054 5961     		str	r1, [r3, #20]
 636:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR3 */
 2318              		.loc 1 636 0
 2319 0056 9969     		ldr	r1, [r3, #24]
 2320 0058 1140     		ands	r1, r1, r2
 2321 005a 9961     		str	r1, [r3, #24]
 638:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register JOFR4 */
 2322              		.loc 1 638 0
 2323 005c D969     		ldr	r1, [r3, #28]
 2324 005e 1140     		ands	r1, r1, r2
 2325 0060 D961     		str	r1, [r3, #28]
 640:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2326              		.loc 1 640 0
 2327 0062 196A     		ldr	r1, [r3, #32]
 2328 0064 1140     		ands	r1, r1, r2
 2329 0066 1962     		str	r1, [r3, #32]
 643:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     /* Reset register LTR */
 2330              		.loc 1 643 0
 2331 0068 596A     		ldr	r1, [r3, #36]
 2332 006a 1140     		ands	r1, r1, r2
 2333 006c 5962     		str	r1, [r3, #36]
 645:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2334              		.loc 1 645 0
 2335 006e 996A     		ldr	r1, [r3, #40]
 2336 0070 0A40     		ands	r2, r2, r1
 2337 0072 9A62     		str	r2, [r3, #40]
 648:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
 2338              		.loc 1 648 0
 2339 0074 DA6A     		ldr	r2, [r3, #44]
 2340 0076 02F07F42 		and	r2, r2, #-16777216
 2341 007a DA62     		str	r2, [r3, #44]
 653:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
 2342              		.loc 1 653 0
 2343 007c D96A     		ldr	r1, [r3, #44]
 2344 007e 01F07F41 		and	r1, r1, #-16777216
 2345 0082 D962     		str	r1, [r3, #44]
 658:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR2_SQ9  | ADC_SQR2_SQ8  | ADC_SQR2_SQ7   );
 2346              		.loc 1 658 0
 2347 0084 196B     		ldr	r1, [r3, #48]
 2348 0086 01F04041 		and	r1, r1, #-1073741824
 2349 008a 1963     		str	r1, [r3, #48]
 662:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_SQR3_SQ3 | ADC_SQR3_SQ2 | ADC_SQR3_SQ1  );
 2350              		.loc 1 662 0
 2351 008c 596B     		ldr	r1, [r3, #52]
 2352 008e 01F04041 		and	r1, r1, #-1073741824
 2353 0092 5963     		str	r1, [r3, #52]
 666:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 2354              		.loc 1 666 0
 2355 0094 996B     		ldr	r1, [r3, #56]
ARM GAS  /tmp/ccQrq4iZ.s 			page 86


 2356 0096 3140     		ands	r1, r1, r6
 2357 0098 9963     		str	r1, [r3, #56]
 671:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
 2358              		.loc 1 671 0
 2359 009a 9A6B     		ldr	r2, [r3, #56]
 2360 009c 3240     		ands	r2, r2, r6
 2361 009e 9A63     		str	r2, [r3, #56]
 691:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2362              		.loc 1 691 0
 2363 00a0 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 2364              	.LVL136:
 694:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2365              		.loc 1 694 0
 2366 00a4 E562     		str	r5, [r4, #44]
 697:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2367              		.loc 1 697 0
 2368 00a6 A562     		str	r5, [r4, #40]
 2369 00a8 B6E7     		b	.L294
 2370              	.LVL137:
 2371              	.L295:
 582:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   }
 2372              		.loc 1 582 0
 2373 00aa 0125     		movs	r5, #1
 706:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** 
 2374              		.loc 1 706 0
 2375 00ac 2846     		mov	r0, r5
 2376              	.LVL138:
 2377 00ae 70BD     		pop	{r4, r5, r6, pc}
 2378              	.L299:
 2379              		.align	2
 2380              	.L298:
 2381 00b0 00003FFF 		.word	-12648448
 2382 00b4 F00601FF 		.word	-16709904
 2383 00b8 00F0FFFF 		.word	-4096
 2384 00bc 0000C0FF 		.word	-4194304
 2385              		.cfi_endproc
 2386              	.LFE65:
 2388              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 2389              		.align	1
 2390              		.p2align 2,,3
 2391              		.global	HAL_ADC_Stop
 2392              		.syntax unified
 2393              		.thumb
 2394              		.thumb_func
 2395              		.fpu softvfp
 2397              	HAL_ADC_Stop:
 2398              	.LFB69:
 882:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2399              		.loc 1 882 0
 2400              		.cfi_startproc
 2401              		@ args = 0, pretend = 0, frame = 0
 2402              		@ frame_needed = 0, uses_anonymous_args = 0
 2403              	.LVL139:
 889:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2404              		.loc 1 889 0
 2405 0000 90F82420 		ldrb	r2, [r0, #36]	@ zero_extendqisi2
 2406 0004 012A     		cmp	r2, #1
ARM GAS  /tmp/ccQrq4iZ.s 			page 87


 2407 0006 01D1     		bne	.L308
 2408 0008 0220     		movs	r0, #2
 2409              	.LVL140:
 2410 000a 7047     		bx	lr
 2411              	.LVL141:
 2412              	.L308:
 889:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2413              		.loc 1 889 0 is_stmt 0 discriminator 2
 2414 000c 0123     		movs	r3, #1
 882:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2415              		.loc 1 882 0 is_stmt 1 discriminator 2
 2416 000e 10B5     		push	{r4, lr}
 2417              		.cfi_def_cfa_offset 8
 2418              		.cfi_offset 4, -8
 2419              		.cfi_offset 14, -4
 889:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2420              		.loc 1 889 0 discriminator 2
 2421 0010 80F82430 		strb	r3, [r0, #36]
 2422 0014 0446     		mov	r4, r0
 893:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2423              		.loc 1 893 0 discriminator 2
 2424 0016 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 2425              	.LVL142:
 896:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 2426              		.loc 1 896 0 discriminator 2
 2427 001a 38B9     		cbnz	r0, .L302
 899:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2428              		.loc 1 899 0
 2429 001c A36A     		ldr	r3, [r4, #40]
 2430 001e 23F48853 		bic	r3, r3, #4352
 2431 0022 23F00103 		bic	r3, r3, #1
 2432 0026 43F00103 		orr	r3, r3, #1
 2433 002a A362     		str	r3, [r4, #40]
 2434              	.L302:
 905:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2435              		.loc 1 905 0
 2436 002c 0023     		movs	r3, #0
 2437 002e 84F82430 		strb	r3, [r4, #36]
 908:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 2438              		.loc 1 908 0
 2439 0032 10BD     		pop	{r4, pc}
 2440              		.cfi_endproc
 2441              	.LFE69:
 2443              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 2444              		.align	1
 2445              		.p2align 2,,3
 2446              		.global	HAL_ADC_Stop_IT
 2447              		.syntax unified
 2448              		.thumb
 2449              		.thumb_func
 2450              		.fpu softvfp
 2452              	HAL_ADC_Stop_IT:
 2453              	.LFB73:
1217:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2454              		.loc 1 1217 0
 2455              		.cfi_startproc
 2456              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccQrq4iZ.s 			page 88


 2457              		@ frame_needed = 0, uses_anonymous_args = 0
 2458              	.LVL143:
1224:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2459              		.loc 1 1224 0
 2460 0000 90F82420 		ldrb	r2, [r0, #36]	@ zero_extendqisi2
 2461 0004 012A     		cmp	r2, #1
 2462 0006 01D1     		bne	.L317
 2463 0008 0220     		movs	r0, #2
 2464              	.LVL144:
 2465 000a 7047     		bx	lr
 2466              	.LVL145:
 2467              	.L317:
1224:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2468              		.loc 1 1224 0 is_stmt 0 discriminator 2
 2469 000c 0123     		movs	r3, #1
1217:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2470              		.loc 1 1217 0 is_stmt 1 discriminator 2
 2471 000e 10B5     		push	{r4, lr}
 2472              		.cfi_def_cfa_offset 8
 2473              		.cfi_offset 4, -8
 2474              		.cfi_offset 14, -4
1224:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2475              		.loc 1 1224 0 discriminator 2
 2476 0010 80F82430 		strb	r3, [r0, #36]
 2477 0014 0446     		mov	r4, r0
1228:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2478              		.loc 1 1228 0 discriminator 2
 2479 0016 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 2480              	.LVL146:
1231:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 2481              		.loc 1 1231 0 discriminator 2
 2482 001a 60B9     		cbnz	r0, .L311
1234:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2483              		.loc 1 1234 0
 2484 001c 2268     		ldr	r2, [r4]
 2485 001e 5368     		ldr	r3, [r2, #4]
 2486 0020 23F02003 		bic	r3, r3, #32
 2487 0024 5360     		str	r3, [r2, #4]
1237:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2488              		.loc 1 1237 0
 2489 0026 A36A     		ldr	r3, [r4, #40]
 2490 0028 23F48853 		bic	r3, r3, #4352
 2491 002c 23F00103 		bic	r3, r3, #1
 2492 0030 43F00103 		orr	r3, r3, #1
 2493 0034 A362     		str	r3, [r4, #40]
 2494              	.L311:
1243:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2495              		.loc 1 1243 0
 2496 0036 0023     		movs	r3, #0
 2497 0038 84F82430 		strb	r3, [r4, #36]
1246:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 2498              		.loc 1 1246 0
 2499 003c 10BD     		pop	{r4, pc}
 2500              		.cfi_endproc
 2501              	.LFE73:
 2503 003e 00BF     		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 2504              		.align	1
ARM GAS  /tmp/ccQrq4iZ.s 			page 89


 2505              		.p2align 2,,3
 2506              		.global	HAL_ADC_Stop_DMA
 2507              		.syntax unified
 2508              		.thumb
 2509              		.thumb_func
 2510              		.fpu softvfp
 2512              	HAL_ADC_Stop_DMA:
 2513              	.LFB75:
1415:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2514              		.loc 1 1415 0
 2515              		.cfi_startproc
 2516              		@ args = 0, pretend = 0, frame = 0
 2517              		@ frame_needed = 0, uses_anonymous_args = 0
 2518              	.LVL147:
1422:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2519              		.loc 1 1422 0
 2520 0000 90F82420 		ldrb	r2, [r0, #36]	@ zero_extendqisi2
 2521 0004 012A     		cmp	r2, #1
 2522 0006 01D1     		bne	.L327
 2523 0008 0220     		movs	r0, #2
 2524              	.LVL148:
 2525 000a 7047     		bx	lr
 2526              	.LVL149:
 2527              	.L327:
1422:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2528              		.loc 1 1422 0 is_stmt 0 discriminator 2
 2529 000c 0123     		movs	r3, #1
1415:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2530              		.loc 1 1415 0 is_stmt 1 discriminator 2
 2531 000e 10B5     		push	{r4, lr}
 2532              		.cfi_def_cfa_offset 8
 2533              		.cfi_offset 4, -8
 2534              		.cfi_offset 14, -4
1422:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2535              		.loc 1 1422 0 discriminator 2
 2536 0010 80F82430 		strb	r3, [r0, #36]
 2537 0014 0446     		mov	r4, r0
1426:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   
 2538              		.loc 1 1426 0 discriminator 2
 2539 0016 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 2540              	.LVL150:
1429:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****   {
 2541              		.loc 1 1429 0 discriminator 2
 2542 001a 18B1     		cbz	r0, .L328
 2543              	.L320:
1454:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2544              		.loc 1 1454 0
 2545 001c 0023     		movs	r3, #0
 2546 001e 84F82430 		strb	r3, [r4, #36]
1457:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c **** }
 2547              		.loc 1 1457 0
 2548 0022 10BD     		pop	{r4, pc}
 2549              	.LVL151:
 2550              	.L328:
1432:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2551              		.loc 1 1432 0
 2552 0024 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccQrq4iZ.s 			page 90


1436:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2553              		.loc 1 1436 0
 2554 0026 206A     		ldr	r0, [r4, #32]
 2555              	.LVL152:
1432:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2556              		.loc 1 1432 0
 2557 0028 9368     		ldr	r3, [r2, #8]
 2558 002a 23F48073 		bic	r3, r3, #256
 2559 002e 9360     		str	r3, [r2, #8]
1436:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     
 2560              		.loc 1 1436 0
 2561 0030 FFF7FEFF 		bl	HAL_DMA_Abort
 2562              	.LVL153:
1442:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2563              		.loc 1 1442 0
 2564 0034 A36A     		ldr	r3, [r4, #40]
1439:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     {
 2565              		.loc 1 1439 0
 2566 0036 38B9     		cbnz	r0, .L321
1442:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2567              		.loc 1 1442 0
 2568 0038 23F48853 		bic	r3, r3, #4352
 2569 003c 23F00103 		bic	r3, r3, #1
 2570 0040 43F00103 		orr	r3, r3, #1
 2571 0044 A362     		str	r3, [r4, #40]
 2572 0046 E9E7     		b	.L320
 2573              	.L321:
1449:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc.c ****     }
 2574              		.loc 1 1449 0
 2575 0048 43F04003 		orr	r3, r3, #64
 2576 004c A362     		str	r3, [r4, #40]
 2577 004e E5E7     		b	.L320
 2578              		.cfi_endproc
 2579              	.LFE75:
 2581              		.text
 2582              	.Letext0:
 2583              		.file 2 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.
 2584              		.file 3 "drivers/CMSIS/Include/core_cm3.h"
 2585              		.file 4 "drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2586              		.file 5 "drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2587              		.file 6 "drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2588              		.file 7 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/
 2589              		.file 8 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/
 2590              		.file 9 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.
 2591              		.file 10 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys
 2592              		.file 11 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2593              		.file 12 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2594              		.file 13 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2595              		.file 14 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
 2596              		.file 15 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2597              		.file 16 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
ARM GAS  /tmp/ccQrq4iZ.s 			page 91


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_adc.c
     /tmp/ccQrq4iZ.s:16     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccQrq4iZ.s:24     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccQrq4iZ.s:35     .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccQrq4iZ.s:43     .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccQrq4iZ.s:54     .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccQrq4iZ.s:62     .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccQrq4iZ.s:319    .text.HAL_ADC_PollForConversion:0000000000000140 $d
     /tmp/ccQrq4iZ.s:327    .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccQrq4iZ.s:335    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccQrq4iZ.s:411    .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccQrq4iZ.s:419    .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccQrq4iZ.s:437    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccQrq4iZ.s:445    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccQrq4iZ.s:456    .text.ADC_DMAConvCplt:0000000000000000 $t
     /tmp/ccQrq4iZ.s:464    .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccQrq4iZ.s:536    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccQrq4iZ.s:544    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccQrq4iZ.s:555    .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccQrq4iZ.s:563    .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccQrq4iZ.s:585    .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccQrq4iZ.s:593    .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccQrq4iZ.s:604    .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccQrq4iZ.s:612    .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccQrq4iZ.s:786    .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccQrq4iZ.s:794    .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccQrq4iZ.s:807    .text.ADC_DMAError:0000000000000000 $t
     /tmp/ccQrq4iZ.s:815    .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccQrq4iZ.s:850    .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccQrq4iZ.s:858    .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccQrq4iZ.s:1072   .text.HAL_ADC_ConfigChannel:0000000000000114 $d
     /tmp/ccQrq4iZ.s:1079   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccQrq4iZ.s:1087   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccQrq4iZ.s:1167   .text.HAL_ADC_AnalogWDGConfig:0000000000000050 $d
     /tmp/ccQrq4iZ.s:1172   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccQrq4iZ.s:1180   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccQrq4iZ.s:1197   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccQrq4iZ.s:1205   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/ccQrq4iZ.s:1222   .text.ADC_Enable:0000000000000000 $t
     /tmp/ccQrq4iZ.s:1230   .text.ADC_Enable:0000000000000000 ADC_Enable
     /tmp/ccQrq4iZ.s:1348   .text.ADC_Enable:0000000000000074 $d
     /tmp/ccQrq4iZ.s:1354   .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccQrq4iZ.s:1362   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccQrq4iZ.s:1502   .text.HAL_ADC_Start:00000000000000c4 $d
     /tmp/ccQrq4iZ.s:1508   .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccQrq4iZ.s:1516   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccQrq4iZ.s:1660   .text.HAL_ADC_Start_IT:00000000000000cc $d
     /tmp/ccQrq4iZ.s:1666   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccQrq4iZ.s:1674   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccQrq4iZ.s:1865   .text.HAL_ADC_Start_DMA:0000000000000100 $d
     /tmp/ccQrq4iZ.s:1874   .text.ADC_ConversionStop_Disable:0000000000000000 $t
     /tmp/ccQrq4iZ.s:1882   .text.ADC_ConversionStop_Disable:0000000000000000 ADC_ConversionStop_Disable
     /tmp/ccQrq4iZ.s:1950   .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccQrq4iZ.s:1958   .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccQrq4iZ.s:2225   .text.HAL_ADC_Init:0000000000000140 $d
     /tmp/ccQrq4iZ.s:2231   .text.HAL_ADC_DeInit:0000000000000000 $t
ARM GAS  /tmp/ccQrq4iZ.s 			page 92


     /tmp/ccQrq4iZ.s:2239   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccQrq4iZ.s:2381   .text.HAL_ADC_DeInit:00000000000000b0 $d
     /tmp/ccQrq4iZ.s:2389   .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccQrq4iZ.s:2397   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccQrq4iZ.s:2444   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccQrq4iZ.s:2452   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccQrq4iZ.s:2504   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccQrq4iZ.s:2512   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.04924adcfdc7a6cf00118bdef9d1ce8d
                           .group:0000000000000000 wm4.main.h.40.6fe808b6568aa38f66585b648d7167ef
                           .group:0000000000000000 wm4.stm32f1xx_hal_conf.h.52.96cb61986c8bfeb3a4fa629a7a7441f6
                           .group:0000000000000000 wm4.stm32f1xx.h.57.c2a10934f4c6830aeb7e4997f02806f1
                           .group:0000000000000000 wm4.stm32f103xb.h.56.66305a77cea9d5300aac997a78930076
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.core_cm3.h.74.7d5fecd6d4522d755d10a23d1542f805
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.67d2dcde6a14ff518eedc1d545d89a76
                           .group:0000000000000000 wm4.core_cm3.h.175.a6c441adf1a05ce96eea3cf78e6687ab
                           .group:0000000000000000 wm4.stm32f103xb.h.619.382b3c85cac6f0350ee5bfaff32e1ebc
                           .group:0000000000000000 wm4.stm32f1xx.h.180.c0013e6ebd6ad07f67c298190b8eac92
                           .group:0000000000000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:0000000000000000 wm4.newlib.h.21.59901f4bf241ab46c63694665baa7297
                           .group:0000000000000000 wm4.features.h.22.5cdadbb3efe495d1c9e38350b8c376c7
                           .group:0000000000000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:0000000000000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.e658329a094974ebad41b40c60502de7
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:0000000000000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.30.bbece7fa40993a78092dcc5805132560
                           .group:0000000000000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.8188691c2279eac7a223caa50f6694b9
                           .group:0000000000000000 wm4.stm32f1xx_hal_def.h.77.f54bfbbe3e3696aae97b05a3f338caf7
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.112.09261d6ad0eef5abae6b9147d0cf5cbf
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc_ex.h.40.bb785d717afc4d2d2b63a3608cb5a0c5
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.1219.902328474751456408f7d18f6caace93
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.40.f1cf5d2dd589e1675a9fcd6b008c2bb6
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio_ex.h.40.30d74584c89dcd3d86d10bdbbb06cc31
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.281.b26a95114b989e6edaf48d72c8710b9d
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.40.b1d5b41c58b583c31c61335e4c8e1bdd
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma_ex.h.40.7ac05bbf95f5a25a3f4a9b9c2a14f835
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.427.daddf65c60854feb2dc9660a62f55b8c
                           .group:0000000000000000 wm4.stm32f1xx_hal_cortex.h.40.4f649a8bf316b7aa5d02077abd9b8999
ARM GAS  /tmp/ccQrq4iZ.s 			page 93


                           .group:0000000000000000 wm4.stm32f1xx_hal_adc.h.40.3ad40e622f0cef64228eb182e4bbe00f
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc_ex.h.40.3118796521817cc82626257e9c7ab79c
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash.h.40.12aaef98e1fbb85e3a8f79f98532d04a
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash_ex.h.40.ad66c77e153bc5a4a1d60e46727f4ae5
                           .group:0000000000000000 wm4.stm32f1xx_hal_pwr.h.40.ecccf9071314b0ab3f6ffcfd7c596e95
                           .group:0000000000000000 wm4.stm32f1xx_hal_spi.h.40.5dd367ee94b0bb430a3842862fe7d7da
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim.h.40.ac3feb225ff72b119eeddfe8acac07a3
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim_ex.h.40.9b926a51c24898708ad2e47fd5ff9d32
                           .group:0000000000000000 wm4.stm32f1xx_hal_uart.h.40.9914ca79b81d8b23b4e5425c156b0acd
                           .group:0000000000000000 wm4.stm32f1xx_hal.h.82.f2fd9c01c6f8c9e676a37d84eb9dc553

UNDEFINED SYMBOLS
HAL_GetTick
HAL_RCCEx_GetPeriphCLKFreq
SystemCoreClock
HAL_ADCEx_InjectedConvCpltCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
