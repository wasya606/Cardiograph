ARM GAS  /tmp/cc4VD8cB.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_cortex.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	HAL_NVIC_SetPriorityGrouping
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_NVIC_SetPriorityGrouping:
  25              	.LFB64:
  26              		.file 1 "drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c"
   1:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
   2:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ******************************************************************************
   3:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @file    stm32f1xx_hal_cortex.c
   4:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @author  MCD Application Team
   5:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @version V1.1.1
   6:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @date    12-May-2017
   7:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   8:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following 
   9:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *          functionalities of the CORTEX:
  10:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *           + Initialization and de-initialization functions
  11:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *           + Peripheral Control functions 
  12:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *
  13:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   @verbatim  
  14:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ==============================================================================
  15:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                         ##### How to use this driver #####
  16:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ==============================================================================
  17:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
  18:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     [..]  
  19:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  20:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     ===========================================================
  21:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     [..]     
  22:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  23:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     The Cortex-M3 exceptions are managed by CMSIS functions.
  24:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****    
  25:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping()
  26:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         function according to the following table.
  27:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority(). 
  28:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  29:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     (#) please refer to programming manual for details in how to configure priority. 
  30:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****       
  31:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ preemption is no more possible. 
  32:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
ARM GAS  /tmp/cc4VD8cB.s 			page 2


  33:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****    
  34:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  35:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (+@) Lowest preemption priority
  36:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (+@) Lowest sub priority
  37:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  38:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****  
  39:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     [..]  
  40:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     *** How to configure Systick using CORTEX HAL driver ***
  41:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     ========================================================
  42:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     [..]
  43:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  44:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****            
  45:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config()function calls the SysTick_Config() function which
  46:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        is a CMSIS function that:
  47:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  48:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value 0x0F.
  49:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  50:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  51:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  52:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  53:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     
  54:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  55:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  56:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
  57:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        inside the stm32f1xx_hal_cortex.h file.
  58:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
  59:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  60:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  61:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  62:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
  63:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  64:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                             
  65:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  66:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  67:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  68:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****    
  69:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   @endverbatim
  70:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ******************************************************************************
  71:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @attention
  72:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *
  73:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  74:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *
  75:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  76:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * are permitted provided that the following conditions are met:
  77:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  78:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer.
  79:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  80:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer in the documentation
  81:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *      and/or other materials provided with the distribution.
  82:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  83:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *      may be used to endorse or promote products derived from this software
  84:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *      without specific prior written permission.
  85:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *
  86:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  87:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  88:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  89:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /tmp/cc4VD8cB.s 			page 3


  90:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  91:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  92:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  93:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  94:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  95:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  96:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *
  97:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ******************************************************************************
  98:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
  99:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 100:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
 101:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** #include "stm32f1xx_hal.h"
 102:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 103:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /** @addtogroup STM32F1xx_HAL_Driver
 104:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @{
 105:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 106:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 107:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /** @defgroup CORTEX CORTEX
 108:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief CORTEX HAL module driver
 109:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @{
 110:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 111:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 112:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
 113:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 114:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
 115:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
 116:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
 117:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
 118:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 119:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 120:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 121:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions CORTEX Exported Functions
 122:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @{
 123:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 124:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 125:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 126:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group1 Initialization and de-initialization functions
 127:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *  @brief    Initialization and Configuration functions 
 128:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *
 129:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** @verbatim    
 130:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ==============================================================================
 131:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****               ##### Initialization and de-initialization functions #####
 132:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ==============================================================================
 133:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     [..]
 134:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 135:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****       Systick functionalities 
 136:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 137:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** @endverbatim
 138:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @{
 139:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 140:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 141:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 142:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 143:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Sets the priority grouping field (preemption priority and subpriority)
 144:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         using the required unlock sequence.
 145:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  PriorityGroup: The priority grouping bits length. 
 146:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be one of the following values:
ARM GAS  /tmp/cc4VD8cB.s 			page 4


 147:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 148:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                    4 bits for subpriority
 149:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 150:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                    3 bits for subpriority
 151:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 152:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                    2 bits for subpriority
 153:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 154:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                    1 bits for subpriority
 155:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 156:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                    0 bits for subpriority
 157:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
 158:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 159:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 160:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 161:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 162:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
  27              		.loc 1 162 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33              	.LBB40:
  34              	.LBB41:
  35              		.file 2 "drivers/CMSIS/Include/core_cm3.h"
   1:drivers/CMSIS/Include/core_cm3.h **** /**************************************************************************//**
   2:drivers/CMSIS/Include/core_cm3.h ****  * @file     core_cm3.h
   3:drivers/CMSIS/Include/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:drivers/CMSIS/Include/core_cm3.h ****  * @version  V4.30
   5:drivers/CMSIS/Include/core_cm3.h ****  * @date     20. October 2015
   6:drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
   7:drivers/CMSIS/Include/core_cm3.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:drivers/CMSIS/Include/core_cm3.h **** 
   9:drivers/CMSIS/Include/core_cm3.h ****    All rights reserved.
  10:drivers/CMSIS/Include/core_cm3.h ****    Redistribution and use in source and binary forms, with or without
  11:drivers/CMSIS/Include/core_cm3.h ****    modification, are permitted provided that the following conditions are met:
  12:drivers/CMSIS/Include/core_cm3.h ****    - Redistributions of source code must retain the above copyright
  13:drivers/CMSIS/Include/core_cm3.h ****      notice, this list of conditions and the following disclaimer.
  14:drivers/CMSIS/Include/core_cm3.h ****    - Redistributions in binary form must reproduce the above copyright
  15:drivers/CMSIS/Include/core_cm3.h ****      notice, this list of conditions and the following disclaimer in the
  16:drivers/CMSIS/Include/core_cm3.h ****      documentation and/or other materials provided with the distribution.
  17:drivers/CMSIS/Include/core_cm3.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:drivers/CMSIS/Include/core_cm3.h ****      to endorse or promote products derived from this software without
  19:drivers/CMSIS/Include/core_cm3.h ****      specific prior written permission.
  20:drivers/CMSIS/Include/core_cm3.h ****    *
  21:drivers/CMSIS/Include/core_cm3.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:drivers/CMSIS/Include/core_cm3.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:drivers/CMSIS/Include/core_cm3.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:drivers/CMSIS/Include/core_cm3.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:drivers/CMSIS/Include/core_cm3.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:drivers/CMSIS/Include/core_cm3.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:drivers/CMSIS/Include/core_cm3.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:drivers/CMSIS/Include/core_cm3.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:drivers/CMSIS/Include/core_cm3.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:drivers/CMSIS/Include/core_cm3.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:drivers/CMSIS/Include/core_cm3.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:drivers/CMSIS/Include/core_cm3.h ****    ---------------------------------------------------------------------------*/
ARM GAS  /tmp/cc4VD8cB.s 			page 5


  33:drivers/CMSIS/Include/core_cm3.h **** 
  34:drivers/CMSIS/Include/core_cm3.h **** 
  35:drivers/CMSIS/Include/core_cm3.h **** #if   defined ( __ICCARM__ )
  36:drivers/CMSIS/Include/core_cm3.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:drivers/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:drivers/CMSIS/Include/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  39:drivers/CMSIS/Include/core_cm3.h **** #endif
  40:drivers/CMSIS/Include/core_cm3.h **** 
  41:drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  42:drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  43:drivers/CMSIS/Include/core_cm3.h **** 
  44:drivers/CMSIS/Include/core_cm3.h **** #include <stdint.h>
  45:drivers/CMSIS/Include/core_cm3.h **** 
  46:drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
  47:drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
  48:drivers/CMSIS/Include/core_cm3.h **** #endif
  49:drivers/CMSIS/Include/core_cm3.h **** 
  50:drivers/CMSIS/Include/core_cm3.h **** /**
  51:drivers/CMSIS/Include/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:drivers/CMSIS/Include/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:drivers/CMSIS/Include/core_cm3.h **** 
  54:drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:drivers/CMSIS/Include/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  56:drivers/CMSIS/Include/core_cm3.h **** 
  57:drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:drivers/CMSIS/Include/core_cm3.h ****      Unions are used for effective representation of core registers.
  59:drivers/CMSIS/Include/core_cm3.h **** 
  60:drivers/CMSIS/Include/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:drivers/CMSIS/Include/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  62:drivers/CMSIS/Include/core_cm3.h ****  */
  63:drivers/CMSIS/Include/core_cm3.h **** 
  64:drivers/CMSIS/Include/core_cm3.h **** 
  65:drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
  66:drivers/CMSIS/Include/core_cm3.h ****  *                 CMSIS definitions
  67:drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
  68:drivers/CMSIS/Include/core_cm3.h **** /**
  69:drivers/CMSIS/Include/core_cm3.h ****   \ingroup Cortex_M3
  70:drivers/CMSIS/Include/core_cm3.h ****   @{
  71:drivers/CMSIS/Include/core_cm3.h ****  */
  72:drivers/CMSIS/Include/core_cm3.h **** 
  73:drivers/CMSIS/Include/core_cm3.h **** /*  CMSIS CM3 definitions */
  74:drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  77:drivers/CMSIS/Include/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:drivers/CMSIS/Include/core_cm3.h **** 
  79:drivers/CMSIS/Include/core_cm3.h **** #define __CORTEX_M                (0x03U)                                      /*!< Cortex-M Core *
  80:drivers/CMSIS/Include/core_cm3.h **** 
  81:drivers/CMSIS/Include/core_cm3.h **** 
  82:drivers/CMSIS/Include/core_cm3.h **** #if   defined ( __CC_ARM )
  83:drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  86:drivers/CMSIS/Include/core_cm3.h **** 
  87:drivers/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
ARM GAS  /tmp/cc4VD8cB.s 			page 6


  90:drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  91:drivers/CMSIS/Include/core_cm3.h **** 
  92:drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
  93:drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
  96:drivers/CMSIS/Include/core_cm3.h **** 
  97:drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
  98:drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 101:drivers/CMSIS/Include/core_cm3.h **** 
 102:drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TMS470__ )
 103:drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 105:drivers/CMSIS/Include/core_cm3.h **** 
 106:drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 107:drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 110:drivers/CMSIS/Include/core_cm3.h **** 
 111:drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 112:drivers/CMSIS/Include/core_cm3.h ****   #define __packed
 113:drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 116:drivers/CMSIS/Include/core_cm3.h **** 
 117:drivers/CMSIS/Include/core_cm3.h **** #else
 118:drivers/CMSIS/Include/core_cm3.h ****   #error Unknown compiler
 119:drivers/CMSIS/Include/core_cm3.h **** #endif
 120:drivers/CMSIS/Include/core_cm3.h **** 
 121:drivers/CMSIS/Include/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:drivers/CMSIS/Include/core_cm3.h ****     This core does not support an FPU at all
 123:drivers/CMSIS/Include/core_cm3.h **** */
 124:drivers/CMSIS/Include/core_cm3.h **** #define __FPU_USED       0U
 125:drivers/CMSIS/Include/core_cm3.h **** 
 126:drivers/CMSIS/Include/core_cm3.h **** #if defined ( __CC_ARM )
 127:drivers/CMSIS/Include/core_cm3.h ****   #if defined __TARGET_FPU_VFP
 128:drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:drivers/CMSIS/Include/core_cm3.h ****   #endif
 130:drivers/CMSIS/Include/core_cm3.h **** 
 131:drivers/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARM_PCS_VFP
 133:drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:drivers/CMSIS/Include/core_cm3.h ****   #endif
 135:drivers/CMSIS/Include/core_cm3.h **** 
 136:drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
 137:drivers/CMSIS/Include/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:drivers/CMSIS/Include/core_cm3.h ****   #endif
 140:drivers/CMSIS/Include/core_cm3.h **** 
 141:drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
 142:drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARMVFP__
 143:drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:drivers/CMSIS/Include/core_cm3.h ****   #endif
 145:drivers/CMSIS/Include/core_cm3.h **** 
 146:drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TMS470__ )
ARM GAS  /tmp/cc4VD8cB.s 			page 7


 147:drivers/CMSIS/Include/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 148:drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:drivers/CMSIS/Include/core_cm3.h ****   #endif
 150:drivers/CMSIS/Include/core_cm3.h **** 
 151:drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 152:drivers/CMSIS/Include/core_cm3.h ****   #if defined __FPU_VFP__
 153:drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:drivers/CMSIS/Include/core_cm3.h ****   #endif
 155:drivers/CMSIS/Include/core_cm3.h **** 
 156:drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 157:drivers/CMSIS/Include/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 158:drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:drivers/CMSIS/Include/core_cm3.h ****   #endif
 160:drivers/CMSIS/Include/core_cm3.h **** 
 161:drivers/CMSIS/Include/core_cm3.h **** #endif
 162:drivers/CMSIS/Include/core_cm3.h **** 
 163:drivers/CMSIS/Include/core_cm3.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:drivers/CMSIS/Include/core_cm3.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:drivers/CMSIS/Include/core_cm3.h **** 
 166:drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 167:drivers/CMSIS/Include/core_cm3.h **** }
 168:drivers/CMSIS/Include/core_cm3.h **** #endif
 169:drivers/CMSIS/Include/core_cm3.h **** 
 170:drivers/CMSIS/Include/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 171:drivers/CMSIS/Include/core_cm3.h **** 
 172:drivers/CMSIS/Include/core_cm3.h **** #ifndef __CMSIS_GENERIC
 173:drivers/CMSIS/Include/core_cm3.h **** 
 174:drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 175:drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 176:drivers/CMSIS/Include/core_cm3.h **** 
 177:drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 178:drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
 179:drivers/CMSIS/Include/core_cm3.h **** #endif
 180:drivers/CMSIS/Include/core_cm3.h **** 
 181:drivers/CMSIS/Include/core_cm3.h **** /* check device defines and use defaults */
 182:drivers/CMSIS/Include/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 183:drivers/CMSIS/Include/core_cm3.h ****   #ifndef __CM3_REV
 184:drivers/CMSIS/Include/core_cm3.h ****     #define __CM3_REV               0x0200U
 185:drivers/CMSIS/Include/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 186:drivers/CMSIS/Include/core_cm3.h ****   #endif
 187:drivers/CMSIS/Include/core_cm3.h **** 
 188:drivers/CMSIS/Include/core_cm3.h ****   #ifndef __MPU_PRESENT
 189:drivers/CMSIS/Include/core_cm3.h ****     #define __MPU_PRESENT             0U
 190:drivers/CMSIS/Include/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 191:drivers/CMSIS/Include/core_cm3.h ****   #endif
 192:drivers/CMSIS/Include/core_cm3.h **** 
 193:drivers/CMSIS/Include/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 194:drivers/CMSIS/Include/core_cm3.h ****     #define __NVIC_PRIO_BITS          4U
 195:drivers/CMSIS/Include/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 196:drivers/CMSIS/Include/core_cm3.h ****   #endif
 197:drivers/CMSIS/Include/core_cm3.h **** 
 198:drivers/CMSIS/Include/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 199:drivers/CMSIS/Include/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 200:drivers/CMSIS/Include/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 201:drivers/CMSIS/Include/core_cm3.h ****   #endif
 202:drivers/CMSIS/Include/core_cm3.h **** #endif
 203:drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/cc4VD8cB.s 			page 8


 204:drivers/CMSIS/Include/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 205:drivers/CMSIS/Include/core_cm3.h **** /**
 206:drivers/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 207:drivers/CMSIS/Include/core_cm3.h **** 
 208:drivers/CMSIS/Include/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 209:drivers/CMSIS/Include/core_cm3.h ****     \li to specify the access to peripheral variables.
 210:drivers/CMSIS/Include/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 211:drivers/CMSIS/Include/core_cm3.h **** */
 212:drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 213:drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 214:drivers/CMSIS/Include/core_cm3.h **** #else
 215:drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 216:drivers/CMSIS/Include/core_cm3.h **** #endif
 217:drivers/CMSIS/Include/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 218:drivers/CMSIS/Include/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 219:drivers/CMSIS/Include/core_cm3.h **** 
 220:drivers/CMSIS/Include/core_cm3.h **** /* following defines should be used for structure members */
 221:drivers/CMSIS/Include/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 222:drivers/CMSIS/Include/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 223:drivers/CMSIS/Include/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 224:drivers/CMSIS/Include/core_cm3.h **** 
 225:drivers/CMSIS/Include/core_cm3.h **** /*@} end of group Cortex_M3 */
 226:drivers/CMSIS/Include/core_cm3.h **** 
 227:drivers/CMSIS/Include/core_cm3.h **** 
 228:drivers/CMSIS/Include/core_cm3.h **** 
 229:drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
 230:drivers/CMSIS/Include/core_cm3.h ****  *                 Register Abstraction
 231:drivers/CMSIS/Include/core_cm3.h ****   Core Register contain:
 232:drivers/CMSIS/Include/core_cm3.h ****   - Core Register
 233:drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Register
 234:drivers/CMSIS/Include/core_cm3.h ****   - Core SCB Register
 235:drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Register
 236:drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Register
 237:drivers/CMSIS/Include/core_cm3.h ****   - Core MPU Register
 238:drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
 239:drivers/CMSIS/Include/core_cm3.h **** /**
 240:drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 241:drivers/CMSIS/Include/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 242:drivers/CMSIS/Include/core_cm3.h **** */
 243:drivers/CMSIS/Include/core_cm3.h **** 
 244:drivers/CMSIS/Include/core_cm3.h **** /**
 245:drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 246:drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 247:drivers/CMSIS/Include/core_cm3.h ****   \brief      Core Register type definitions.
 248:drivers/CMSIS/Include/core_cm3.h ****   @{
 249:drivers/CMSIS/Include/core_cm3.h ****  */
 250:drivers/CMSIS/Include/core_cm3.h **** 
 251:drivers/CMSIS/Include/core_cm3.h **** /**
 252:drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 253:drivers/CMSIS/Include/core_cm3.h ****  */
 254:drivers/CMSIS/Include/core_cm3.h **** typedef union
 255:drivers/CMSIS/Include/core_cm3.h **** {
 256:drivers/CMSIS/Include/core_cm3.h ****   struct
 257:drivers/CMSIS/Include/core_cm3.h ****   {
 258:drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 259:drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 260:drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
ARM GAS  /tmp/cc4VD8cB.s 			page 9


 261:drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 262:drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 263:drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 264:drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 265:drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 266:drivers/CMSIS/Include/core_cm3.h **** } APSR_Type;
 267:drivers/CMSIS/Include/core_cm3.h **** 
 268:drivers/CMSIS/Include/core_cm3.h **** /* APSR Register Definitions */
 269:drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 270:drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 271:drivers/CMSIS/Include/core_cm3.h **** 
 272:drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 273:drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 274:drivers/CMSIS/Include/core_cm3.h **** 
 275:drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 276:drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 277:drivers/CMSIS/Include/core_cm3.h **** 
 278:drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 279:drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 280:drivers/CMSIS/Include/core_cm3.h **** 
 281:drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 282:drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 283:drivers/CMSIS/Include/core_cm3.h **** 
 284:drivers/CMSIS/Include/core_cm3.h **** 
 285:drivers/CMSIS/Include/core_cm3.h **** /**
 286:drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 287:drivers/CMSIS/Include/core_cm3.h ****  */
 288:drivers/CMSIS/Include/core_cm3.h **** typedef union
 289:drivers/CMSIS/Include/core_cm3.h **** {
 290:drivers/CMSIS/Include/core_cm3.h ****   struct
 291:drivers/CMSIS/Include/core_cm3.h ****   {
 292:drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 293:drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 294:drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 295:drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 296:drivers/CMSIS/Include/core_cm3.h **** } IPSR_Type;
 297:drivers/CMSIS/Include/core_cm3.h **** 
 298:drivers/CMSIS/Include/core_cm3.h **** /* IPSR Register Definitions */
 299:drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 300:drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 301:drivers/CMSIS/Include/core_cm3.h **** 
 302:drivers/CMSIS/Include/core_cm3.h **** 
 303:drivers/CMSIS/Include/core_cm3.h **** /**
 304:drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 305:drivers/CMSIS/Include/core_cm3.h ****  */
 306:drivers/CMSIS/Include/core_cm3.h **** typedef union
 307:drivers/CMSIS/Include/core_cm3.h **** {
 308:drivers/CMSIS/Include/core_cm3.h ****   struct
 309:drivers/CMSIS/Include/core_cm3.h ****   {
 310:drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 311:drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 312:drivers/CMSIS/Include/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 313:drivers/CMSIS/Include/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 314:drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 315:drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 316:drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 317:drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
ARM GAS  /tmp/cc4VD8cB.s 			page 10


 318:drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 319:drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 320:drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:drivers/CMSIS/Include/core_cm3.h **** } xPSR_Type;
 322:drivers/CMSIS/Include/core_cm3.h **** 
 323:drivers/CMSIS/Include/core_cm3.h **** /* xPSR Register Definitions */
 324:drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 325:drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 326:drivers/CMSIS/Include/core_cm3.h **** 
 327:drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 328:drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 329:drivers/CMSIS/Include/core_cm3.h **** 
 330:drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 331:drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 332:drivers/CMSIS/Include/core_cm3.h **** 
 333:drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 334:drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 335:drivers/CMSIS/Include/core_cm3.h **** 
 336:drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 337:drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 338:drivers/CMSIS/Include/core_cm3.h **** 
 339:drivers/CMSIS/Include/core_cm3.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 340:drivers/CMSIS/Include/core_cm3.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 341:drivers/CMSIS/Include/core_cm3.h **** 
 342:drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 343:drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 344:drivers/CMSIS/Include/core_cm3.h **** 
 345:drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 346:drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 347:drivers/CMSIS/Include/core_cm3.h **** 
 348:drivers/CMSIS/Include/core_cm3.h **** 
 349:drivers/CMSIS/Include/core_cm3.h **** /**
 350:drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 351:drivers/CMSIS/Include/core_cm3.h ****  */
 352:drivers/CMSIS/Include/core_cm3.h **** typedef union
 353:drivers/CMSIS/Include/core_cm3.h **** {
 354:drivers/CMSIS/Include/core_cm3.h ****   struct
 355:drivers/CMSIS/Include/core_cm3.h ****   {
 356:drivers/CMSIS/Include/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 357:drivers/CMSIS/Include/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 358:drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 359:drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 360:drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 361:drivers/CMSIS/Include/core_cm3.h **** } CONTROL_Type;
 362:drivers/CMSIS/Include/core_cm3.h **** 
 363:drivers/CMSIS/Include/core_cm3.h **** /* CONTROL Register Definitions */
 364:drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 365:drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 366:drivers/CMSIS/Include/core_cm3.h **** 
 367:drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 368:drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 369:drivers/CMSIS/Include/core_cm3.h **** 
 370:drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CORE */
 371:drivers/CMSIS/Include/core_cm3.h **** 
 372:drivers/CMSIS/Include/core_cm3.h **** 
 373:drivers/CMSIS/Include/core_cm3.h **** /**
 374:drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
ARM GAS  /tmp/cc4VD8cB.s 			page 11


 375:drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 376:drivers/CMSIS/Include/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 377:drivers/CMSIS/Include/core_cm3.h ****   @{
 378:drivers/CMSIS/Include/core_cm3.h ****  */
 379:drivers/CMSIS/Include/core_cm3.h **** 
 380:drivers/CMSIS/Include/core_cm3.h **** /**
 381:drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 382:drivers/CMSIS/Include/core_cm3.h ****  */
 383:drivers/CMSIS/Include/core_cm3.h **** typedef struct
 384:drivers/CMSIS/Include/core_cm3.h **** {
 385:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 386:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[24U];
 387:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 388:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RSERVED1[24U];
 389:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 390:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[24U];
 391:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 392:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[24U];
 393:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 394:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[56U];
 395:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 396:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[644U];
 397:drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 398:drivers/CMSIS/Include/core_cm3.h **** }  NVIC_Type;
 399:drivers/CMSIS/Include/core_cm3.h **** 
 400:drivers/CMSIS/Include/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 401:drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 402:drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 403:drivers/CMSIS/Include/core_cm3.h **** 
 404:drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 405:drivers/CMSIS/Include/core_cm3.h **** 
 406:drivers/CMSIS/Include/core_cm3.h **** 
 407:drivers/CMSIS/Include/core_cm3.h **** /**
 408:drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 409:drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 410:drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 411:drivers/CMSIS/Include/core_cm3.h ****   @{
 412:drivers/CMSIS/Include/core_cm3.h ****  */
 413:drivers/CMSIS/Include/core_cm3.h **** 
 414:drivers/CMSIS/Include/core_cm3.h **** /**
 415:drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 416:drivers/CMSIS/Include/core_cm3.h ****  */
 417:drivers/CMSIS/Include/core_cm3.h **** typedef struct
 418:drivers/CMSIS/Include/core_cm3.h **** {
 419:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 420:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 421:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 422:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 423:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 424:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 425:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 426:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 427:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 428:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 429:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 430:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 431:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
ARM GAS  /tmp/cc4VD8cB.s 			page 12


 432:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 433:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 434:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 435:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 436:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 437:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 438:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[5U];
 439:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 440:drivers/CMSIS/Include/core_cm3.h **** } SCB_Type;
 441:drivers/CMSIS/Include/core_cm3.h **** 
 442:drivers/CMSIS/Include/core_cm3.h **** /* SCB CPUID Register Definitions */
 443:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 444:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 445:drivers/CMSIS/Include/core_cm3.h **** 
 446:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 447:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 448:drivers/CMSIS/Include/core_cm3.h **** 
 449:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 450:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 451:drivers/CMSIS/Include/core_cm3.h **** 
 452:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 453:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 454:drivers/CMSIS/Include/core_cm3.h **** 
 455:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 456:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 457:drivers/CMSIS/Include/core_cm3.h **** 
 458:drivers/CMSIS/Include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 459:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 460:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 461:drivers/CMSIS/Include/core_cm3.h **** 
 462:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 463:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 464:drivers/CMSIS/Include/core_cm3.h **** 
 465:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 466:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 467:drivers/CMSIS/Include/core_cm3.h **** 
 468:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 469:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 470:drivers/CMSIS/Include/core_cm3.h **** 
 471:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 472:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 473:drivers/CMSIS/Include/core_cm3.h **** 
 474:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 475:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 476:drivers/CMSIS/Include/core_cm3.h **** 
 477:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 478:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 479:drivers/CMSIS/Include/core_cm3.h **** 
 480:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 481:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 482:drivers/CMSIS/Include/core_cm3.h **** 
 483:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 484:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 485:drivers/CMSIS/Include/core_cm3.h **** 
 486:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 487:drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 488:drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/cc4VD8cB.s 			page 13


 489:drivers/CMSIS/Include/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 490:drivers/CMSIS/Include/core_cm3.h **** #if (__CM3_REV < 0x0201U)                   /* core r2p1 */
 491:drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 492:drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 493:drivers/CMSIS/Include/core_cm3.h **** 
 494:drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 495:drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 496:drivers/CMSIS/Include/core_cm3.h **** #else
 497:drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 498:drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 499:drivers/CMSIS/Include/core_cm3.h **** #endif
 500:drivers/CMSIS/Include/core_cm3.h **** 
 501:drivers/CMSIS/Include/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 502:drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 503:drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 504:drivers/CMSIS/Include/core_cm3.h **** 
 505:drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 506:drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 507:drivers/CMSIS/Include/core_cm3.h **** 
 508:drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 509:drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 510:drivers/CMSIS/Include/core_cm3.h **** 
 511:drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 512:drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 513:drivers/CMSIS/Include/core_cm3.h **** 
 514:drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 515:drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 516:drivers/CMSIS/Include/core_cm3.h **** 
 517:drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 518:drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 519:drivers/CMSIS/Include/core_cm3.h **** 
 520:drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 521:drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 522:drivers/CMSIS/Include/core_cm3.h **** 
 523:drivers/CMSIS/Include/core_cm3.h **** /* SCB System Control Register Definitions */
 524:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 525:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 526:drivers/CMSIS/Include/core_cm3.h **** 
 527:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 528:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 529:drivers/CMSIS/Include/core_cm3.h **** 
 530:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 531:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 532:drivers/CMSIS/Include/core_cm3.h **** 
 533:drivers/CMSIS/Include/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 534:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 535:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 536:drivers/CMSIS/Include/core_cm3.h **** 
 537:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 538:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 539:drivers/CMSIS/Include/core_cm3.h **** 
 540:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 541:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 542:drivers/CMSIS/Include/core_cm3.h **** 
 543:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 544:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 545:drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/cc4VD8cB.s 			page 14


 546:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 547:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 548:drivers/CMSIS/Include/core_cm3.h **** 
 549:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 550:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 551:drivers/CMSIS/Include/core_cm3.h **** 
 552:drivers/CMSIS/Include/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 553:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 554:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 555:drivers/CMSIS/Include/core_cm3.h **** 
 556:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 557:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 558:drivers/CMSIS/Include/core_cm3.h **** 
 559:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 560:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 561:drivers/CMSIS/Include/core_cm3.h **** 
 562:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 563:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 564:drivers/CMSIS/Include/core_cm3.h **** 
 565:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 566:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 567:drivers/CMSIS/Include/core_cm3.h **** 
 568:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 569:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 570:drivers/CMSIS/Include/core_cm3.h **** 
 571:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 572:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 573:drivers/CMSIS/Include/core_cm3.h **** 
 574:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 575:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 576:drivers/CMSIS/Include/core_cm3.h **** 
 577:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 578:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 579:drivers/CMSIS/Include/core_cm3.h **** 
 580:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 581:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 582:drivers/CMSIS/Include/core_cm3.h **** 
 583:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 584:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 585:drivers/CMSIS/Include/core_cm3.h **** 
 586:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 587:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 588:drivers/CMSIS/Include/core_cm3.h **** 
 589:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 590:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 591:drivers/CMSIS/Include/core_cm3.h **** 
 592:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 593:drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 594:drivers/CMSIS/Include/core_cm3.h **** 
 595:drivers/CMSIS/Include/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 596:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 597:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 598:drivers/CMSIS/Include/core_cm3.h **** 
 599:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 600:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 601:drivers/CMSIS/Include/core_cm3.h **** 
 602:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
ARM GAS  /tmp/cc4VD8cB.s 			page 15


 603:drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 604:drivers/CMSIS/Include/core_cm3.h **** 
 605:drivers/CMSIS/Include/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 606:drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 607:drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 608:drivers/CMSIS/Include/core_cm3.h **** 
 609:drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 610:drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 611:drivers/CMSIS/Include/core_cm3.h **** 
 612:drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 613:drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 614:drivers/CMSIS/Include/core_cm3.h **** 
 615:drivers/CMSIS/Include/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 616:drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 617:drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 618:drivers/CMSIS/Include/core_cm3.h **** 
 619:drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 620:drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 621:drivers/CMSIS/Include/core_cm3.h **** 
 622:drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 623:drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 624:drivers/CMSIS/Include/core_cm3.h **** 
 625:drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 626:drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 627:drivers/CMSIS/Include/core_cm3.h **** 
 628:drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 629:drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 630:drivers/CMSIS/Include/core_cm3.h **** 
 631:drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCB */
 632:drivers/CMSIS/Include/core_cm3.h **** 
 633:drivers/CMSIS/Include/core_cm3.h **** 
 634:drivers/CMSIS/Include/core_cm3.h **** /**
 635:drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 636:drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 637:drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 638:drivers/CMSIS/Include/core_cm3.h ****   @{
 639:drivers/CMSIS/Include/core_cm3.h ****  */
 640:drivers/CMSIS/Include/core_cm3.h **** 
 641:drivers/CMSIS/Include/core_cm3.h **** /**
 642:drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 643:drivers/CMSIS/Include/core_cm3.h ****  */
 644:drivers/CMSIS/Include/core_cm3.h **** typedef struct
 645:drivers/CMSIS/Include/core_cm3.h **** {
 646:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 647:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 648:drivers/CMSIS/Include/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200U))
 649:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 650:drivers/CMSIS/Include/core_cm3.h **** #else
 651:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 652:drivers/CMSIS/Include/core_cm3.h **** #endif
 653:drivers/CMSIS/Include/core_cm3.h **** } SCnSCB_Type;
 654:drivers/CMSIS/Include/core_cm3.h **** 
 655:drivers/CMSIS/Include/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 656:drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 657:drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 658:drivers/CMSIS/Include/core_cm3.h **** 
 659:drivers/CMSIS/Include/core_cm3.h **** /* Auxiliary Control Register Definitions */
ARM GAS  /tmp/cc4VD8cB.s 			page 16


 660:drivers/CMSIS/Include/core_cm3.h **** 
 661:drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 662:drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 663:drivers/CMSIS/Include/core_cm3.h **** 
 664:drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 665:drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 666:drivers/CMSIS/Include/core_cm3.h **** 
 667:drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 668:drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 669:drivers/CMSIS/Include/core_cm3.h **** 
 670:drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 671:drivers/CMSIS/Include/core_cm3.h **** 
 672:drivers/CMSIS/Include/core_cm3.h **** 
 673:drivers/CMSIS/Include/core_cm3.h **** /**
 674:drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 675:drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 676:drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 677:drivers/CMSIS/Include/core_cm3.h ****   @{
 678:drivers/CMSIS/Include/core_cm3.h ****  */
 679:drivers/CMSIS/Include/core_cm3.h **** 
 680:drivers/CMSIS/Include/core_cm3.h **** /**
 681:drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 682:drivers/CMSIS/Include/core_cm3.h ****  */
 683:drivers/CMSIS/Include/core_cm3.h **** typedef struct
 684:drivers/CMSIS/Include/core_cm3.h **** {
 685:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 686:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 687:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 688:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 689:drivers/CMSIS/Include/core_cm3.h **** } SysTick_Type;
 690:drivers/CMSIS/Include/core_cm3.h **** 
 691:drivers/CMSIS/Include/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 692:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 693:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 694:drivers/CMSIS/Include/core_cm3.h **** 
 695:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 696:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 697:drivers/CMSIS/Include/core_cm3.h **** 
 698:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 699:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 700:drivers/CMSIS/Include/core_cm3.h **** 
 701:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 702:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 703:drivers/CMSIS/Include/core_cm3.h **** 
 704:drivers/CMSIS/Include/core_cm3.h **** /* SysTick Reload Register Definitions */
 705:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 706:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 707:drivers/CMSIS/Include/core_cm3.h **** 
 708:drivers/CMSIS/Include/core_cm3.h **** /* SysTick Current Register Definitions */
 709:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 710:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 711:drivers/CMSIS/Include/core_cm3.h **** 
 712:drivers/CMSIS/Include/core_cm3.h **** /* SysTick Calibration Register Definitions */
 713:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 714:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 715:drivers/CMSIS/Include/core_cm3.h **** 
 716:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
ARM GAS  /tmp/cc4VD8cB.s 			page 17


 717:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 718:drivers/CMSIS/Include/core_cm3.h **** 
 719:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 720:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 721:drivers/CMSIS/Include/core_cm3.h **** 
 722:drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 723:drivers/CMSIS/Include/core_cm3.h **** 
 724:drivers/CMSIS/Include/core_cm3.h **** 
 725:drivers/CMSIS/Include/core_cm3.h **** /**
 726:drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 727:drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 728:drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 729:drivers/CMSIS/Include/core_cm3.h ****   @{
 730:drivers/CMSIS/Include/core_cm3.h ****  */
 731:drivers/CMSIS/Include/core_cm3.h **** 
 732:drivers/CMSIS/Include/core_cm3.h **** /**
 733:drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 734:drivers/CMSIS/Include/core_cm3.h ****  */
 735:drivers/CMSIS/Include/core_cm3.h **** typedef struct
 736:drivers/CMSIS/Include/core_cm3.h **** {
 737:drivers/CMSIS/Include/core_cm3.h ****   __OM  union
 738:drivers/CMSIS/Include/core_cm3.h ****   {
 739:drivers/CMSIS/Include/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 740:drivers/CMSIS/Include/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 741:drivers/CMSIS/Include/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 742:drivers/CMSIS/Include/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 743:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[864U];
 744:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 745:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[15U];
 746:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 747:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[15U];
 748:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 749:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[29U];
 750:drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 751:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 752:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 753:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[43U];
 754:drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 755:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 756:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[6U];
 757:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 758:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 759:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 760:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 761:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 762:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 763:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 764:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 765:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 766:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 767:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 768:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 769:drivers/CMSIS/Include/core_cm3.h **** } ITM_Type;
 770:drivers/CMSIS/Include/core_cm3.h **** 
 771:drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 772:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 773:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
ARM GAS  /tmp/cc4VD8cB.s 			page 18


 774:drivers/CMSIS/Include/core_cm3.h **** 
 775:drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Control Register Definitions */
 776:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 777:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 778:drivers/CMSIS/Include/core_cm3.h **** 
 779:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 780:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 781:drivers/CMSIS/Include/core_cm3.h **** 
 782:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 783:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 784:drivers/CMSIS/Include/core_cm3.h **** 
 785:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 786:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 787:drivers/CMSIS/Include/core_cm3.h **** 
 788:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 789:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 790:drivers/CMSIS/Include/core_cm3.h **** 
 791:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 792:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 793:drivers/CMSIS/Include/core_cm3.h **** 
 794:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 795:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 796:drivers/CMSIS/Include/core_cm3.h **** 
 797:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 798:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 799:drivers/CMSIS/Include/core_cm3.h **** 
 800:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 801:drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 802:drivers/CMSIS/Include/core_cm3.h **** 
 803:drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Write Register Definitions */
 804:drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 805:drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 806:drivers/CMSIS/Include/core_cm3.h **** 
 807:drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Read Register Definitions */
 808:drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 809:drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 810:drivers/CMSIS/Include/core_cm3.h **** 
 811:drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 812:drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 813:drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 814:drivers/CMSIS/Include/core_cm3.h **** 
 815:drivers/CMSIS/Include/core_cm3.h **** /* ITM Lock Status Register Definitions */
 816:drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 817:drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 818:drivers/CMSIS/Include/core_cm3.h **** 
 819:drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 820:drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 821:drivers/CMSIS/Include/core_cm3.h **** 
 822:drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 823:drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 824:drivers/CMSIS/Include/core_cm3.h **** 
 825:drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 826:drivers/CMSIS/Include/core_cm3.h **** 
 827:drivers/CMSIS/Include/core_cm3.h **** 
 828:drivers/CMSIS/Include/core_cm3.h **** /**
 829:drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 830:drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
ARM GAS  /tmp/cc4VD8cB.s 			page 19


 831:drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 832:drivers/CMSIS/Include/core_cm3.h ****   @{
 833:drivers/CMSIS/Include/core_cm3.h ****  */
 834:drivers/CMSIS/Include/core_cm3.h **** 
 835:drivers/CMSIS/Include/core_cm3.h **** /**
 836:drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 837:drivers/CMSIS/Include/core_cm3.h ****  */
 838:drivers/CMSIS/Include/core_cm3.h **** typedef struct
 839:drivers/CMSIS/Include/core_cm3.h **** {
 840:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 841:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 842:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 843:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 844:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 845:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 846:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 847:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 848:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 849:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 850:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 851:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 852:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 853:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 854:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 855:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 856:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 857:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 858:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 859:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[1U];
 860:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 861:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 862:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 863:drivers/CMSIS/Include/core_cm3.h **** } DWT_Type;
 864:drivers/CMSIS/Include/core_cm3.h **** 
 865:drivers/CMSIS/Include/core_cm3.h **** /* DWT Control Register Definitions */
 866:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 867:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 868:drivers/CMSIS/Include/core_cm3.h **** 
 869:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 870:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 871:drivers/CMSIS/Include/core_cm3.h **** 
 872:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 873:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 874:drivers/CMSIS/Include/core_cm3.h **** 
 875:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 876:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 877:drivers/CMSIS/Include/core_cm3.h **** 
 878:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 879:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 880:drivers/CMSIS/Include/core_cm3.h **** 
 881:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 882:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 883:drivers/CMSIS/Include/core_cm3.h **** 
 884:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 885:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 886:drivers/CMSIS/Include/core_cm3.h **** 
 887:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
ARM GAS  /tmp/cc4VD8cB.s 			page 20


 888:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 889:drivers/CMSIS/Include/core_cm3.h **** 
 890:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 891:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 892:drivers/CMSIS/Include/core_cm3.h **** 
 893:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 894:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 895:drivers/CMSIS/Include/core_cm3.h **** 
 896:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 897:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 898:drivers/CMSIS/Include/core_cm3.h **** 
 899:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 900:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 901:drivers/CMSIS/Include/core_cm3.h **** 
 902:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 903:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 904:drivers/CMSIS/Include/core_cm3.h **** 
 905:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 906:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 907:drivers/CMSIS/Include/core_cm3.h **** 
 908:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 909:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 910:drivers/CMSIS/Include/core_cm3.h **** 
 911:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 912:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 913:drivers/CMSIS/Include/core_cm3.h **** 
 914:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 915:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 916:drivers/CMSIS/Include/core_cm3.h **** 
 917:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 918:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 919:drivers/CMSIS/Include/core_cm3.h **** 
 920:drivers/CMSIS/Include/core_cm3.h **** /* DWT CPI Count Register Definitions */
 921:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 922:drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 923:drivers/CMSIS/Include/core_cm3.h **** 
 924:drivers/CMSIS/Include/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 925:drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 926:drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 927:drivers/CMSIS/Include/core_cm3.h **** 
 928:drivers/CMSIS/Include/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 929:drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 930:drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 931:drivers/CMSIS/Include/core_cm3.h **** 
 932:drivers/CMSIS/Include/core_cm3.h **** /* DWT LSU Count Register Definitions */
 933:drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 934:drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 935:drivers/CMSIS/Include/core_cm3.h **** 
 936:drivers/CMSIS/Include/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 937:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 938:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 939:drivers/CMSIS/Include/core_cm3.h **** 
 940:drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 941:drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 942:drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 943:drivers/CMSIS/Include/core_cm3.h **** 
 944:drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Function Register Definitions */
ARM GAS  /tmp/cc4VD8cB.s 			page 21


 945:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 946:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 947:drivers/CMSIS/Include/core_cm3.h **** 
 948:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 949:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 950:drivers/CMSIS/Include/core_cm3.h **** 
 951:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 952:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 953:drivers/CMSIS/Include/core_cm3.h **** 
 954:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 955:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 956:drivers/CMSIS/Include/core_cm3.h **** 
 957:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 958:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 959:drivers/CMSIS/Include/core_cm3.h **** 
 960:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 961:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 962:drivers/CMSIS/Include/core_cm3.h **** 
 963:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 964:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 965:drivers/CMSIS/Include/core_cm3.h **** 
 966:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 967:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 968:drivers/CMSIS/Include/core_cm3.h **** 
 969:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 970:drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 971:drivers/CMSIS/Include/core_cm3.h **** 
 972:drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 973:drivers/CMSIS/Include/core_cm3.h **** 
 974:drivers/CMSIS/Include/core_cm3.h **** 
 975:drivers/CMSIS/Include/core_cm3.h **** /**
 976:drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 977:drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 978:drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 979:drivers/CMSIS/Include/core_cm3.h ****   @{
 980:drivers/CMSIS/Include/core_cm3.h ****  */
 981:drivers/CMSIS/Include/core_cm3.h **** 
 982:drivers/CMSIS/Include/core_cm3.h **** /**
 983:drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 984:drivers/CMSIS/Include/core_cm3.h ****  */
 985:drivers/CMSIS/Include/core_cm3.h **** typedef struct
 986:drivers/CMSIS/Include/core_cm3.h **** {
 987:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 988:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 989:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[2U];
 990:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 991:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[55U];
 992:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 993:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[131U];
 994:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 995:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 996:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 997:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[759U];
 998:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 999:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1000:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1001:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[1U];
ARM GAS  /tmp/cc4VD8cB.s 			page 22


1002:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1003:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1004:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1005:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[39U];
1006:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1007:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1008:drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED7[8U];
1009:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1010:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1011:drivers/CMSIS/Include/core_cm3.h **** } TPI_Type;
1012:drivers/CMSIS/Include/core_cm3.h **** 
1013:drivers/CMSIS/Include/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1014:drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1015:drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1016:drivers/CMSIS/Include/core_cm3.h **** 
1017:drivers/CMSIS/Include/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1018:drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1019:drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1020:drivers/CMSIS/Include/core_cm3.h **** 
1021:drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1022:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1023:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1024:drivers/CMSIS/Include/core_cm3.h **** 
1025:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1026:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1027:drivers/CMSIS/Include/core_cm3.h **** 
1028:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1029:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1030:drivers/CMSIS/Include/core_cm3.h **** 
1031:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1032:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1033:drivers/CMSIS/Include/core_cm3.h **** 
1034:drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1035:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1036:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1037:drivers/CMSIS/Include/core_cm3.h **** 
1038:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1039:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1040:drivers/CMSIS/Include/core_cm3.h **** 
1041:drivers/CMSIS/Include/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1042:drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1043:drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1044:drivers/CMSIS/Include/core_cm3.h **** 
1045:drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1046:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1047:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1048:drivers/CMSIS/Include/core_cm3.h **** 
1049:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1050:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1051:drivers/CMSIS/Include/core_cm3.h **** 
1052:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1053:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1054:drivers/CMSIS/Include/core_cm3.h **** 
1055:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1056:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1057:drivers/CMSIS/Include/core_cm3.h **** 
1058:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
ARM GAS  /tmp/cc4VD8cB.s 			page 23


1059:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1060:drivers/CMSIS/Include/core_cm3.h **** 
1061:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1062:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1063:drivers/CMSIS/Include/core_cm3.h **** 
1064:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1065:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1066:drivers/CMSIS/Include/core_cm3.h **** 
1067:drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1068:drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1069:drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1070:drivers/CMSIS/Include/core_cm3.h **** 
1071:drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1072:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1073:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1074:drivers/CMSIS/Include/core_cm3.h **** 
1075:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1076:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1077:drivers/CMSIS/Include/core_cm3.h **** 
1078:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1079:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1080:drivers/CMSIS/Include/core_cm3.h **** 
1081:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1082:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1083:drivers/CMSIS/Include/core_cm3.h **** 
1084:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1085:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1086:drivers/CMSIS/Include/core_cm3.h **** 
1087:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1088:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1089:drivers/CMSIS/Include/core_cm3.h **** 
1090:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1091:drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1092:drivers/CMSIS/Include/core_cm3.h **** 
1093:drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1094:drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1095:drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1096:drivers/CMSIS/Include/core_cm3.h **** 
1097:drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1098:drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1099:drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1100:drivers/CMSIS/Include/core_cm3.h **** 
1101:drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVID Register Definitions */
1102:drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1103:drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1104:drivers/CMSIS/Include/core_cm3.h **** 
1105:drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1106:drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1107:drivers/CMSIS/Include/core_cm3.h **** 
1108:drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1109:drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1110:drivers/CMSIS/Include/core_cm3.h **** 
1111:drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1112:drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1113:drivers/CMSIS/Include/core_cm3.h **** 
1114:drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1115:drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
ARM GAS  /tmp/cc4VD8cB.s 			page 24


1116:drivers/CMSIS/Include/core_cm3.h **** 
1117:drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1118:drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1119:drivers/CMSIS/Include/core_cm3.h **** 
1120:drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1121:drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1122:drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1123:drivers/CMSIS/Include/core_cm3.h **** 
1124:drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1125:drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1126:drivers/CMSIS/Include/core_cm3.h **** 
1127:drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1128:drivers/CMSIS/Include/core_cm3.h **** 
1129:drivers/CMSIS/Include/core_cm3.h **** 
1130:drivers/CMSIS/Include/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1131:drivers/CMSIS/Include/core_cm3.h **** /**
1132:drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1133:drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1134:drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1135:drivers/CMSIS/Include/core_cm3.h ****   @{
1136:drivers/CMSIS/Include/core_cm3.h ****  */
1137:drivers/CMSIS/Include/core_cm3.h **** 
1138:drivers/CMSIS/Include/core_cm3.h **** /**
1139:drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1140:drivers/CMSIS/Include/core_cm3.h ****  */
1141:drivers/CMSIS/Include/core_cm3.h **** typedef struct
1142:drivers/CMSIS/Include/core_cm3.h **** {
1143:drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1144:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1145:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1146:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1147:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1148:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1149:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1150:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1151:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1152:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1153:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1154:drivers/CMSIS/Include/core_cm3.h **** } MPU_Type;
1155:drivers/CMSIS/Include/core_cm3.h **** 
1156:drivers/CMSIS/Include/core_cm3.h **** /* MPU Type Register Definitions */
1157:drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1158:drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1159:drivers/CMSIS/Include/core_cm3.h **** 
1160:drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1161:drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1162:drivers/CMSIS/Include/core_cm3.h **** 
1163:drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1164:drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1165:drivers/CMSIS/Include/core_cm3.h **** 
1166:drivers/CMSIS/Include/core_cm3.h **** /* MPU Control Register Definitions */
1167:drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1168:drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1169:drivers/CMSIS/Include/core_cm3.h **** 
1170:drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1171:drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1172:drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/cc4VD8cB.s 			page 25


1173:drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1174:drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1175:drivers/CMSIS/Include/core_cm3.h **** 
1176:drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Number Register Definitions */
1177:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1178:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1179:drivers/CMSIS/Include/core_cm3.h **** 
1180:drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1181:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1182:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1183:drivers/CMSIS/Include/core_cm3.h **** 
1184:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1185:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1186:drivers/CMSIS/Include/core_cm3.h **** 
1187:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1188:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1189:drivers/CMSIS/Include/core_cm3.h **** 
1190:drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1191:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1192:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1193:drivers/CMSIS/Include/core_cm3.h **** 
1194:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1195:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1196:drivers/CMSIS/Include/core_cm3.h **** 
1197:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1198:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1199:drivers/CMSIS/Include/core_cm3.h **** 
1200:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1201:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1202:drivers/CMSIS/Include/core_cm3.h **** 
1203:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1204:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1205:drivers/CMSIS/Include/core_cm3.h **** 
1206:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1207:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1208:drivers/CMSIS/Include/core_cm3.h **** 
1209:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1210:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1211:drivers/CMSIS/Include/core_cm3.h **** 
1212:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1213:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1214:drivers/CMSIS/Include/core_cm3.h **** 
1215:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1216:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1217:drivers/CMSIS/Include/core_cm3.h **** 
1218:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1219:drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1220:drivers/CMSIS/Include/core_cm3.h **** 
1221:drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_MPU */
1222:drivers/CMSIS/Include/core_cm3.h **** #endif
1223:drivers/CMSIS/Include/core_cm3.h **** 
1224:drivers/CMSIS/Include/core_cm3.h **** 
1225:drivers/CMSIS/Include/core_cm3.h **** /**
1226:drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1227:drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1228:drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1229:drivers/CMSIS/Include/core_cm3.h ****   @{
ARM GAS  /tmp/cc4VD8cB.s 			page 26


1230:drivers/CMSIS/Include/core_cm3.h ****  */
1231:drivers/CMSIS/Include/core_cm3.h **** 
1232:drivers/CMSIS/Include/core_cm3.h **** /**
1233:drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1234:drivers/CMSIS/Include/core_cm3.h ****  */
1235:drivers/CMSIS/Include/core_cm3.h **** typedef struct
1236:drivers/CMSIS/Include/core_cm3.h **** {
1237:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1238:drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1239:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1240:drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1241:drivers/CMSIS/Include/core_cm3.h **** } CoreDebug_Type;
1242:drivers/CMSIS/Include/core_cm3.h **** 
1243:drivers/CMSIS/Include/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1244:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1245:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1246:drivers/CMSIS/Include/core_cm3.h **** 
1247:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1248:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1249:drivers/CMSIS/Include/core_cm3.h **** 
1250:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1251:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1252:drivers/CMSIS/Include/core_cm3.h **** 
1253:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1254:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1255:drivers/CMSIS/Include/core_cm3.h **** 
1256:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1257:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1258:drivers/CMSIS/Include/core_cm3.h **** 
1259:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1260:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1261:drivers/CMSIS/Include/core_cm3.h **** 
1262:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1263:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1264:drivers/CMSIS/Include/core_cm3.h **** 
1265:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1266:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1267:drivers/CMSIS/Include/core_cm3.h **** 
1268:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1269:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1270:drivers/CMSIS/Include/core_cm3.h **** 
1271:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1272:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1273:drivers/CMSIS/Include/core_cm3.h **** 
1274:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1275:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1276:drivers/CMSIS/Include/core_cm3.h **** 
1277:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1278:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1279:drivers/CMSIS/Include/core_cm3.h **** 
1280:drivers/CMSIS/Include/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1281:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1282:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1283:drivers/CMSIS/Include/core_cm3.h **** 
1284:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1285:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1286:drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /tmp/cc4VD8cB.s 			page 27


1287:drivers/CMSIS/Include/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1288:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1289:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1290:drivers/CMSIS/Include/core_cm3.h **** 
1291:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1292:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1293:drivers/CMSIS/Include/core_cm3.h **** 
1294:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1295:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1296:drivers/CMSIS/Include/core_cm3.h **** 
1297:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1298:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1299:drivers/CMSIS/Include/core_cm3.h **** 
1300:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1301:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1302:drivers/CMSIS/Include/core_cm3.h **** 
1303:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1304:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1305:drivers/CMSIS/Include/core_cm3.h **** 
1306:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1307:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1308:drivers/CMSIS/Include/core_cm3.h **** 
1309:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1310:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1311:drivers/CMSIS/Include/core_cm3.h **** 
1312:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1313:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1314:drivers/CMSIS/Include/core_cm3.h **** 
1315:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1316:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1317:drivers/CMSIS/Include/core_cm3.h **** 
1318:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1319:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1320:drivers/CMSIS/Include/core_cm3.h **** 
1321:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1322:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1323:drivers/CMSIS/Include/core_cm3.h **** 
1324:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1325:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1326:drivers/CMSIS/Include/core_cm3.h **** 
1327:drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1328:drivers/CMSIS/Include/core_cm3.h **** 
1329:drivers/CMSIS/Include/core_cm3.h **** 
1330:drivers/CMSIS/Include/core_cm3.h **** /**
1331:drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1332:drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1333:drivers/CMSIS/Include/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1334:drivers/CMSIS/Include/core_cm3.h ****   @{
1335:drivers/CMSIS/Include/core_cm3.h ****  */
1336:drivers/CMSIS/Include/core_cm3.h **** 
1337:drivers/CMSIS/Include/core_cm3.h **** /**
1338:drivers/CMSIS/Include/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1339:drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1340:drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of the bit field.
1341:drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted value.
1342:drivers/CMSIS/Include/core_cm3.h **** */
1343:drivers/CMSIS/Include/core_cm3.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
ARM GAS  /tmp/cc4VD8cB.s 			page 28


1344:drivers/CMSIS/Include/core_cm3.h **** 
1345:drivers/CMSIS/Include/core_cm3.h **** /**
1346:drivers/CMSIS/Include/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1347:drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1348:drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of register.
1349:drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted bit field value.
1350:drivers/CMSIS/Include/core_cm3.h **** */
1351:drivers/CMSIS/Include/core_cm3.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1352:drivers/CMSIS/Include/core_cm3.h **** 
1353:drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1354:drivers/CMSIS/Include/core_cm3.h **** 
1355:drivers/CMSIS/Include/core_cm3.h **** 
1356:drivers/CMSIS/Include/core_cm3.h **** /**
1357:drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1358:drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1359:drivers/CMSIS/Include/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1360:drivers/CMSIS/Include/core_cm3.h ****   @{
1361:drivers/CMSIS/Include/core_cm3.h ****  */
1362:drivers/CMSIS/Include/core_cm3.h **** 
1363:drivers/CMSIS/Include/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
1364:drivers/CMSIS/Include/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1365:drivers/CMSIS/Include/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1366:drivers/CMSIS/Include/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1367:drivers/CMSIS/Include/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1368:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1369:drivers/CMSIS/Include/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1370:drivers/CMSIS/Include/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1371:drivers/CMSIS/Include/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1372:drivers/CMSIS/Include/core_cm3.h **** 
1373:drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1374:drivers/CMSIS/Include/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1375:drivers/CMSIS/Include/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1376:drivers/CMSIS/Include/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1377:drivers/CMSIS/Include/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1378:drivers/CMSIS/Include/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1379:drivers/CMSIS/Include/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1380:drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1381:drivers/CMSIS/Include/core_cm3.h **** 
1382:drivers/CMSIS/Include/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1383:drivers/CMSIS/Include/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1384:drivers/CMSIS/Include/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1385:drivers/CMSIS/Include/core_cm3.h **** #endif
1386:drivers/CMSIS/Include/core_cm3.h **** 
1387:drivers/CMSIS/Include/core_cm3.h **** /*@} */
1388:drivers/CMSIS/Include/core_cm3.h **** 
1389:drivers/CMSIS/Include/core_cm3.h **** 
1390:drivers/CMSIS/Include/core_cm3.h **** 
1391:drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
1392:drivers/CMSIS/Include/core_cm3.h ****  *                Hardware Abstraction Layer
1393:drivers/CMSIS/Include/core_cm3.h ****   Core Function Interface contains:
1394:drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Functions
1395:drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Functions
1396:drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Functions
1397:drivers/CMSIS/Include/core_cm3.h ****   - Core Register Access Functions
1398:drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
1399:drivers/CMSIS/Include/core_cm3.h **** /**
1400:drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
ARM GAS  /tmp/cc4VD8cB.s 			page 29


1401:drivers/CMSIS/Include/core_cm3.h **** */
1402:drivers/CMSIS/Include/core_cm3.h **** 
1403:drivers/CMSIS/Include/core_cm3.h **** 
1404:drivers/CMSIS/Include/core_cm3.h **** 
1405:drivers/CMSIS/Include/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1406:drivers/CMSIS/Include/core_cm3.h **** /**
1407:drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1408:drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1409:drivers/CMSIS/Include/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1410:drivers/CMSIS/Include/core_cm3.h ****   @{
1411:drivers/CMSIS/Include/core_cm3.h ****  */
1412:drivers/CMSIS/Include/core_cm3.h **** 
1413:drivers/CMSIS/Include/core_cm3.h **** /**
1414:drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Priority Grouping
1415:drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1416:drivers/CMSIS/Include/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1417:drivers/CMSIS/Include/core_cm3.h ****            Only values from 0..7 are used.
1418:drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1419:drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1420:drivers/CMSIS/Include/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1421:drivers/CMSIS/Include/core_cm3.h ****  */
1422:drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1423:drivers/CMSIS/Include/core_cm3.h **** {
1424:drivers/CMSIS/Include/core_cm3.h ****   uint32_t reg_value;
1425:drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1426:drivers/CMSIS/Include/core_cm3.h **** 
1427:drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1428:drivers/CMSIS/Include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  36              		.loc 2 1428 0
  37 0000 4FF6FF01 		movw	r1, #63743
1427:drivers/CMSIS/Include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  38              		.loc 2 1427 0
  39 0004 064A     		ldr	r2, .L2
1429:drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
1430:drivers/CMSIS/Include/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1431:drivers/CMSIS/Include/core_cm3.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
  40              		.loc 2 1431 0
  41 0006 0002     		lsls	r0, r0, #8
  42              	.LVL1:
1427:drivers/CMSIS/Include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  43              		.loc 2 1427 0
  44 0008 D368     		ldr	r3, [r2, #12]
  45              	.LVL2:
  46              		.loc 2 1431 0
  47 000a 00F4E060 		and	r0, r0, #1792
1428:drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
  48              		.loc 2 1428 0
  49 000e 0B40     		ands	r3, r3, r1
  50              	.LVL3:
  51 0010 43F0BF63 		orr	r3, r3, #100139008
  52              	.LVL4:
  53 0014 43F40033 		orr	r3, r3, #131072
1429:drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
  54              		.loc 2 1429 0
  55 0018 0343     		orrs	r3, r3, r0
  56              	.LVL5:
1432:drivers/CMSIS/Include/core_cm3.h ****   SCB->AIRCR =  reg_value;
ARM GAS  /tmp/cc4VD8cB.s 			page 30


  57              		.loc 2 1432 0
  58 001a D360     		str	r3, [r2, #12]
  59              	.LVL6:
  60 001c 7047     		bx	lr
  61              	.L3:
  62 001e 00BF     		.align	2
  63              	.L2:
  64 0020 00ED00E0 		.word	-536810240
  65              	.LBE41:
  66              	.LBE40:
  67              		.cfi_endproc
  68              	.LFE64:
  70              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
  71              		.align	1
  72              		.p2align 2,,3
  73              		.global	HAL_NVIC_SetPriority
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu softvfp
  79              	HAL_NVIC_SetPriority:
  80              	.LFB65:
 163:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 164:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 165:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   
 166:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 167:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
 168:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 169:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 170:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 171:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 172:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 173:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 174:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 175:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  PreemptPriority: The preemption priority for the IRQn channel.
 176:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 177:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority 
 178:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  SubPriority: the subpriority level for the IRQ channel.
 179:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 180:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.          
 181:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 182:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 183:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 184:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** { 
  81              		.loc 1 184 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86              	.LVL7:
  87              	.LBB42:
  88              	.LBB43:
1433:drivers/CMSIS/Include/core_cm3.h **** }
1434:drivers/CMSIS/Include/core_cm3.h **** 
1435:drivers/CMSIS/Include/core_cm3.h **** 
1436:drivers/CMSIS/Include/core_cm3.h **** /**
1437:drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Priority Grouping
ARM GAS  /tmp/cc4VD8cB.s 			page 31


1438:drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1439:drivers/CMSIS/Include/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1440:drivers/CMSIS/Include/core_cm3.h ****  */
1441:drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1442:drivers/CMSIS/Include/core_cm3.h **** {
1443:drivers/CMSIS/Include/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
  89              		.loc 2 1443 0
  90 0000 184B     		ldr	r3, .L12
  91              	.LBE43:
  92              	.LBE42:
  93              		.loc 1 184 0
  94 0002 70B4     		push	{r4, r5, r6}
  95              		.cfi_def_cfa_offset 12
  96              		.cfi_offset 4, -12
  97              		.cfi_offset 5, -8
  98              		.cfi_offset 6, -4
  99              	.LBB45:
 100              	.LBB44:
 101              		.loc 2 1443 0
 102 0004 DC68     		ldr	r4, [r3, #12]
 103 0006 C4F30224 		ubfx	r4, r4, #8, #3
 104              	.LVL8:
 105              	.LBE44:
 106              	.LBE45:
 107              	.LBB46:
 108              	.LBB47:
1444:drivers/CMSIS/Include/core_cm3.h **** }
1445:drivers/CMSIS/Include/core_cm3.h **** 
1446:drivers/CMSIS/Include/core_cm3.h **** 
1447:drivers/CMSIS/Include/core_cm3.h **** /**
1448:drivers/CMSIS/Include/core_cm3.h ****   \brief   Enable External Interrupt
1449:drivers/CMSIS/Include/core_cm3.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1450:drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1451:drivers/CMSIS/Include/core_cm3.h ****  */
1452:drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1453:drivers/CMSIS/Include/core_cm3.h **** {
1454:drivers/CMSIS/Include/core_cm3.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1455:drivers/CMSIS/Include/core_cm3.h **** }
1456:drivers/CMSIS/Include/core_cm3.h **** 
1457:drivers/CMSIS/Include/core_cm3.h **** 
1458:drivers/CMSIS/Include/core_cm3.h **** /**
1459:drivers/CMSIS/Include/core_cm3.h ****   \brief   Disable External Interrupt
1460:drivers/CMSIS/Include/core_cm3.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1461:drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1462:drivers/CMSIS/Include/core_cm3.h ****  */
1463:drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1464:drivers/CMSIS/Include/core_cm3.h **** {
1465:drivers/CMSIS/Include/core_cm3.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1466:drivers/CMSIS/Include/core_cm3.h **** }
1467:drivers/CMSIS/Include/core_cm3.h **** 
1468:drivers/CMSIS/Include/core_cm3.h **** 
1469:drivers/CMSIS/Include/core_cm3.h **** /**
1470:drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Pending Interrupt
1471:drivers/CMSIS/Include/core_cm3.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1472:drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1473:drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not pending.
1474:drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is pending.
ARM GAS  /tmp/cc4VD8cB.s 			page 32


1475:drivers/CMSIS/Include/core_cm3.h ****  */
1476:drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1477:drivers/CMSIS/Include/core_cm3.h **** {
1478:drivers/CMSIS/Include/core_cm3.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1479:drivers/CMSIS/Include/core_cm3.h **** }
1480:drivers/CMSIS/Include/core_cm3.h **** 
1481:drivers/CMSIS/Include/core_cm3.h **** 
1482:drivers/CMSIS/Include/core_cm3.h **** /**
1483:drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Pending Interrupt
1484:drivers/CMSIS/Include/core_cm3.h ****   \details Sets the pending bit of an external interrupt.
1485:drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1486:drivers/CMSIS/Include/core_cm3.h ****  */
1487:drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1488:drivers/CMSIS/Include/core_cm3.h **** {
1489:drivers/CMSIS/Include/core_cm3.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1490:drivers/CMSIS/Include/core_cm3.h **** }
1491:drivers/CMSIS/Include/core_cm3.h **** 
1492:drivers/CMSIS/Include/core_cm3.h **** 
1493:drivers/CMSIS/Include/core_cm3.h **** /**
1494:drivers/CMSIS/Include/core_cm3.h ****   \brief   Clear Pending Interrupt
1495:drivers/CMSIS/Include/core_cm3.h ****   \details Clears the pending bit of an external interrupt.
1496:drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1497:drivers/CMSIS/Include/core_cm3.h ****  */
1498:drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1499:drivers/CMSIS/Include/core_cm3.h **** {
1500:drivers/CMSIS/Include/core_cm3.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1501:drivers/CMSIS/Include/core_cm3.h **** }
1502:drivers/CMSIS/Include/core_cm3.h **** 
1503:drivers/CMSIS/Include/core_cm3.h **** 
1504:drivers/CMSIS/Include/core_cm3.h **** /**
1505:drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Active Interrupt
1506:drivers/CMSIS/Include/core_cm3.h ****   \details Reads the active register in NVIC and returns the active bit.
1507:drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1508:drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not active.
1509:drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is active.
1510:drivers/CMSIS/Include/core_cm3.h ****  */
1511:drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1512:drivers/CMSIS/Include/core_cm3.h **** {
1513:drivers/CMSIS/Include/core_cm3.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1514:drivers/CMSIS/Include/core_cm3.h **** }
1515:drivers/CMSIS/Include/core_cm3.h **** 
1516:drivers/CMSIS/Include/core_cm3.h **** 
1517:drivers/CMSIS/Include/core_cm3.h **** /**
1518:drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Interrupt Priority
1519:drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority of an interrupt.
1520:drivers/CMSIS/Include/core_cm3.h ****   \note    The priority cannot be set for every core interrupt.
1521:drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1522:drivers/CMSIS/Include/core_cm3.h ****   \param [in]  priority  Priority to set.
1523:drivers/CMSIS/Include/core_cm3.h ****  */
1524:drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1525:drivers/CMSIS/Include/core_cm3.h **** {
1526:drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1527:drivers/CMSIS/Include/core_cm3.h ****   {
1528:drivers/CMSIS/Include/core_cm3.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1529:drivers/CMSIS/Include/core_cm3.h ****   }
1530:drivers/CMSIS/Include/core_cm3.h ****   else
1531:drivers/CMSIS/Include/core_cm3.h ****   {
ARM GAS  /tmp/cc4VD8cB.s 			page 33


1532:drivers/CMSIS/Include/core_cm3.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1533:drivers/CMSIS/Include/core_cm3.h ****   }
1534:drivers/CMSIS/Include/core_cm3.h **** }
1535:drivers/CMSIS/Include/core_cm3.h **** 
1536:drivers/CMSIS/Include/core_cm3.h **** 
1537:drivers/CMSIS/Include/core_cm3.h **** /**
1538:drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Interrupt Priority
1539:drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority of an interrupt.
1540:drivers/CMSIS/Include/core_cm3.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1541:drivers/CMSIS/Include/core_cm3.h ****            or negative to specify an internal (core) interrupt.
1542:drivers/CMSIS/Include/core_cm3.h ****   \param [in]   IRQn  Interrupt number.
1543:drivers/CMSIS/Include/core_cm3.h ****   \return             Interrupt Priority.
1544:drivers/CMSIS/Include/core_cm3.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1545:drivers/CMSIS/Include/core_cm3.h ****  */
1546:drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1547:drivers/CMSIS/Include/core_cm3.h **** {
1548:drivers/CMSIS/Include/core_cm3.h **** 
1549:drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1550:drivers/CMSIS/Include/core_cm3.h ****   {
1551:drivers/CMSIS/Include/core_cm3.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1552:drivers/CMSIS/Include/core_cm3.h ****   }
1553:drivers/CMSIS/Include/core_cm3.h ****   else
1554:drivers/CMSIS/Include/core_cm3.h ****   {
1555:drivers/CMSIS/Include/core_cm3.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1556:drivers/CMSIS/Include/core_cm3.h ****   }
1557:drivers/CMSIS/Include/core_cm3.h **** }
1558:drivers/CMSIS/Include/core_cm3.h **** 
1559:drivers/CMSIS/Include/core_cm3.h **** 
1560:drivers/CMSIS/Include/core_cm3.h **** /**
1561:drivers/CMSIS/Include/core_cm3.h ****   \brief   Encode Priority
1562:drivers/CMSIS/Include/core_cm3.h ****   \details Encodes the priority for an interrupt with the given priority group,
1563:drivers/CMSIS/Include/core_cm3.h ****            preemptive priority value, and subpriority value.
1564:drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1565:drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1566:drivers/CMSIS/Include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1567:drivers/CMSIS/Include/core_cm3.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1568:drivers/CMSIS/Include/core_cm3.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1569:drivers/CMSIS/Include/core_cm3.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1570:drivers/CMSIS/Include/core_cm3.h ****  */
1571:drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1572:drivers/CMSIS/Include/core_cm3.h **** {
1573:drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1574:drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
1575:drivers/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
1576:drivers/CMSIS/Include/core_cm3.h **** 
1577:drivers/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 109              		.loc 2 1577 0
 110 000a C4F10706 		rsb	r6, r4, #7
 111 000e 042E     		cmp	r6, #4
1578:drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 112              		.loc 2 1578 0
 113 0010 04F10403 		add	r3, r4, #4
 114              	.LVL9:
1577:drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 115              		.loc 2 1577 0
 116 0014 28BF     		it	cs
 117 0016 0426     		movcs	r6, #4
ARM GAS  /tmp/cc4VD8cB.s 			page 34


 118              	.LVL10:
 119              		.loc 2 1578 0
 120 0018 062B     		cmp	r3, #6
 121 001a 17D9     		bls	.L8
 122 001c 0125     		movs	r5, #1
 123 001e 033C     		subs	r4, r4, #3
 124              	.LVL11:
 125 0020 A540     		lsls	r5, r5, r4
 126 0022 013D     		subs	r5, r5, #1
 127 0024 2A40     		ands	r2, r2, r5
 128              	.LVL12:
 129              	.L5:
1579:drivers/CMSIS/Include/core_cm3.h **** 
1580:drivers/CMSIS/Include/core_cm3.h ****   return (
1581:drivers/CMSIS/Include/core_cm3.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 130              		.loc 2 1581 0
 131 0026 0123     		movs	r3, #1
 132              	.LVL13:
 133 0028 B340     		lsls	r3, r3, r6
 134 002a 013B     		subs	r3, r3, #1
 135 002c 1940     		ands	r1, r1, r3
 136              	.LVL14:
 137 002e A140     		lsls	r1, r1, r4
 138              	.LBE47:
 139              	.LBE46:
 140              	.LBB50:
 141              	.LBB51:
1526:drivers/CMSIS/Include/core_cm3.h ****   {
 142              		.loc 2 1526 0
 143 0030 0028     		cmp	r0, #0
 144              	.LBE51:
 145              	.LBE50:
 146              	.LBB54:
 147              	.LBB48:
 148              		.loc 2 1581 0
 149 0032 41EA0201 		orr	r1, r1, r2
 150              	.LVL15:
 151              	.LBE48:
 152              	.LBE54:
 153              	.LBB55:
 154              	.LBB52:
1526:drivers/CMSIS/Include/core_cm3.h ****   {
 155              		.loc 2 1526 0
 156 0036 0CDB     		blt	.L11
1532:drivers/CMSIS/Include/core_cm3.h ****   }
 157              		.loc 2 1532 0
 158 0038 0901     		lsls	r1, r1, #4
 159 003a 00F16040 		add	r0, r0, #-536870912
 160              	.LVL16:
 161 003e C9B2     		uxtb	r1, r1
 162 0040 00F56140 		add	r0, r0, #57600
 163 0044 80F80013 		strb	r1, [r0, #768]
 164              	.LVL17:
 165              	.LBE52:
 166              	.LBE55:
 185:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00U;
 186:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   
ARM GAS  /tmp/cc4VD8cB.s 			page 35


 187:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 188:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 189:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 190:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   
 191:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 192:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   
 193:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 194:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 167              		.loc 1 194 0
 168 0048 70BC     		pop	{r4, r5, r6}
 169              		.cfi_remember_state
 170              		.cfi_restore 6
 171              		.cfi_restore 5
 172              		.cfi_restore 4
 173              		.cfi_def_cfa_offset 0
 174              	.LVL18:
 175 004a 7047     		bx	lr
 176              	.LVL19:
 177              	.L8:
 178              		.cfi_restore_state
 179              	.LBB56:
 180              	.LBB49:
1578:drivers/CMSIS/Include/core_cm3.h **** 
 181              		.loc 2 1578 0
 182 004c 0022     		movs	r2, #0
 183              	.LVL20:
 184 004e 1446     		mov	r4, r2
 185              	.LVL21:
 186 0050 E9E7     		b	.L5
 187              	.LVL22:
 188              	.L11:
 189              	.LBE49:
 190              	.LBE56:
 191              	.LBB57:
 192              	.LBB53:
1528:drivers/CMSIS/Include/core_cm3.h ****   }
 193              		.loc 2 1528 0
 194 0052 054B     		ldr	r3, .L12+4
 195 0054 00F00F00 		and	r0, r0, #15
 196              	.LVL23:
 197 0058 0901     		lsls	r1, r1, #4
 198 005a C9B2     		uxtb	r1, r1
 199 005c 0344     		add	r3, r3, r0
 200 005e 1976     		strb	r1, [r3, #24]
 201              	.LBE53:
 202              	.LBE57:
 203              		.loc 1 194 0
 204 0060 70BC     		pop	{r4, r5, r6}
 205              		.cfi_restore 4
 206              		.cfi_restore 5
 207              		.cfi_restore 6
 208              		.cfi_def_cfa_offset 0
 209              	.LVL24:
 210 0062 7047     		bx	lr
 211              	.L13:
 212              		.align	2
 213              	.L12:
ARM GAS  /tmp/cc4VD8cB.s 			page 36


 214 0064 00ED00E0 		.word	-536810240
 215 0068 FCEC00E0 		.word	-536810244
 216              		.cfi_endproc
 217              	.LFE65:
 219              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 220              		.align	1
 221              		.p2align 2,,3
 222              		.global	HAL_NVIC_EnableIRQ
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu softvfp
 228              	HAL_NVIC_EnableIRQ:
 229              	.LFB66:
 195:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 196:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 197:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Enables a device specific interrupt in the NVIC interrupt controller.
 198:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 199:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         function should be called before. 
 200:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 201:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 202:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 203:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 204:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 205:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 206:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 230              		.loc 1 206 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235              	.LVL25:
 236              	.LBB58:
 237              	.LBB59:
1454:drivers/CMSIS/Include/core_cm3.h **** }
 238              		.loc 2 1454 0
 239 0000 0123     		movs	r3, #1
 240 0002 00F01F01 		and	r1, r0, #31
 241 0006 034A     		ldr	r2, .L15
 242 0008 4009     		lsrs	r0, r0, #5
 243              	.LVL26:
 244 000a 8B40     		lsls	r3, r3, r1
 245 000c 42F82030 		str	r3, [r2, r0, lsl #2]
 246              	.LVL27:
 247 0010 7047     		bx	lr
 248              	.L16:
 249 0012 00BF     		.align	2
 250              	.L15:
 251 0014 00E100E0 		.word	-536813312
 252              	.LBE59:
 253              	.LBE58:
 254              		.cfi_endproc
 255              	.LFE66:
 257              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 258              		.align	1
 259              		.p2align 2,,3
 260              		.global	HAL_NVIC_DisableIRQ
ARM GAS  /tmp/cc4VD8cB.s 			page 37


 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu softvfp
 266              	HAL_NVIC_DisableIRQ:
 267              	.LFB67:
 207:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 208:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 209:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 210:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Enable interrupt */
 211:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 212:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 213:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 214:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 215:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Disables a device specific interrupt in the NVIC interrupt controller.
 216:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 217:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 218:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 219:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 220:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 221:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 222:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 268              		.loc 1 222 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 273              	.LVL28:
 274              	.LBB60:
 275              	.LBB61:
1465:drivers/CMSIS/Include/core_cm3.h **** }
 276              		.loc 2 1465 0
 277 0000 0122     		movs	r2, #1
 278 0002 4309     		lsrs	r3, r0, #5
 279 0004 0449     		ldr	r1, .L18
 280 0006 00F01F00 		and	r0, r0, #31
 281              	.LVL29:
 282 000a 2033     		adds	r3, r3, #32
 283 000c 02FA00F0 		lsl	r0, r2, r0
 284 0010 41F82300 		str	r0, [r1, r3, lsl #2]
 285              	.LVL30:
 286 0014 7047     		bx	lr
 287              	.L19:
 288 0016 00BF     		.align	2
 289              	.L18:
 290 0018 00E100E0 		.word	-536813312
 291              	.LBE61:
 292              	.LBE60:
 293              		.cfi_endproc
 294              	.LFE67:
 296              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 297              		.align	1
 298              		.p2align 2,,3
 299              		.global	HAL_NVIC_SystemReset
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
ARM GAS  /tmp/cc4VD8cB.s 			page 38


 303              		.fpu softvfp
 305              	HAL_NVIC_SystemReset:
 306              	.LFB68:
 223:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 224:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 225:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 226:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Disable interrupt */
 227:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 228:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 229:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 230:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 231:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Initiates a system reset request to reset the MCU.
 232:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 233:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 234:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 235:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 307              		.loc 1 235 0
 308              		.cfi_startproc
 309              		@ Volatile: function does not return.
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 313              	.LBB70:
 314              	.LBB71:
 315              	.LBB72:
 316              	.LBB73:
 317              		.file 3 "drivers/CMSIS/Include/cmsis_gcc.h"
   1:drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
ARM GAS  /tmp/cc4VD8cB.s 			page 39


  31:drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc4VD8cB.s 			page 40


  88:drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
ARM GAS  /tmp/cc4VD8cB.s 			page 41


 145:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/cc4VD8cB.s 			page 42


 202:drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
ARM GAS  /tmp/cc4VD8cB.s 			page 43


 259:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc4VD8cB.s 			page 44


 316:drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc4VD8cB.s 			page 45


 373:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
ARM GAS  /tmp/cc4VD8cB.s 			page 46


 318              		.loc 3 429 0
 319              		.syntax unified
 320              	@ 429 "drivers/CMSIS/Include/cmsis_gcc.h" 1
 321 0000 BFF34F8F 		dsb 0xF
 322              	@ 0 "" 2
 323              		.thumb
 324              		.syntax unified
 325              	.LBE73:
 326              	.LBE72:
1582:drivers/CMSIS/Include/core_cm3.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1583:drivers/CMSIS/Include/core_cm3.h ****          );
1584:drivers/CMSIS/Include/core_cm3.h **** }
1585:drivers/CMSIS/Include/core_cm3.h **** 
1586:drivers/CMSIS/Include/core_cm3.h **** 
1587:drivers/CMSIS/Include/core_cm3.h **** /**
1588:drivers/CMSIS/Include/core_cm3.h ****   \brief   Decode Priority
1589:drivers/CMSIS/Include/core_cm3.h ****   \details Decodes an interrupt priority value with a given priority group to
1590:drivers/CMSIS/Include/core_cm3.h ****            preemptive priority value and subpriority value.
1591:drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1592:drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1593:drivers/CMSIS/Include/core_cm3.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1594:drivers/CMSIS/Include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1595:drivers/CMSIS/Include/core_cm3.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1596:drivers/CMSIS/Include/core_cm3.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1597:drivers/CMSIS/Include/core_cm3.h ****  */
1598:drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1599:drivers/CMSIS/Include/core_cm3.h **** {
1600:drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1601:drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
1602:drivers/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
1603:drivers/CMSIS/Include/core_cm3.h **** 
1604:drivers/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1605:drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1606:drivers/CMSIS/Include/core_cm3.h **** 
1607:drivers/CMSIS/Include/core_cm3.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1608:drivers/CMSIS/Include/core_cm3.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1609:drivers/CMSIS/Include/core_cm3.h **** }
1610:drivers/CMSIS/Include/core_cm3.h **** 
1611:drivers/CMSIS/Include/core_cm3.h **** 
1612:drivers/CMSIS/Include/core_cm3.h **** /**
1613:drivers/CMSIS/Include/core_cm3.h ****   \brief   System Reset
1614:drivers/CMSIS/Include/core_cm3.h ****   \details Initiates a system reset request to reset the MCU.
1615:drivers/CMSIS/Include/core_cm3.h ****  */
1616:drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1617:drivers/CMSIS/Include/core_cm3.h **** {
1618:drivers/CMSIS/Include/core_cm3.h ****   __DSB();                                                          /* Ensure all outstanding memor
1619:drivers/CMSIS/Include/core_cm3.h ****                                                                        buffered write are completed
1620:drivers/CMSIS/Include/core_cm3.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1621:drivers/CMSIS/Include/core_cm3.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 327              		.loc 2 1621 0
 328 0004 0549     		ldr	r1, .L22
1620:drivers/CMSIS/Include/core_cm3.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 329              		.loc 2 1620 0
 330 0006 064B     		ldr	r3, .L22+4
 331              		.loc 2 1621 0
 332 0008 CA68     		ldr	r2, [r1, #12]
 333 000a 02F4E062 		and	r2, r2, #1792
ARM GAS  /tmp/cc4VD8cB.s 			page 47


1620:drivers/CMSIS/Include/core_cm3.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 334              		.loc 2 1620 0
 335 000e 1343     		orrs	r3, r3, r2
 336 0010 CB60     		str	r3, [r1, #12]
 337              	.LBB74:
 338              	.LBB75:
 339              		.loc 3 429 0
 340              		.syntax unified
 341              	@ 429 "drivers/CMSIS/Include/cmsis_gcc.h" 1
 342 0012 BFF34F8F 		dsb 0xF
 343              	@ 0 "" 2
 344              		.thumb
 345              		.syntax unified
 346              	.L21:
 347              	.LBE75:
 348              	.LBE74:
 349              	.LBB76:
 350              	.LBB77:
 375:drivers/CMSIS/Include/cmsis_gcc.h **** }
 351              		.loc 3 375 0
 352              		.syntax unified
 353              	@ 375 "drivers/CMSIS/Include/cmsis_gcc.h" 1
 354 0016 00BF     		nop
 355              	@ 0 "" 2
 356              		.thumb
 357              		.syntax unified
 358 0018 FDE7     		b	.L21
 359              	.L23:
 360 001a 00BF     		.align	2
 361              	.L22:
 362 001c 00ED00E0 		.word	-536810240
 363 0020 0400FA05 		.word	100270084
 364              	.LBE77:
 365              	.LBE76:
 366              	.LBE71:
 367              	.LBE70:
 368              		.cfi_endproc
 369              	.LFE68:
 371              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 372              		.align	1
 373              		.p2align 2,,3
 374              		.global	HAL_SYSTICK_Config
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu softvfp
 380              	HAL_SYSTICK_Config:
 381              	.LFB69:
 236:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* System Reset */
 237:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   NVIC_SystemReset();
 238:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 239:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 240:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 241:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 242:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 243:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
 244:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
ARM GAS  /tmp/cc4VD8cB.s 			page 48


 245:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                  - 1  Function failed.
 246:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 247:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 248:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 382              		.loc 1 248 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387              	.LVL31:
 388              	.LBB78:
 389              	.LBB79:
1622:drivers/CMSIS/Include/core_cm3.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1623:drivers/CMSIS/Include/core_cm3.h ****   __DSB();                                                          /* Ensure completion of memory 
1624:drivers/CMSIS/Include/core_cm3.h **** 
1625:drivers/CMSIS/Include/core_cm3.h ****   for(;;)                                                           /* wait until reset */
1626:drivers/CMSIS/Include/core_cm3.h ****   {
1627:drivers/CMSIS/Include/core_cm3.h ****     __NOP();
1628:drivers/CMSIS/Include/core_cm3.h ****   }
1629:drivers/CMSIS/Include/core_cm3.h **** }
1630:drivers/CMSIS/Include/core_cm3.h **** 
1631:drivers/CMSIS/Include/core_cm3.h **** /*@} end of CMSIS_Core_NVICFunctions */
1632:drivers/CMSIS/Include/core_cm3.h **** 
1633:drivers/CMSIS/Include/core_cm3.h **** 
1634:drivers/CMSIS/Include/core_cm3.h **** 
1635:drivers/CMSIS/Include/core_cm3.h **** /* ##################################    SysTick function  ########################################
1636:drivers/CMSIS/Include/core_cm3.h **** /**
1637:drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1638:drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1639:drivers/CMSIS/Include/core_cm3.h ****   \brief    Functions that configure the System.
1640:drivers/CMSIS/Include/core_cm3.h ****   @{
1641:drivers/CMSIS/Include/core_cm3.h ****  */
1642:drivers/CMSIS/Include/core_cm3.h **** 
1643:drivers/CMSIS/Include/core_cm3.h **** #if (__Vendor_SysTickConfig == 0U)
1644:drivers/CMSIS/Include/core_cm3.h **** 
1645:drivers/CMSIS/Include/core_cm3.h **** /**
1646:drivers/CMSIS/Include/core_cm3.h ****   \brief   System Tick Configuration
1647:drivers/CMSIS/Include/core_cm3.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
1648:drivers/CMSIS/Include/core_cm3.h ****            Counter is in free running mode to generate periodic interrupts.
1649:drivers/CMSIS/Include/core_cm3.h ****   \param [in]  ticks  Number of ticks between two interrupts.
1650:drivers/CMSIS/Include/core_cm3.h ****   \return          0  Function succeeded.
1651:drivers/CMSIS/Include/core_cm3.h ****   \return          1  Function failed.
1652:drivers/CMSIS/Include/core_cm3.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1653:drivers/CMSIS/Include/core_cm3.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
1654:drivers/CMSIS/Include/core_cm3.h ****            must contain a vendor-specific implementation of this function.
1655:drivers/CMSIS/Include/core_cm3.h ****  */
1656:drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1657:drivers/CMSIS/Include/core_cm3.h **** {
1658:drivers/CMSIS/Include/core_cm3.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 390              		.loc 2 1658 0
 391 0000 0138     		subs	r0, r0, #1
 392              	.LVL32:
 393 0002 B0F1807F 		cmp	r0, #16777216
 394 0006 0DD2     		bcs	.L26
 395              	.LBE79:
 396              	.LBE78:
 397              		.loc 1 248 0
ARM GAS  /tmp/cc4VD8cB.s 			page 49


 398 0008 30B4     		push	{r4, r5}
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 4, -8
 401              		.cfi_offset 5, -4
 402              	.LBB89:
 403              	.LBB86:
 404              	.LBB80:
 405              	.LBB81:
1528:drivers/CMSIS/Include/core_cm3.h ****   }
 406              		.loc 2 1528 0
 407 000a F025     		movs	r5, #240
 408              	.LBE81:
 409              	.LBE80:
1659:drivers/CMSIS/Include/core_cm3.h ****   {
1660:drivers/CMSIS/Include/core_cm3.h ****     return (1UL);                                                   /* Reload value impossible */
1661:drivers/CMSIS/Include/core_cm3.h ****   }
1662:drivers/CMSIS/Include/core_cm3.h **** 
1663:drivers/CMSIS/Include/core_cm3.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
1664:drivers/CMSIS/Include/core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
1665:drivers/CMSIS/Include/core_cm3.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 410              		.loc 2 1665 0
 411 000c 0022     		movs	r2, #0
1666:drivers/CMSIS/Include/core_cm3.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 412              		.loc 2 1666 0
 413 000e 0721     		movs	r1, #7
1663:drivers/CMSIS/Include/core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 414              		.loc 2 1663 0
 415 0010 054B     		ldr	r3, .L31
 416              	.LBB84:
 417              	.LBB82:
1528:drivers/CMSIS/Include/core_cm3.h ****   }
 418              		.loc 2 1528 0
 419 0012 064C     		ldr	r4, .L31+4
 420              	.LBE82:
 421              	.LBE84:
1663:drivers/CMSIS/Include/core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 422              		.loc 2 1663 0
 423 0014 5860     		str	r0, [r3, #4]
 424              	.LVL33:
 425              	.LBB85:
 426              	.LBB83:
1528:drivers/CMSIS/Include/core_cm3.h ****   }
 427              		.loc 2 1528 0
 428 0016 84F82350 		strb	r5, [r4, #35]
 429              	.LVL34:
 430              	.LBE83:
 431              	.LBE85:
1667:drivers/CMSIS/Include/core_cm3.h ****                    SysTick_CTRL_TICKINT_Msk   |
1668:drivers/CMSIS/Include/core_cm3.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
1669:drivers/CMSIS/Include/core_cm3.h ****   return (0UL);                                                     /* Function successful */
 432              		.loc 2 1669 0
 433 001a 1046     		mov	r0, r2
 434              	.LVL35:
 435              	.LBE86:
 436              	.LBE89:
 249:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 250:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
ARM GAS  /tmp/cc4VD8cB.s 			page 50


 437              		.loc 1 250 0
 438 001c 30BC     		pop	{r4, r5}
 439              		.cfi_restore 5
 440              		.cfi_restore 4
 441              		.cfi_def_cfa_offset 0
 442              	.LBB90:
 443              	.LBB87:
1665:drivers/CMSIS/Include/core_cm3.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 444              		.loc 2 1665 0
 445 001e 9A60     		str	r2, [r3, #8]
1666:drivers/CMSIS/Include/core_cm3.h ****                    SysTick_CTRL_TICKINT_Msk   |
 446              		.loc 2 1666 0
 447 0020 1960     		str	r1, [r3]
 448              	.LBE87:
 449              	.LBE90:
 450              		.loc 1 250 0
 451 0022 7047     		bx	lr
 452              	.L26:
 453              	.LBB91:
 454              	.LBB88:
1660:drivers/CMSIS/Include/core_cm3.h ****   }
 455              		.loc 2 1660 0
 456 0024 0120     		movs	r0, #1
 457              	.LVL36:
 458              	.LBE88:
 459              	.LBE91:
 249:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 460              		.loc 1 249 0
 461 0026 7047     		bx	lr
 462              	.L32:
 463              		.align	2
 464              	.L31:
 465 0028 10E000E0 		.word	-536813552
 466 002c 00ED00E0 		.word	-536810240
 467              		.cfi_endproc
 468              	.LFE69:
 470              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 471              		.align	1
 472              		.p2align 2,,3
 473              		.global	HAL_NVIC_GetPriorityGrouping
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 477              		.fpu softvfp
 479              	HAL_NVIC_GetPriorityGrouping:
 480              	.LFB70:
 251:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 252:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @}
 253:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 254:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 255:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group2 Peripheral Control functions
 256:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *  @brief   Cortex control functions 
 257:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *
 258:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** @verbatim   
 259:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ==============================================================================
 260:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 261:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ==============================================================================
ARM GAS  /tmp/cc4VD8cB.s 			page 51


 262:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     [..]
 263:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 264:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities. 
 265:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****  
 266:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****       
 267:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** @endverbatim
 268:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @{
 269:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 270:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 271:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** #if (__MPU_PRESENT == 1U)
 272:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 273:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Disables the MPU
 274:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 275:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 276:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_MPU_Disable(void)
 277:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 278:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Make sure outstanding transfers are done */
 279:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   __DMB();
 280:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 281:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Disable fault exceptions */
 282:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 283:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   
 284:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Disable the MPU and clear the control register*/
 285:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   MPU->CTRL = 0U;
 286:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 287:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 288:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 289:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Enable the MPU.
 290:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  MPU_Control: Specifies the control mode of the MPU during hard fault, 
 291:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *          NMI, FAULTMASK and privileged access to the default memory 
 292:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 293:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
 294:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 295:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 296:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 297:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 298:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 299:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
 300:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 301:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Enable the MPU */
 302:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 303:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   
 304:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Enable fault exceptions */
 305:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 306:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   
 307:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Ensure MPU setting take effects */
 308:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   __DSB();
 309:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   __ISB();
 310:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 311:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 312:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 313:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Initializes and configures the Region and the memory to be protected.
 314:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  MPU_Init: Pointer to a MPU_Region_InitTypeDef structure that contains
 315:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                the initialization and configuration information.
 316:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 317:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 318:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
ARM GAS  /tmp/cc4VD8cB.s 			page 52


 319:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 320:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 321:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 322:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 323:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 324:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Set the Region number */
 325:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 326:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 327:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   if ((MPU_Init->Enable) != RESET)
 328:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   {
 329:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     /* Check the parameters */
 330:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 331:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 332:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 333:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 334:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 335:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 336:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 337:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 338:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     
 339:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     MPU->RBAR = MPU_Init->BaseAddress;
 340:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 341:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 342:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 343:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 344:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 345:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 346:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 347:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 348:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 349:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   }
 350:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   else
 351:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   {
 352:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     MPU->RBAR = 0x00U;
 353:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     MPU->RASR = 0x00U;
 354:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   }
 355:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 356:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** #endif /* __MPU_PRESENT */
 357:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 358:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 359:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Gets the priority grouping field from the NVIC Interrupt Controller.
 360:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 361:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 362:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 363:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 481              		.loc 1 363 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486              	.LBB92:
 487              	.LBB93:
1443:drivers/CMSIS/Include/core_cm3.h **** }
 488              		.loc 2 1443 0
 489 0000 024B     		ldr	r3, .L34
 490 0002 D868     		ldr	r0, [r3, #12]
 491              	.LBE93:
ARM GAS  /tmp/cc4VD8cB.s 			page 53


 492              	.LBE92:
 364:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 365:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 366:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 493              		.loc 1 366 0
 494 0004 C0F30220 		ubfx	r0, r0, #8, #3
 495 0008 7047     		bx	lr
 496              	.L35:
 497 000a 00BF     		.align	2
 498              	.L34:
 499 000c 00ED00E0 		.word	-536810240
 500              		.cfi_endproc
 501              	.LFE70:
 503              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 504              		.align	1
 505              		.p2align 2,,3
 506              		.global	HAL_NVIC_GetPriority
 507              		.syntax unified
 508              		.thumb
 509              		.thumb_func
 510              		.fpu softvfp
 512              	HAL_NVIC_GetPriority:
 513              	.LFB71:
 367:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 368:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 369:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Gets the priority of an interrupt.
 370:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 371:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 372:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 373:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param   PriorityGroup: the priority grouping bits length.
 374:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 375:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 376:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                      4 bits for subpriority
 377:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 378:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                      3 bits for subpriority
 379:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 380:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                      2 bits for subpriority
 381:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 382:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                      1 bits for subpriority
 383:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 384:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                      0 bits for subpriority
 385:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  pPreemptPriority: Pointer on the Preemptive priority value (starting from 0).
 386:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  pSubPriority: Pointer on the Subpriority value (starting from 0).
 387:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 388:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 389:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 390:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 514              		.loc 1 390 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 519              	.LVL37:
 520              	.LBB94:
 521              	.LBB95:
1549:drivers/CMSIS/Include/core_cm3.h ****   {
 522              		.loc 2 1549 0
ARM GAS  /tmp/cc4VD8cB.s 			page 54


 523 0000 0028     		cmp	r0, #0
 524              	.LVL38:
 525              	.LBE95:
 526              	.LBE94:
 527              		.loc 1 390 0
 528 0002 70B4     		push	{r4, r5, r6}
 529              		.cfi_def_cfa_offset 12
 530              		.cfi_offset 4, -12
 531              		.cfi_offset 5, -8
 532              		.cfi_offset 6, -4
 533              	.LBB98:
 534              	.LBB96:
1549:drivers/CMSIS/Include/core_cm3.h ****   {
 535              		.loc 2 1549 0
 536 0004 22DB     		blt	.L42
1555:drivers/CMSIS/Include/core_cm3.h ****   }
 537              		.loc 2 1555 0
 538 0006 00F16040 		add	r0, r0, #-536870912
 539 000a 00F56140 		add	r0, r0, #57600
 540 000e 90F80043 		ldrb	r4, [r0, #768]	@ zero_extendqisi2
 541 0012 2409     		lsrs	r4, r4, #4
 542              	.L38:
 543              	.LVL39:
 544              	.LBE96:
 545              	.LBE98:
 546              	.LBB99:
 547              	.LBB100:
1600:drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
 548              		.loc 2 1600 0
 549 0014 01F00701 		and	r1, r1, #7
 550              	.LVL40:
1604:drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 551              		.loc 2 1604 0
 552 0018 C1F10706 		rsb	r6, r1, #7
 553 001c 042E     		cmp	r6, #4
1605:drivers/CMSIS/Include/core_cm3.h **** 
 554              		.loc 2 1605 0
 555 001e 01F10400 		add	r0, r1, #4
1604:drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 556              		.loc 2 1604 0
 557 0022 28BF     		it	cs
 558 0024 0426     		movcs	r6, #4
 559              	.LVL41:
1605:drivers/CMSIS/Include/core_cm3.h **** 
 560              		.loc 2 1605 0
 561 0026 0628     		cmp	r0, #6
 562 0028 0DD9     		bls	.L40
 563 002a 0125     		movs	r5, #1
 564 002c 0339     		subs	r1, r1, #3
 565              	.LVL42:
 566 002e 8D40     		lsls	r5, r5, r1
 567 0030 013D     		subs	r5, r5, #1
 568 0032 2540     		ands	r5, r5, r4
 569              	.LVL43:
 570              	.L39:
1607:drivers/CMSIS/Include/core_cm3.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 571              		.loc 2 1607 0
ARM GAS  /tmp/cc4VD8cB.s 			page 55


 572 0034 0120     		movs	r0, #1
 573              	.LVL44:
 574 0036 B040     		lsls	r0, r0, r6
 575 0038 CC40     		lsrs	r4, r4, r1
 576 003a 411E     		subs	r1, r0, #1
 577              	.LVL45:
 578 003c 2140     		ands	r1, r1, r4
 579 003e 1160     		str	r1, [r2]
1608:drivers/CMSIS/Include/core_cm3.h **** }
 580              		.loc 2 1608 0
 581 0040 1D60     		str	r5, [r3]
 582              	.LVL46:
 583              	.LBE100:
 584              	.LBE99:
 391:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 392:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 393:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 394:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 395:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 585              		.loc 1 395 0
 586 0042 70BC     		pop	{r4, r5, r6}
 587              		.cfi_remember_state
 588              		.cfi_restore 6
 589              		.cfi_restore 5
 590              		.cfi_restore 4
 591              		.cfi_def_cfa_offset 0
 592 0044 7047     		bx	lr
 593              	.LVL47:
 594              	.L40:
 595              		.cfi_restore_state
 596              	.LBB102:
 597              	.LBB101:
1605:drivers/CMSIS/Include/core_cm3.h **** 
 598              		.loc 2 1605 0
 599 0046 0025     		movs	r5, #0
 600 0048 2946     		mov	r1, r5
 601              	.LVL48:
 602 004a F3E7     		b	.L39
 603              	.LVL49:
 604              	.L42:
 605              	.LBE101:
 606              	.LBE102:
 607              	.LBB103:
 608              	.LBB97:
1551:drivers/CMSIS/Include/core_cm3.h ****   }
 609              		.loc 2 1551 0
 610 004c 034C     		ldr	r4, .L43
 611 004e 00F00F00 		and	r0, r0, #15
 612 0052 0444     		add	r4, r4, r0
 613 0054 247E     		ldrb	r4, [r4, #24]	@ zero_extendqisi2
 614 0056 2409     		lsrs	r4, r4, #4
 615 0058 DCE7     		b	.L38
 616              	.L44:
 617 005a 00BF     		.align	2
 618              	.L43:
 619 005c FCEC00E0 		.word	-536810244
 620              	.LBE97:
ARM GAS  /tmp/cc4VD8cB.s 			page 56


 621              	.LBE103:
 622              		.cfi_endproc
 623              	.LFE71:
 625              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 626              		.align	1
 627              		.p2align 2,,3
 628              		.global	HAL_NVIC_SetPendingIRQ
 629              		.syntax unified
 630              		.thumb
 631              		.thumb_func
 632              		.fpu softvfp
 634              	HAL_NVIC_SetPendingIRQ:
 635              	.LFB72:
 396:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 397:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 398:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Sets Pending bit of an external interrupt.
 399:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 400:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 401:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 402:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 403:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 404:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 405:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 636              		.loc 1 405 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 640              		@ link register save eliminated.
 641              	.LVL50:
 642              	.LBB104:
 643              	.LBB105:
1489:drivers/CMSIS/Include/core_cm3.h **** }
 644              		.loc 2 1489 0
 645 0000 0122     		movs	r2, #1
 646 0002 4309     		lsrs	r3, r0, #5
 647 0004 0449     		ldr	r1, .L46
 648 0006 00F01F00 		and	r0, r0, #31
 649              	.LVL51:
 650 000a 4033     		adds	r3, r3, #64
 651 000c 02FA00F0 		lsl	r0, r2, r0
 652 0010 41F82300 		str	r0, [r1, r3, lsl #2]
 653              	.LVL52:
 654 0014 7047     		bx	lr
 655              	.L47:
 656 0016 00BF     		.align	2
 657              	.L46:
 658 0018 00E100E0 		.word	-536813312
 659              	.LBE105:
 660              	.LBE104:
 661              		.cfi_endproc
 662              	.LFE72:
 664              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 665              		.align	1
 666              		.p2align 2,,3
 667              		.global	HAL_NVIC_GetPendingIRQ
 668              		.syntax unified
 669              		.thumb
ARM GAS  /tmp/cc4VD8cB.s 			page 57


 670              		.thumb_func
 671              		.fpu softvfp
 673              	HAL_NVIC_GetPendingIRQ:
 674              	.LFB73:
 406:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 407:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 408:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   
 409:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Set interrupt pending */
 410:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 411:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 412:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 413:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 414:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Gets Pending Interrupt (reads the pending register in the NVIC 
 415:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         and returns the pending bit for the specified interrupt).
 416:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 417:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 418:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 419:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 420:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 421:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 422:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 423:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 675              		.loc 1 423 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              		@ link register save eliminated.
 680              	.LVL53:
 681              	.LBB106:
 682              	.LBB107:
1478:drivers/CMSIS/Include/core_cm3.h **** }
 683              		.loc 2 1478 0
 684 0000 054A     		ldr	r2, .L49
 685 0002 4309     		lsrs	r3, r0, #5
 686 0004 4033     		adds	r3, r3, #64
 687 0006 52F82330 		ldr	r3, [r2, r3, lsl #2]
 688              	.LVL54:
 689 000a 00F01F00 		and	r0, r0, #31
 690              	.LVL55:
 691 000e 23FA00F0 		lsr	r0, r3, r0
 692              	.LBE107:
 693              	.LBE106:
 424:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 425:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 426:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 427:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 428:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 429:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 694              		.loc 1 429 0
 695 0012 00F00100 		and	r0, r0, #1
 696 0016 7047     		bx	lr
 697              	.L50:
 698              		.align	2
 699              	.L49:
 700 0018 00E100E0 		.word	-536813312
 701              		.cfi_endproc
 702              	.LFE73:
ARM GAS  /tmp/cc4VD8cB.s 			page 58


 704              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 705              		.align	1
 706              		.p2align 2,,3
 707              		.global	HAL_NVIC_ClearPendingIRQ
 708              		.syntax unified
 709              		.thumb
 710              		.thumb_func
 711              		.fpu softvfp
 713              	HAL_NVIC_ClearPendingIRQ:
 714              	.LFB74:
 430:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 431:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 432:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Clears the pending bit of an external interrupt.
 433:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 434:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 435:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 436:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 437:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 438:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 439:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 715              		.loc 1 439 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720              	.LVL56:
 721              	.LBB108:
 722              	.LBB109:
1500:drivers/CMSIS/Include/core_cm3.h **** }
 723              		.loc 2 1500 0
 724 0000 0122     		movs	r2, #1
 725 0002 4309     		lsrs	r3, r0, #5
 726 0004 0449     		ldr	r1, .L52
 727 0006 00F01F00 		and	r0, r0, #31
 728              	.LVL57:
 729 000a 6033     		adds	r3, r3, #96
 730 000c 02FA00F0 		lsl	r0, r2, r0
 731 0010 41F82300 		str	r0, [r1, r3, lsl #2]
 732              	.LVL58:
 733 0014 7047     		bx	lr
 734              	.L53:
 735 0016 00BF     		.align	2
 736              	.L52:
 737 0018 00E100E0 		.word	-536813312
 738              	.LBE109:
 739              	.LBE108:
 740              		.cfi_endproc
 741              	.LFE74:
 743              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 744              		.align	1
 745              		.p2align 2,,3
 746              		.global	HAL_NVIC_GetActive
 747              		.syntax unified
 748              		.thumb
 749              		.thumb_func
 750              		.fpu softvfp
 752              	HAL_NVIC_GetActive:
ARM GAS  /tmp/cc4VD8cB.s 			page 59


 753              	.LFB75:
 440:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 441:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 442:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 443:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Clear pending interrupt */
 444:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 445:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 446:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 447:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 448:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief Gets active interrupt ( reads the active register in NVIC and returns the active bit).
 449:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param IRQn External interrupt number
 450:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 451:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 452:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 453:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 454:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 455:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 456:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 754              		.loc 1 456 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 758              		@ link register save eliminated.
 759              	.LVL59:
 760              	.LBB110:
 761              	.LBB111:
1513:drivers/CMSIS/Include/core_cm3.h **** }
 762              		.loc 2 1513 0
 763 0000 054A     		ldr	r2, .L55
 764 0002 4309     		lsrs	r3, r0, #5
 765 0004 8033     		adds	r3, r3, #128
 766 0006 52F82330 		ldr	r3, [r2, r3, lsl #2]
 767              	.LVL60:
 768 000a 00F01F00 		and	r0, r0, #31
 769              	.LVL61:
 770 000e 23FA00F0 		lsr	r0, r3, r0
 771              	.LBE111:
 772              	.LBE110:
 457:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 458:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 459:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 460:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 461:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 462:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 773              		.loc 1 462 0
 774 0012 00F00100 		and	r0, r0, #1
 775 0016 7047     		bx	lr
 776              	.L56:
 777              		.align	2
 778              	.L55:
 779 0018 00E100E0 		.word	-536813312
 780              		.cfi_endproc
 781              	.LFE75:
 783              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 784              		.align	1
 785              		.p2align 2,,3
 786              		.global	HAL_SYSTICK_CLKSourceConfig
ARM GAS  /tmp/cc4VD8cB.s 			page 60


 787              		.syntax unified
 788              		.thumb
 789              		.thumb_func
 790              		.fpu softvfp
 792              	HAL_SYSTICK_CLKSourceConfig:
 793              	.LFB76:
 463:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 464:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 465:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Configures the SysTick clock source.
 466:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  CLKSource: specifies the SysTick clock source.
 467:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 468:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 469:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 470:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 471:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 472:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 473:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 794              		.loc 1 473 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 799              	.LVL62:
 474:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 475:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 476:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 477:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   {
 478:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 800              		.loc 1 478 0
 801 0000 044A     		ldr	r2, .L60
 476:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   {
 802              		.loc 1 476 0
 803 0002 0428     		cmp	r0, #4
 804              		.loc 1 478 0
 805 0004 1368     		ldr	r3, [r2]
 806 0006 0CBF     		ite	eq
 807 0008 43F00403 		orreq	r3, r3, #4
 479:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   }
 480:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   else
 481:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   {
 482:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 808              		.loc 1 482 0
 809 000c 23F00403 		bicne	r3, r3, #4
 810 0010 1360     		str	r3, [r2]
 811 0012 7047     		bx	lr
 812              	.L61:
 813              		.align	2
 814              	.L60:
 815 0014 10E000E0 		.word	-536813552
 816              		.cfi_endproc
 817              	.LFE76:
 819              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 820              		.align	1
 821              		.p2align 2,,3
 822              		.weak	HAL_SYSTICK_Callback
 823              		.syntax unified
 824              		.thumb
ARM GAS  /tmp/cc4VD8cB.s 			page 61


 825              		.thumb_func
 826              		.fpu softvfp
 828              	HAL_SYSTICK_Callback:
 829              	.LFB78:
 483:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   }
 484:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 485:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 486:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 487:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  This function handles SYSTICK interrupt request.
 488:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 489:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 490:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 491:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 492:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 493:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 494:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 495:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 496:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 497:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 498:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 499:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 500:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 830              		.loc 1 500 0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              		@ link register save eliminated.
 835 0000 7047     		bx	lr
 836              		.cfi_endproc
 837              	.LFE78:
 839 0002 00BF     		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 840              		.align	1
 841              		.p2align 2,,3
 842              		.global	HAL_SYSTICK_IRQHandler
 843              		.syntax unified
 844              		.thumb
 845              		.thumb_func
 846              		.fpu softvfp
 848              	HAL_SYSTICK_IRQHandler:
 849              	.LFB77:
 491:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 850              		.loc 1 491 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 491:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 854              		.loc 1 491 0
 855 0000 08B5     		push	{r3, lr}
 856              		.cfi_def_cfa_offset 8
 857              		.cfi_offset 3, -8
 858              		.cfi_offset 14, -4
 492:drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 859              		.loc 1 492 0
 860 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 861              	.LVL63:
 862 0006 08BD     		pop	{r3, pc}
 863              		.cfi_endproc
ARM GAS  /tmp/cc4VD8cB.s 			page 62


 864              	.LFE77:
 866              		.text
 867              	.Letext0:
 868              		.file 4 "drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 869              		.file 5 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.
 870              		.file 6 "drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 871              		.file 7 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/
 872              		.file 8 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/
 873              		.file 9 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.
 874              		.file 10 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys
ARM GAS  /tmp/cc4VD8cB.s 			page 63


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_cortex.c
     /tmp/cc4VD8cB.s:16     .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 $t
     /tmp/cc4VD8cB.s:24     .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 HAL_NVIC_SetPriorityGrouping
     /tmp/cc4VD8cB.s:64     .text.HAL_NVIC_SetPriorityGrouping:0000000000000020 $d
     /tmp/cc4VD8cB.s:71     .text.HAL_NVIC_SetPriority:0000000000000000 $t
     /tmp/cc4VD8cB.s:79     .text.HAL_NVIC_SetPriority:0000000000000000 HAL_NVIC_SetPriority
     /tmp/cc4VD8cB.s:214    .text.HAL_NVIC_SetPriority:0000000000000064 $d
     /tmp/cc4VD8cB.s:220    .text.HAL_NVIC_EnableIRQ:0000000000000000 $t
     /tmp/cc4VD8cB.s:228    .text.HAL_NVIC_EnableIRQ:0000000000000000 HAL_NVIC_EnableIRQ
     /tmp/cc4VD8cB.s:251    .text.HAL_NVIC_EnableIRQ:0000000000000014 $d
     /tmp/cc4VD8cB.s:258    .text.HAL_NVIC_DisableIRQ:0000000000000000 $t
     /tmp/cc4VD8cB.s:266    .text.HAL_NVIC_DisableIRQ:0000000000000000 HAL_NVIC_DisableIRQ
     /tmp/cc4VD8cB.s:290    .text.HAL_NVIC_DisableIRQ:0000000000000018 $d
     /tmp/cc4VD8cB.s:297    .text.HAL_NVIC_SystemReset:0000000000000000 $t
     /tmp/cc4VD8cB.s:305    .text.HAL_NVIC_SystemReset:0000000000000000 HAL_NVIC_SystemReset
     /tmp/cc4VD8cB.s:362    .text.HAL_NVIC_SystemReset:000000000000001c $d
     /tmp/cc4VD8cB.s:372    .text.HAL_SYSTICK_Config:0000000000000000 $t
     /tmp/cc4VD8cB.s:380    .text.HAL_SYSTICK_Config:0000000000000000 HAL_SYSTICK_Config
     /tmp/cc4VD8cB.s:465    .text.HAL_SYSTICK_Config:0000000000000028 $d
     /tmp/cc4VD8cB.s:471    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 $t
     /tmp/cc4VD8cB.s:479    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 HAL_NVIC_GetPriorityGrouping
     /tmp/cc4VD8cB.s:499    .text.HAL_NVIC_GetPriorityGrouping:000000000000000c $d
     /tmp/cc4VD8cB.s:504    .text.HAL_NVIC_GetPriority:0000000000000000 $t
     /tmp/cc4VD8cB.s:512    .text.HAL_NVIC_GetPriority:0000000000000000 HAL_NVIC_GetPriority
     /tmp/cc4VD8cB.s:619    .text.HAL_NVIC_GetPriority:000000000000005c $d
     /tmp/cc4VD8cB.s:626    .text.HAL_NVIC_SetPendingIRQ:0000000000000000 $t
     /tmp/cc4VD8cB.s:634    .text.HAL_NVIC_SetPendingIRQ:0000000000000000 HAL_NVIC_SetPendingIRQ
     /tmp/cc4VD8cB.s:658    .text.HAL_NVIC_SetPendingIRQ:0000000000000018 $d
     /tmp/cc4VD8cB.s:665    .text.HAL_NVIC_GetPendingIRQ:0000000000000000 $t
     /tmp/cc4VD8cB.s:673    .text.HAL_NVIC_GetPendingIRQ:0000000000000000 HAL_NVIC_GetPendingIRQ
     /tmp/cc4VD8cB.s:700    .text.HAL_NVIC_GetPendingIRQ:0000000000000018 $d
     /tmp/cc4VD8cB.s:705    .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 $t
     /tmp/cc4VD8cB.s:713    .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 HAL_NVIC_ClearPendingIRQ
     /tmp/cc4VD8cB.s:737    .text.HAL_NVIC_ClearPendingIRQ:0000000000000018 $d
     /tmp/cc4VD8cB.s:744    .text.HAL_NVIC_GetActive:0000000000000000 $t
     /tmp/cc4VD8cB.s:752    .text.HAL_NVIC_GetActive:0000000000000000 HAL_NVIC_GetActive
     /tmp/cc4VD8cB.s:779    .text.HAL_NVIC_GetActive:0000000000000018 $d
     /tmp/cc4VD8cB.s:784    .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 $t
     /tmp/cc4VD8cB.s:792    .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 HAL_SYSTICK_CLKSourceConfig
     /tmp/cc4VD8cB.s:815    .text.HAL_SYSTICK_CLKSourceConfig:0000000000000014 $d
     /tmp/cc4VD8cB.s:820    .text.HAL_SYSTICK_Callback:0000000000000000 $t
     /tmp/cc4VD8cB.s:828    .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
     /tmp/cc4VD8cB.s:840    .text.HAL_SYSTICK_IRQHandler:0000000000000000 $t
     /tmp/cc4VD8cB.s:848    .text.HAL_SYSTICK_IRQHandler:0000000000000000 HAL_SYSTICK_IRQHandler
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.8ddc6fc9299f63009459649d6a7e7c51
                           .group:0000000000000000 wm4.main.h.40.54e5213d35853f8debd8cd48178ac5c1
                           .group:0000000000000000 wm4.stm32f1xx_hal_conf.h.52.96cb61986c8bfeb3a4fa629a7a7441f6
                           .group:0000000000000000 wm4.stm32f1xx.h.57.c2a10934f4c6830aeb7e4997f02806f1
                           .group:0000000000000000 wm4.stm32f103xb.h.56.66305a77cea9d5300aac997a78930076
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.core_cm3.h.74.7d5fecd6d4522d755d10a23d1542f805
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.67d2dcde6a14ff518eedc1d545d89a76
                           .group:0000000000000000 wm4.core_cm3.h.175.a6c441adf1a05ce96eea3cf78e6687ab
                           .group:0000000000000000 wm4.stm32f103xb.h.619.382b3c85cac6f0350ee5bfaff32e1ebc
                           .group:0000000000000000 wm4.stm32f1xx.h.180.c0013e6ebd6ad07f67c298190b8eac92
ARM GAS  /tmp/cc4VD8cB.s 			page 64


                           .group:0000000000000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:0000000000000000 wm4.newlib.h.21.59901f4bf241ab46c63694665baa7297
                           .group:0000000000000000 wm4.features.h.22.5cdadbb3efe495d1c9e38350b8c376c7
                           .group:0000000000000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:0000000000000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:0000000000000000 wm4.cdefs.h.47.e658329a094974ebad41b40c60502de7
                           .group:0000000000000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:0000000000000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.30.bbece7fa40993a78092dcc5805132560
                           .group:0000000000000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.8188691c2279eac7a223caa50f6694b9
                           .group:0000000000000000 wm4.stm32f1xx_hal_def.h.77.f54bfbbe3e3696aae97b05a3f338caf7
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.112.09261d6ad0eef5abae6b9147d0cf5cbf
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc_ex.h.40.bb785d717afc4d2d2b63a3608cb5a0c5
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.1219.902328474751456408f7d18f6caace93
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.40.f1cf5d2dd589e1675a9fcd6b008c2bb6
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio_ex.h.40.30d74584c89dcd3d86d10bdbbb06cc31
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.281.b26a95114b989e6edaf48d72c8710b9d
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.40.b1d5b41c58b583c31c61335e4c8e1bdd
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma_ex.h.40.7ac05bbf95f5a25a3f4a9b9c2a14f835
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.427.daddf65c60854feb2dc9660a62f55b8c
                           .group:0000000000000000 wm4.stm32f1xx_hal_cortex.h.40.4f649a8bf316b7aa5d02077abd9b8999
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc.h.40.3ad40e622f0cef64228eb182e4bbe00f
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc_ex.h.40.3118796521817cc82626257e9c7ab79c
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash.h.40.12aaef98e1fbb85e3a8f79f98532d04a
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash_ex.h.40.ad66c77e153bc5a4a1d60e46727f4ae5
                           .group:0000000000000000 wm4.stm32f1xx_hal_pwr.h.40.ecccf9071314b0ab3f6ffcfd7c596e95
                           .group:0000000000000000 wm4.stm32f1xx_hal_spi.h.40.5dd367ee94b0bb430a3842862fe7d7da
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim.h.40.ac3feb225ff72b119eeddfe8acac07a3
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim_ex.h.40.9b926a51c24898708ad2e47fd5ff9d32
                           .group:0000000000000000 wm4.stm32f1xx_hal_uart.h.40.9914ca79b81d8b23b4e5425c156b0acd
                           .group:0000000000000000 wm4.stm32f1xx_hal.h.82.f2fd9c01c6f8c9e676a37d84eb9dc553

NO UNDEFINED SYMBOLS
