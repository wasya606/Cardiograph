ARM GAS  /tmp/ccPpoULl.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"oled_driver.cpp"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._ZN10OledDriverC2Ev,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	_ZN10OledDriverC2Ev
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	_ZN10OledDriverC2Ev:
  25              	.LFB1763:
  26              		.file 1 "src/Impl/oled_driver.cpp"
   1:src/Impl/oled_driver.cpp **** #include "oled_driver.h"
   2:src/Impl/oled_driver.cpp **** #include "tim.h"
   3:src/Impl/oled_driver.cpp **** #include <functional>
   4:src/Impl/oled_driver.cpp **** #include "oledfont.h"
   5:src/Impl/oled_driver.cpp **** 
   6:src/Impl/oled_driver.cpp **** OledDriver::OledDriver() :
  27              		.loc 1 6 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33              	.LBB52:
   7:src/Impl/oled_driver.cpp ****     isInitialized(false),
   8:src/Impl/oled_driver.cpp ****     spiBuffer(0x00),
   9:src/Impl/oled_driver.cpp ****     backgroundColor(BLACK)
  34              		.loc 1 9 0
  35 0000 0022     		movs	r2, #0
  36 0002 0270     		strb	r2, [r0]
  37 0004 4270     		strb	r2, [r0, #1]
  38 0006 4280     		strh	r2, [r0, #2]	@ movhi
  39              	.LBE52:
  10:src/Impl/oled_driver.cpp **** {
  11:src/Impl/oled_driver.cpp **** }
  40              		.loc 1 11 0
  41 0008 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE1763:
  45              		.global	_ZN10OledDriverC1Ev
  46              		.thumb_set _ZN10OledDriverC1Ev,_ZN10OledDriverC2Ev
  47 000a 00BF     		.section	.text._ZN10OledDriverD2Ev,"ax",%progbits
  48              		.align	1
ARM GAS  /tmp/ccPpoULl.s 			page 2


  49              		.p2align 2,,3
  50              		.global	_ZN10OledDriverD2Ev
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu softvfp
  56              	_ZN10OledDriverD2Ev:
  57              	.LFB1766:
  12:src/Impl/oled_driver.cpp **** 
  13:src/Impl/oled_driver.cpp **** OledDriver::~OledDriver()
  58              		.loc 1 13 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63              	.LVL1:
  14:src/Impl/oled_driver.cpp **** {
  15:src/Impl/oled_driver.cpp **** }
  64              		.loc 1 15 0
  65 0000 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE1766:
  69              		.global	_ZN10OledDriverD1Ev
  70              		.thumb_set _ZN10OledDriverD1Ev,_ZN10OledDriverD2Ev
  71 0002 00BF     		.section	.text._ZNK10OledDriver14getInitializedEv,"ax",%progbits
  72              		.align	1
  73              		.p2align 2,,3
  74              		.global	_ZNK10OledDriver14getInitializedEv
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu softvfp
  80              	_ZNK10OledDriver14getInitializedEv:
  81              	.LFB1769:
  16:src/Impl/oled_driver.cpp **** 
  17:src/Impl/oled_driver.cpp **** void OledDriver::init(const uint16_t fillColor)
  18:src/Impl/oled_driver.cpp **** {
  19:src/Impl/oled_driver.cpp ****     reset();
  20:src/Impl/oled_driver.cpp **** 
  21:src/Impl/oled_driver.cpp ****     sendCommand(DISPLAY_OFF);
  22:src/Impl/oled_driver.cpp ****     sendCommand(CLEAR_WINDOW);
  23:src/Impl/oled_driver.cpp ****     sendCommand(SET_CONTRAST_A);
  24:src/Impl/oled_driver.cpp ****     sendCommand(0x80);
  25:src/Impl/oled_driver.cpp ****     sendCommand(SET_CONTRAST_B);
  26:src/Impl/oled_driver.cpp ****     sendCommand(0x80);
  27:src/Impl/oled_driver.cpp ****     sendCommand(SET_CONTRAST_C);
  28:src/Impl/oled_driver.cpp ****     sendCommand(0x80);
  29:src/Impl/oled_driver.cpp ****     sendCommand(MASTER_CURRENT_CONTROL);
  30:src/Impl/oled_driver.cpp ****     sendCommand(12);
  31:src/Impl/oled_driver.cpp ****     sendCommand(SET_PRECHARGE_SPEED_A);
  32:src/Impl/oled_driver.cpp ****     sendCommand(0x64);
  33:src/Impl/oled_driver.cpp ****     sendCommand(SET_PRECHARGE_SPEED_B);
  34:src/Impl/oled_driver.cpp ****     sendCommand(0x78);
  35:src/Impl/oled_driver.cpp ****     sendCommand(SET_PRECHARGE_SPEED_C);
  36:src/Impl/oled_driver.cpp ****     sendCommand(0x64);
  37:src/Impl/oled_driver.cpp ****     sendCommand(SET_REMAP);
  38:src/Impl/oled_driver.cpp ****     sendCommand(0B01110010);
ARM GAS  /tmp/ccPpoULl.s 			page 3


  39:src/Impl/oled_driver.cpp ****     sendCommand(SET_DISPLAY_START_LINE);
  40:src/Impl/oled_driver.cpp ****     sendCommand(0x0);
  41:src/Impl/oled_driver.cpp ****     sendCommand(SET_DISPLAY_OFFSET);
  42:src/Impl/oled_driver.cpp ****     sendCommand(0x0);
  43:src/Impl/oled_driver.cpp ****     sendCommand(NORMAL_DISPLAY);
  44:src/Impl/oled_driver.cpp ****     sendCommand(SET_MULTIPLEX_RATIO);
  45:src/Impl/oled_driver.cpp ****     sendCommand(0x3F);
  46:src/Impl/oled_driver.cpp ****     sendCommand(SET_MASTER_CONFIGURE);
  47:src/Impl/oled_driver.cpp ****     sendCommand(0x8E);
  48:src/Impl/oled_driver.cpp ****     sendCommand(POWER_SAVE_MODE);
  49:src/Impl/oled_driver.cpp ****     sendCommand(0x01);
  50:src/Impl/oled_driver.cpp ****     sendCommand(PHASE_PERIOD_ADJUSTMENT);
  51:src/Impl/oled_driver.cpp ****     sendCommand(0x31);
  52:src/Impl/oled_driver.cpp ****     sendCommand(DISPLAY_CLOCK_DIV);
  53:src/Impl/oled_driver.cpp ****     sendCommand(0xF0);
  54:src/Impl/oled_driver.cpp ****     sendCommand(SET_PRECHARGE_VOLTAGE);
  55:src/Impl/oled_driver.cpp ****     sendCommand(0x3A);
  56:src/Impl/oled_driver.cpp ****     sendCommand(SET_V_VOLTAGE);
  57:src/Impl/oled_driver.cpp ****     sendCommand(0x3E);
  58:src/Impl/oled_driver.cpp ****     sendCommand(DEACTIVE_SCROLLING);
  59:src/Impl/oled_driver.cpp ****     sendCommand(NORMAL_BRIGHTNESS_DISPLAY_ON);
  60:src/Impl/oled_driver.cpp ****     sendCommand(FILL_WINDOW);
  61:src/Impl/oled_driver.cpp ****     sendCommand(0x01);
  62:src/Impl/oled_driver.cpp **** 
  63:src/Impl/oled_driver.cpp ****     fillScreen(fillColor);
  64:src/Impl/oled_driver.cpp **** 
  65:src/Impl/oled_driver.cpp ****     isInitialized = true;
  66:src/Impl/oled_driver.cpp **** }
  67:src/Impl/oled_driver.cpp **** 
  68:src/Impl/oled_driver.cpp **** bool OledDriver::getInitialized() const
  69:src/Impl/oled_driver.cpp **** {
  82              		.loc 1 69 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87              	.LVL2:
  70:src/Impl/oled_driver.cpp ****     return isInitialized;
  71:src/Impl/oled_driver.cpp **** }
  88              		.loc 1 71 0
  89 0000 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  90              	.LVL3:
  91 0002 7047     		bx	lr
  92              		.cfi_endproc
  93              	.LFE1769:
  95              		.section	.text._ZNK10OledDriver18getBackgroundColorEv,"ax",%progbits
  96              		.align	1
  97              		.p2align 2,,3
  98              		.global	_ZNK10OledDriver18getBackgroundColorEv
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 102              		.fpu softvfp
 104              	_ZNK10OledDriver18getBackgroundColorEv:
 105              	.LFB1770:
  72:src/Impl/oled_driver.cpp **** 
  73:src/Impl/oled_driver.cpp **** uint16_t OledDriver::getBackgroundColor() const
ARM GAS  /tmp/ccPpoULl.s 			page 4


  74:src/Impl/oled_driver.cpp **** {
 106              		.loc 1 74 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		@ link register save eliminated.
 111              	.LVL4:
  75:src/Impl/oled_driver.cpp ****     return backgroundColor;
  76:src/Impl/oled_driver.cpp **** }
 112              		.loc 1 76 0
 113 0000 4088     		ldrh	r0, [r0, #2]
 114              	.LVL5:
 115 0002 7047     		bx	lr
 116              		.cfi_endproc
 117              	.LFE1770:
 119              		.section	.text._ZN10OledDriver8drawLineEhhhht,"ax",%progbits
 120              		.align	1
 121              		.p2align 2,,3
 122              		.global	_ZN10OledDriver8drawLineEhhhht
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu softvfp
 128              	_ZN10OledDriver8drawLineEhhhht:
 129              	.LFB2043:
 130              		.cfi_startproc
 131              		@ args = 8, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134 0000 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE2043:
 138 0002 00BF     		.section	.text._ZN10OledDriver13drawRectangleEhhhht,"ax",%progbits
 139              		.align	1
 140              		.p2align 2,,3
 141              		.global	_ZN10OledDriver13drawRectangleEhhhht
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu softvfp
 147              	_ZN10OledDriver13drawRectangleEhhhht:
 148              	.LFB1776:
  77:src/Impl/oled_driver.cpp **** 
  78:src/Impl/oled_driver.cpp **** void OledDriver::fillScreen(const uint16_t color)
  79:src/Impl/oled_driver.cpp **** {
  80:src/Impl/oled_driver.cpp ****     backgroundColor = color;
  81:src/Impl/oled_driver.cpp ****     for (uint8_t y = 0; y < 64; y += 16)
  82:src/Impl/oled_driver.cpp ****     {
  83:src/Impl/oled_driver.cpp ****         for (uint8_t x = 0; x < 96; x += 16)
  84:src/Impl/oled_driver.cpp ****         {
  85:src/Impl/oled_driver.cpp ****             drawFillRectangle(x, y, 16, 16, color);
  86:src/Impl/oled_driver.cpp ****         }
  87:src/Impl/oled_driver.cpp ****     }
  88:src/Impl/oled_driver.cpp **** }
  89:src/Impl/oled_driver.cpp **** 
  90:src/Impl/oled_driver.cpp **** void OledDriver::drawPixel(const uint8_t x, const uint8_t y, const uint16_t color)
  91:src/Impl/oled_driver.cpp **** {
ARM GAS  /tmp/ccPpoULl.s 			page 5


  92:src/Impl/oled_driver.cpp ****     //printf("drawPixel x: %d, y: %d, color: %d\n", x, y, color);
  93:src/Impl/oled_driver.cpp ****     sendCommand(SET_COLUMN_ADDRESS);
  94:src/Impl/oled_driver.cpp ****     sendCommand(x);
  95:src/Impl/oled_driver.cpp ****     sendCommand(OLED_WIDTH - 1);
  96:src/Impl/oled_driver.cpp **** 
  97:src/Impl/oled_driver.cpp ****     sendCommand(SET_ROW_ADDRESS);
  98:src/Impl/oled_driver.cpp ****     sendCommand(y);
  99:src/Impl/oled_driver.cpp ****     sendCommand(OLED_HEIGHT - 1);
 100:src/Impl/oled_driver.cpp **** 
 101:src/Impl/oled_driver.cpp ****     setDC(HIGH);
 102:src/Impl/oled_driver.cpp ****     setCS(LOW);
 103:src/Impl/oled_driver.cpp **** 
 104:src/Impl/oled_driver.cpp ****     transmitSpi(color >> 8);
 105:src/Impl/oled_driver.cpp ****     transmitSpi(color);
 106:src/Impl/oled_driver.cpp **** 
 107:src/Impl/oled_driver.cpp ****     setCS(HIGH);
 108:src/Impl/oled_driver.cpp **** }
 109:src/Impl/oled_driver.cpp **** 
 110:src/Impl/oled_driver.cpp **** void OledDriver::drawLine(const uint8_t fromX, const uint8_t fromY, const uint8_t toX, const uint8_
 111:src/Impl/oled_driver.cpp **** {
 112:src/Impl/oled_driver.cpp ****     /*std::list<OledRequest*>* requests = new std::list<OledRequest*>();
 113:src/Impl/oled_driver.cpp **** 
 114:src/Impl/oled_driver.cpp ****     requests->push_back(new OledRequest(DRAW_LINE));
 115:src/Impl/oled_driver.cpp **** 
 116:src/Impl/oled_driver.cpp ****     requests->push_back(new OledRequest(fromX));
 117:src/Impl/oled_driver.cpp ****     requests->push_back(new OledRequest(fromY));
 118:src/Impl/oled_driver.cpp ****     requests->push_back(new OledRequest(toX));
 119:src/Impl/oled_driver.cpp ****     requests->push_back(new OledRequest(toY));
 120:src/Impl/oled_driver.cpp ****     //drawQueue->push_back(new DrawRequest(requests, 5));
 121:src/Impl/oled_driver.cpp **** 
 122:src/Impl/oled_driver.cpp ****     //requests = new std::list<OledRequest*>();
 123:src/Impl/oled_driver.cpp ****     pushColor(requests, color);
 124:src/Impl/oled_driver.cpp ****     drawQueue->push_back(new DrawRequest(requests, 1));
 125:src/Impl/oled_driver.cpp **** 
 126:src/Impl/oled_driver.cpp ****     performDraw();*/
 127:src/Impl/oled_driver.cpp **** }
 128:src/Impl/oled_driver.cpp **** 
 129:src/Impl/oled_driver.cpp **** void OledDriver::drawFillRectangle(const uint8_t x, const uint8_t y, const uint8_t width,
 130:src/Impl/oled_driver.cpp ****                                const uint8_t height, const uint16_t borderColor, const uint16_t fil
 131:src/Impl/oled_driver.cpp **** {
 132:src/Impl/oled_driver.cpp **** 
 133:src/Impl/oled_driver.cpp ****     sendCommand(DRAW_RECTANGLE);
 134:src/Impl/oled_driver.cpp ****     sendCommand(x);
 135:src/Impl/oled_driver.cpp ****     sendCommand(y);
 136:src/Impl/oled_driver.cpp ****     sendCommand(x + width);
 137:src/Impl/oled_driver.cpp ****     sendCommand(y + height);
 138:src/Impl/oled_driver.cpp **** 
 139:src/Impl/oled_driver.cpp **** 
 140:src/Impl/oled_driver.cpp ****     //Border color
 141:src/Impl/oled_driver.cpp ****     pushColor(borderColor);
 142:src/Impl/oled_driver.cpp **** 
 143:src/Impl/oled_driver.cpp ****     //Fill color
 144:src/Impl/oled_driver.cpp ****     pushColor(fillColor);
 145:src/Impl/oled_driver.cpp **** 
 146:src/Impl/oled_driver.cpp ****     //drawQueue->push_back(new DrawRequest(requests, 1));
 147:src/Impl/oled_driver.cpp ****     //performDraw();
 148:src/Impl/oled_driver.cpp **** }
ARM GAS  /tmp/ccPpoULl.s 			page 6


 149:src/Impl/oled_driver.cpp **** 
 150:src/Impl/oled_driver.cpp **** void OledDriver::drawFillRectangle(const uint8_t x, const uint8_t y, const uint8_t width, const uin
 151:src/Impl/oled_driver.cpp **** {
 152:src/Impl/oled_driver.cpp ****     drawFillRectangle(x, y, width, height, color, color);
 153:src/Impl/oled_driver.cpp **** }
 154:src/Impl/oled_driver.cpp **** 
 155:src/Impl/oled_driver.cpp **** void OledDriver::drawRectangle(const uint8_t x, const uint8_t y, const uint8_t width, const uint8_t
 156:src/Impl/oled_driver.cpp **** {
 149              		.loc 1 156 0
 150              		.cfi_startproc
 151              		@ args = 8, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154              	.LVL6:
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE1776:
 159 0002 00BF     		.section	.text._ZN10OledDriver11sendCommandEh,"ax",%progbits
 160              		.align	1
 161              		.p2align 2,,3
 162              		.global	_ZN10OledDriver11sendCommandEh
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu softvfp
 168              	_ZN10OledDriver11sendCommandEh:
 169              	.LFB1781:
 157:src/Impl/oled_driver.cpp ****     /*std::list<OledRequest*>* requests = new std::list<OledRequest*>();
 158:src/Impl/oled_driver.cpp ****     requests->push_back(new OledRequest(FILL_WINDOW));
 159:src/Impl/oled_driver.cpp ****     requests->push_back(new OledRequest(0x00));
 160:src/Impl/oled_driver.cpp ****     drawQueue->push_back(new DrawRequest(requests, 1));
 161:src/Impl/oled_driver.cpp **** 
 162:src/Impl/oled_driver.cpp ****     drawFillRectangle(x, y, width, height, color, color);
 163:src/Impl/oled_driver.cpp **** 
 164:src/Impl/oled_driver.cpp ****     requests = new std::list<OledRequest*>();
 165:src/Impl/oled_driver.cpp ****     requests->push_back(new OledRequest(FILL_WINDOW));
 166:src/Impl/oled_driver.cpp ****     requests->push_back(new OledRequest(0x01));
 167:src/Impl/oled_driver.cpp ****     drawQueue->push_back(new DrawRequest(requests, 1));
 168:src/Impl/oled_driver.cpp **** 
 169:src/Impl/oled_driver.cpp ****     performDraw();*/
 170:src/Impl/oled_driver.cpp **** }
 171:src/Impl/oled_driver.cpp **** 
 172:src/Impl/oled_driver.cpp **** void OledDriver::drawSymbol(const char symbol, const uint8_t x, const uint8_t y, const uint16_t col
 173:src/Impl/oled_driver.cpp **** {
 174:src/Impl/oled_driver.cpp ****     if (symbol >= ' ' && symbol <= '~')
 175:src/Impl/oled_driver.cpp ****     {
 176:src/Impl/oled_driver.cpp ****         const uint64_t data = OledFont::getData(symbol);
 177:src/Impl/oled_driver.cpp **** 
 178:src/Impl/oled_driver.cpp ****         for (uint8_t row = 0; row < 8; row ++)
 179:src/Impl/oled_driver.cpp ****         {
 180:src/Impl/oled_driver.cpp ****             uint8_t rowData = (data >> row * 8) & 0xFF;
 181:src/Impl/oled_driver.cpp ****             for (uint8_t col = 0; col < 8; col++)
 182:src/Impl/oled_driver.cpp ****             {
 183:src/Impl/oled_driver.cpp ****                 if (((rowData >> col) & 0b1) == 1)
 184:src/Impl/oled_driver.cpp ****                     drawPixel(x + col, y + row, color);
 185:src/Impl/oled_driver.cpp ****             }
 186:src/Impl/oled_driver.cpp ****         }
ARM GAS  /tmp/ccPpoULl.s 			page 7


 187:src/Impl/oled_driver.cpp ****     }
 188:src/Impl/oled_driver.cpp **** }
 189:src/Impl/oled_driver.cpp **** 
 190:src/Impl/oled_driver.cpp **** void OledDriver::drawSymbol(const char symbol, const uint8_t x, const uint8_t y, const uint16_t col
 191:src/Impl/oled_driver.cpp **** {
 192:src/Impl/oled_driver.cpp ****     drawFillRectangle(x, y, 8, 8, backColor);
 193:src/Impl/oled_driver.cpp ****     drawSymbol(symbol, x, y, color);
 194:src/Impl/oled_driver.cpp **** }
 195:src/Impl/oled_driver.cpp **** 
 196:src/Impl/oled_driver.cpp **** void OledDriver::printText(const char *text, const uint8_t x, const uint8_t y, const uint16_t color
 197:src/Impl/oled_driver.cpp **** {
 198:src/Impl/oled_driver.cpp ****     uint8_t symbolIndex = (y / 8) * 12 + x / 8;
 199:src/Impl/oled_driver.cpp ****     uint8_t index = 0;
 200:src/Impl/oled_driver.cpp ****     while (symbolIndex < 96 && text[index] != '\0')
 201:src/Impl/oled_driver.cpp ****     {
 202:src/Impl/oled_driver.cpp ****         uint8_t s_y = (symbolIndex / 12) * 8;
 203:src/Impl/oled_driver.cpp ****         uint8_t s_x = (symbolIndex % 12) * 8;
 204:src/Impl/oled_driver.cpp ****         drawSymbol(text[index], s_x, s_y, color);
 205:src/Impl/oled_driver.cpp ****         symbolIndex++;
 206:src/Impl/oled_driver.cpp ****         index++;
 207:src/Impl/oled_driver.cpp ****     }
 208:src/Impl/oled_driver.cpp **** }
 209:src/Impl/oled_driver.cpp **** 
 210:src/Impl/oled_driver.cpp **** void OledDriver::printText(const char *text, const uint8_t x, const uint8_t y, const uint16_t color
 211:src/Impl/oled_driver.cpp **** {
 212:src/Impl/oled_driver.cpp ****     uint8_t symbolIndex = (y / 8) * 12 + x / 8;
 213:src/Impl/oled_driver.cpp ****     uint8_t index = 0;
 214:src/Impl/oled_driver.cpp ****     while (symbolIndex < 96 && text[index] != '\0')
 215:src/Impl/oled_driver.cpp ****     {
 216:src/Impl/oled_driver.cpp ****         uint8_t s_y = (symbolIndex / 12) * 8;
 217:src/Impl/oled_driver.cpp ****         uint8_t s_x = (symbolIndex % 12) * 8;
 218:src/Impl/oled_driver.cpp ****         drawSymbol(text[index], s_x, s_y, color, backColor);
 219:src/Impl/oled_driver.cpp ****         symbolIndex++;
 220:src/Impl/oled_driver.cpp ****         index++;
 221:src/Impl/oled_driver.cpp ****     }
 222:src/Impl/oled_driver.cpp **** 
 223:src/Impl/oled_driver.cpp **** }
 224:src/Impl/oled_driver.cpp **** 
 225:src/Impl/oled_driver.cpp **** void OledDriver::sendCommand(const uint8_t cmd)
 226:src/Impl/oled_driver.cpp **** {
 170              		.loc 1 226 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              	.LVL7:
 175              		.loc 1 226 0
 176 0000 70B5     		push	{r4, r5, r6, lr}
 177              		.cfi_def_cfa_offset 16
 178              		.cfi_offset 4, -16
 179              		.cfi_offset 5, -12
 180              		.cfi_offset 6, -8
 181              		.cfi_offset 14, -4
 182              		.loc 1 226 0
 183 0002 0446     		mov	r4, r0
 184              	.LVL8:
 185              	.LBB53:
 186              	.LBB54:
ARM GAS  /tmp/ccPpoULl.s 			page 8


 227:src/Impl/oled_driver.cpp ****     setDC(LOW);
 228:src/Impl/oled_driver.cpp ****     setCS(LOW);
 229:src/Impl/oled_driver.cpp ****     transmitSpi(cmd);
 230:src/Impl/oled_driver.cpp ****     setCS(HIGH);
 231:src/Impl/oled_driver.cpp **** }
 232:src/Impl/oled_driver.cpp **** 
 233:src/Impl/oled_driver.cpp **** void OledDriver::sendData(const uint8_t data)
 234:src/Impl/oled_driver.cpp **** {
 235:src/Impl/oled_driver.cpp ****     setDC(HIGH);
 236:src/Impl/oled_driver.cpp ****     setCS(LOW);
 237:src/Impl/oled_driver.cpp ****     transmitSpi(data);
 238:src/Impl/oled_driver.cpp ****     setCS(HIGH);
 239:src/Impl/oled_driver.cpp **** }
 240:src/Impl/oled_driver.cpp **** 
 241:src/Impl/oled_driver.cpp **** void OledDriver::transmitSpi(const uint8_t data)
 242:src/Impl/oled_driver.cpp **** {
 243:src/Impl/oled_driver.cpp ****     spiBuffer = data;
 244:src/Impl/oled_driver.cpp ****     HAL_SPI_Transmit(&hspi1, &spiBuffer, 1, 1000);
 245:src/Impl/oled_driver.cpp **** }
 246:src/Impl/oled_driver.cpp **** 
 247:src/Impl/oled_driver.cpp **** void OledDriver::setCS(const PinState state)
 248:src/Impl/oled_driver.cpp **** {
 249:src/Impl/oled_driver.cpp ****     HAL_GPIO_WritePin(Dsp_CS_GPIO_Port, Dsp_CS_Pin, (GPIO_PinState)state);
 250:src/Impl/oled_driver.cpp **** }
 251:src/Impl/oled_driver.cpp **** 
 252:src/Impl/oled_driver.cpp **** void OledDriver::setDC(const PinState state)
 253:src/Impl/oled_driver.cpp **** {
 254:src/Impl/oled_driver.cpp ****     HAL_GPIO_WritePin(Dsp_DC_GPIO_Port, Dsp_DC_Pin, (GPIO_PinState)state);
 187              		.loc 1 254 0
 188 0004 0F4D     		ldr	r5, .L9
 189              	.LBE54:
 190              	.LBE53:
 226:src/Impl/oled_driver.cpp ****     setDC(LOW);
 191              		.loc 1 226 0
 192 0006 0E46     		mov	r6, r1
 193              	.LBB56:
 194              	.LBB55:
 195              		.loc 1 254 0
 196 0008 2846     		mov	r0, r5
 197              	.LVL9:
 198 000a 0022     		movs	r2, #0
 199 000c 4FF48061 		mov	r1, #1024
 200              	.LVL10:
 201 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 202              	.LVL11:
 203              	.LBE55:
 204              	.LBE56:
 205              	.LBB57:
 206              	.LBB58:
 249:src/Impl/oled_driver.cpp **** }
 207              		.loc 1 249 0
 208 0014 2846     		mov	r0, r5
 209 0016 0022     		movs	r2, #0
 210 0018 4FF40061 		mov	r1, #2048
 211 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 212              	.LVL12:
 213              	.LBE58:
ARM GAS  /tmp/ccPpoULl.s 			page 9


 214              	.LBE57:
 215              	.LBB59:
 216              	.LBB60:
 243:src/Impl/oled_driver.cpp ****     HAL_SPI_Transmit(&hspi1, &spiBuffer, 1, 1000);
 217              		.loc 1 243 0
 218 0020 2146     		mov	r1, r4
 244:src/Impl/oled_driver.cpp **** }
 219              		.loc 1 244 0
 220 0022 0122     		movs	r2, #1
 243:src/Impl/oled_driver.cpp ****     HAL_SPI_Transmit(&hspi1, &spiBuffer, 1, 1000);
 221              		.loc 1 243 0
 222 0024 01F8016F 		strb	r6, [r1, #1]!
 244:src/Impl/oled_driver.cpp **** }
 223              		.loc 1 244 0
 224 0028 4FF47A73 		mov	r3, #1000
 225 002c 0648     		ldr	r0, .L9+4
 226 002e FFF7FEFF 		bl	HAL_SPI_Transmit
 227              	.LVL13:
 228              	.LBE60:
 229              	.LBE59:
 230              	.LBB61:
 231              	.LBB62:
 249:src/Impl/oled_driver.cpp **** }
 232              		.loc 1 249 0
 233 0032 2846     		mov	r0, r5
 234              	.LBE62:
 235              	.LBE61:
 231:src/Impl/oled_driver.cpp **** 
 236              		.loc 1 231 0
 237 0034 BDE87040 		pop	{r4, r5, r6, lr}
 238              		.cfi_restore 14
 239              		.cfi_restore 6
 240              		.cfi_restore 5
 241              		.cfi_restore 4
 242              		.cfi_def_cfa_offset 0
 243              	.LVL14:
 244              	.LBB64:
 245              	.LBB63:
 249:src/Impl/oled_driver.cpp **** }
 246              		.loc 1 249 0
 247 0038 0122     		movs	r2, #1
 248 003a 4FF40061 		mov	r1, #2048
 249 003e FFF7FEBF 		b	HAL_GPIO_WritePin
 250              	.LVL15:
 251              	.L10:
 252 0042 00BF     		.align	2
 253              	.L9:
 254 0044 000C0140 		.word	1073810432
 255 0048 00000000 		.word	hspi1
 256              	.LBE63:
 257              	.LBE64:
 258              		.cfi_endproc
 259              	.LFE1781:
 261              		.section	.text._ZN10OledDriver9drawPixelEhht,"ax",%progbits
 262              		.align	1
 263              		.p2align 2,,3
 264              		.global	_ZN10OledDriver9drawPixelEhht
ARM GAS  /tmp/ccPpoULl.s 			page 10


 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu softvfp
 270              	_ZN10OledDriver9drawPixelEhht:
 271              	.LFB1772:
  91:src/Impl/oled_driver.cpp ****     //printf("drawPixel x: %d, y: %d, color: %d\n", x, y, color);
 272              		.loc 1 91 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              	.LVL16:
 277 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 278              		.cfi_def_cfa_offset 24
 279              		.cfi_offset 4, -24
 280              		.cfi_offset 5, -20
 281              		.cfi_offset 6, -16
 282              		.cfi_offset 7, -12
 283              		.cfi_offset 8, -8
 284              		.cfi_offset 14, -4
  91:src/Impl/oled_driver.cpp ****     //printf("drawPixel x: %d, y: %d, color: %d\n", x, y, color);
 285              		.loc 1 91 0
 286 0004 0446     		mov	r4, r0
 287 0006 0F46     		mov	r7, r1
 288 0008 1646     		mov	r6, r2
 289 000a 9846     		mov	r8, r3
 104:src/Impl/oled_driver.cpp ****     transmitSpi(color);
 290              		.loc 1 104 0
 291 000c 0546     		mov	r5, r0
  93:src/Impl/oled_driver.cpp ****     sendCommand(x);
 292              		.loc 1 93 0
 293 000e 1521     		movs	r1, #21
 294              	.LVL17:
 295 0010 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 296              	.LVL18:
  94:src/Impl/oled_driver.cpp ****     sendCommand(OLED_WIDTH - 1);
 297              		.loc 1 94 0
 298 0014 3946     		mov	r1, r7
 299 0016 2046     		mov	r0, r4
 300 0018 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 301              	.LVL19:
  95:src/Impl/oled_driver.cpp **** 
 302              		.loc 1 95 0
 303 001c 2046     		mov	r0, r4
 304 001e 5F21     		movs	r1, #95
 305 0020 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 306              	.LVL20:
  97:src/Impl/oled_driver.cpp ****     sendCommand(y);
 307              		.loc 1 97 0
 308 0024 2046     		mov	r0, r4
 309 0026 7521     		movs	r1, #117
 310 0028 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 311              	.LVL21:
  98:src/Impl/oled_driver.cpp ****     sendCommand(OLED_HEIGHT - 1);
 312              		.loc 1 98 0
 313 002c 3146     		mov	r1, r6
 314 002e 2046     		mov	r0, r4
ARM GAS  /tmp/ccPpoULl.s 			page 11


 315              	.LBB65:
 316              	.LBB66:
 317              		.loc 1 254 0
 318 0030 174E     		ldr	r6, .L13
 319              	.LBE66:
 320              	.LBE65:
  98:src/Impl/oled_driver.cpp ****     sendCommand(OLED_HEIGHT - 1);
 321              		.loc 1 98 0
 322 0032 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 323              	.LVL22:
  99:src/Impl/oled_driver.cpp **** 
 324              		.loc 1 99 0
 325 0036 2046     		mov	r0, r4
 326 0038 3F21     		movs	r1, #63
 327 003a FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 328              	.LVL23:
 329              	.LBB68:
 330              	.LBB67:
 331              		.loc 1 254 0
 332 003e 3046     		mov	r0, r6
 333 0040 0122     		movs	r2, #1
 334 0042 4FF48061 		mov	r1, #1024
 335 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 336              	.LVL24:
 337              	.LBE67:
 338              	.LBE68:
 339              	.LBB69:
 340              	.LBB70:
 249:src/Impl/oled_driver.cpp **** }
 341              		.loc 1 249 0
 342 004a 3046     		mov	r0, r6
 343 004c 0022     		movs	r2, #0
 344 004e 4FF40061 		mov	r1, #2048
 345 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 346              	.LVL25:
 347              	.LBE70:
 348              	.LBE69:
 349              	.LBB71:
 350              	.LBB72:
 244:src/Impl/oled_driver.cpp **** }
 351              		.loc 1 244 0
 352 0056 0F4F     		ldr	r7, .L13+4
 353              	.LBE72:
 354              	.LBE71:
 104:src/Impl/oled_driver.cpp ****     transmitSpi(color);
 355              		.loc 1 104 0
 356 0058 4FEA2823 		asr	r3, r8, #8
 357 005c 05F8013F 		strb	r3, [r5, #1]!
 358              	.LBB74:
 359              	.LBB73:
 244:src/Impl/oled_driver.cpp **** }
 360              		.loc 1 244 0
 361 0060 2946     		mov	r1, r5
 362 0062 3846     		mov	r0, r7
 363 0064 4FF47A73 		mov	r3, #1000
 364 0068 0122     		movs	r2, #1
 365 006a FFF7FEFF 		bl	HAL_SPI_Transmit
ARM GAS  /tmp/ccPpoULl.s 			page 12


 366              	.LVL26:
 367              	.LBE73:
 368              	.LBE74:
 369              	.LBB75:
 370              	.LBB76:
 371 006e 2946     		mov	r1, r5
 372              	.LBE76:
 373              	.LBE75:
 105:src/Impl/oled_driver.cpp **** 
 374              		.loc 1 105 0
 375 0070 84F80180 		strb	r8, [r4, #1]
 376              	.LBB78:
 377              	.LBB77:
 244:src/Impl/oled_driver.cpp **** }
 378              		.loc 1 244 0
 379 0074 3846     		mov	r0, r7
 380 0076 0122     		movs	r2, #1
 381 0078 4FF47A73 		mov	r3, #1000
 382 007c FFF7FEFF 		bl	HAL_SPI_Transmit
 383              	.LVL27:
 384              	.LBE77:
 385              	.LBE78:
 386              	.LBB79:
 387              	.LBB80:
 249:src/Impl/oled_driver.cpp **** }
 388              		.loc 1 249 0
 389 0080 3046     		mov	r0, r6
 390              	.LBE80:
 391              	.LBE79:
 108:src/Impl/oled_driver.cpp **** 
 392              		.loc 1 108 0
 393 0082 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 394              		.cfi_restore 14
 395              		.cfi_restore 8
 396              		.cfi_restore 7
 397              		.cfi_restore 6
 398              		.cfi_restore 5
 399              		.cfi_restore 4
 400              		.cfi_def_cfa_offset 0
 401              	.LVL28:
 402              	.LBB82:
 403              	.LBB81:
 249:src/Impl/oled_driver.cpp **** }
 404              		.loc 1 249 0
 405 0086 0122     		movs	r2, #1
 406 0088 4FF40061 		mov	r1, #2048
 407 008c FFF7FEBF 		b	HAL_GPIO_WritePin
 408              	.LVL29:
 409              	.L14:
 410              		.align	2
 411              	.L13:
 412 0090 000C0140 		.word	1073810432
 413 0094 00000000 		.word	hspi1
 414              	.LBE81:
 415              	.LBE82:
 416              		.cfi_endproc
 417              	.LFE1772:
ARM GAS  /tmp/ccPpoULl.s 			page 13


 419              		.section	.text._ZN10OledDriver10drawSymbolEchht.part.0,"ax",%progbits
 420              		.align	1
 421              		.p2align 2,,3
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 425              		.fpu softvfp
 427              	_ZN10OledDriver10drawSymbolEchht.part.0:
 428              	.LFB2041:
 172:src/Impl/oled_driver.cpp **** {
 429              		.loc 1 172 0
 430              		.cfi_startproc
 431              		@ args = 4, pretend = 0, frame = 8
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433              	.LVL30:
 434 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 435              		.cfi_def_cfa_offset 36
 436              		.cfi_offset 4, -36
 437              		.cfi_offset 5, -32
 438              		.cfi_offset 6, -28
 439              		.cfi_offset 7, -24
 440              		.cfi_offset 8, -20
 441              		.cfi_offset 9, -16
 442              		.cfi_offset 10, -12
 443              		.cfi_offset 11, -8
 444              		.cfi_offset 14, -4
 445 0004 8246     		mov	r10, r0
 446 0006 83B0     		sub	sp, sp, #12
 447              		.cfi_def_cfa_offset 48
 448              	.LBB83:
 176:src/Impl/oled_driver.cpp **** 
 449              		.loc 1 176 0
 450 0008 0846     		mov	r0, r1
 451              	.LVL31:
 452              	.LBE83:
 172:src/Impl/oled_driver.cpp **** {
 453              		.loc 1 172 0
 454 000a 9146     		mov	r9, r2
 455 000c 0093     		str	r3, [sp]
 456 000e BDF83080 		ldrh	r8, [sp, #48]
 457              	.LBB88:
 176:src/Impl/oled_driver.cpp **** 
 458              		.loc 1 176 0
 459 0012 FFF7FEFF 		bl	_ZN8OledFont7getDataEc
 460              	.LVL32:
 461 0016 0027     		movs	r7, #0
 462 0018 8B46     		mov	fp, r1
 463              	.LVL33:
 464 001a 0190     		str	r0, [sp, #4]
 465              	.LVL34:
 466              	.L18:
 467              	.LBB84:
 468              	.LBB85:
 180:src/Impl/oled_driver.cpp ****             for (uint8_t col = 0; col < 8; col++)
 469              		.loc 1 180 0
 470 001c FB00     		lsls	r3, r7, #3
 471 001e 0199     		ldr	r1, [sp, #4]
ARM GAS  /tmp/ccPpoULl.s 			page 14


 472 0020 C3F12002 		rsb	r2, r3, #32
 473 0024 21FA03F5 		lsr	r5, r1, r3
 474 0028 0BFA02F2 		lsl	r2, fp, r2
 475 002c 203B     		subs	r3, r3, #32
 476 002e 2BFA03F3 		lsr	r3, fp, r3
 477 0032 1543     		orrs	r5, r5, r2
 478 0034 1D43     		orrs	r5, r5, r3
 479              	.LBB86:
 184:src/Impl/oled_driver.cpp ****             }
 480              		.loc 1 184 0
 481 0036 009B     		ldr	r3, [sp]
 482              	.LBE86:
 180:src/Impl/oled_driver.cpp ****             for (uint8_t col = 0; col < 8; col++)
 483              		.loc 1 180 0
 484 0038 0024     		movs	r4, #0
 485              	.LBB87:
 184:src/Impl/oled_driver.cpp ****             }
 486              		.loc 1 184 0
 487 003a DE19     		adds	r6, r3, r7
 488 003c EDB2     		uxtb	r5, r5
 489 003e F6B2     		uxtb	r6, r6
 490 0040 02E0     		b	.L17
 491              	.LVL35:
 492              	.L16:
 493 0042 0134     		adds	r4, r4, #1
 494              	.LVL36:
 181:src/Impl/oled_driver.cpp ****             {
 495              		.loc 1 181 0
 496 0044 082C     		cmp	r4, #8
 497 0046 0ED0     		beq	.L26
 498              	.L17:
 499              	.LVL37:
 183:src/Impl/oled_driver.cpp ****                     drawPixel(x + col, y + row, color);
 500              		.loc 1 183 0
 501 0048 45FA04F3 		asr	r3, r5, r4
 502 004c DB07     		lsls	r3, r3, #31
 503 004e F8D5     		bpl	.L16
 184:src/Impl/oled_driver.cpp ****             }
 504              		.loc 1 184 0
 505 0050 09EB0401 		add	r1, r9, r4
 506 0054 C9B2     		uxtb	r1, r1
 507 0056 4346     		mov	r3, r8
 508 0058 3246     		mov	r2, r6
 509 005a 5046     		mov	r0, r10
 510 005c 0134     		adds	r4, r4, #1
 511              	.LVL38:
 512 005e FFF7FEFF 		bl	_ZN10OledDriver9drawPixelEhht
 513              	.LVL39:
 181:src/Impl/oled_driver.cpp ****             {
 514              		.loc 1 181 0
 515 0062 082C     		cmp	r4, #8
 516 0064 F0D1     		bne	.L17
 517              	.L26:
 518              	.LVL40:
 519 0066 0137     		adds	r7, r7, #1
 520              	.LVL41:
 521              	.LBE87:
ARM GAS  /tmp/ccPpoULl.s 			page 15


 522              	.LBE85:
 178:src/Impl/oled_driver.cpp ****         {
 523              		.loc 1 178 0
 524 0068 082F     		cmp	r7, #8
 525 006a D7D1     		bne	.L18
 526              	.LBE84:
 527              	.LBE88:
 188:src/Impl/oled_driver.cpp **** 
 528              		.loc 1 188 0
 529 006c 03B0     		add	sp, sp, #12
 530              		.cfi_def_cfa_offset 36
 531              		@ sp needed
 532 006e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 533              		.cfi_endproc
 534              	.LFE2041:
 536 0072 00BF     		.section	.text._ZN10OledDriver10drawSymbolEchht,"ax",%progbits
 537              		.align	1
 538              		.p2align 2,,3
 539              		.global	_ZN10OledDriver10drawSymbolEchht
 540              		.syntax unified
 541              		.thumb
 542              		.thumb_func
 543              		.fpu softvfp
 545              	_ZN10OledDriver10drawSymbolEchht:
 546              	.LFB1777:
 173:src/Impl/oled_driver.cpp ****     if (symbol >= ' ' && symbol <= '~')
 547              		.loc 1 173 0
 548              		.cfi_startproc
 549              		@ args = 4, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              		@ link register save eliminated.
 552              	.LVL42:
 553 0000 30B4     		push	{r4, r5}
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 4, -8
 556              		.cfi_offset 5, -4
 557              	.LBB89:
 174:src/Impl/oled_driver.cpp ****     {
 558              		.loc 1 174 0
 559 0002 A1F12004 		sub	r4, r1, #32
 560 0006 5E2C     		cmp	r4, #94
 561              	.LBE89:
 173:src/Impl/oled_driver.cpp ****     if (symbol >= ' ' && symbol <= '~')
 562              		.loc 1 173 0
 563 0008 BDF80850 		ldrh	r5, [sp, #8]
 564              	.LBB90:
 174:src/Impl/oled_driver.cpp ****     {
 565              		.loc 1 174 0
 566 000c 01D9     		bls	.L30
 567              	.LBE90:
 188:src/Impl/oled_driver.cpp **** 
 568              		.loc 1 188 0
 569 000e 30BC     		pop	{r4, r5}
 570              		.cfi_remember_state
 571              		.cfi_restore 5
 572              		.cfi_restore 4
 573              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccPpoULl.s 			page 16


 574              	.LVL43:
 575 0010 7047     		bx	lr
 576              	.LVL44:
 577              	.L30:
 578              		.cfi_restore_state
 579 0012 0295     		str	r5, [sp, #8]
 580              	.LVL45:
 581 0014 30BC     		pop	{r4, r5}
 582              		.cfi_restore 5
 583              		.cfi_restore 4
 584              		.cfi_def_cfa_offset 0
 585 0016 FFF7FEBF 		b	_ZN10OledDriver10drawSymbolEchht.part.0
 586              	.LVL46:
 587              		.cfi_endproc
 588              	.LFE1777:
 590 001a 00BF     		.section	.text._ZN10OledDriver9printTextEPKchht,"ax",%progbits
 591              		.align	1
 592              		.p2align 2,,3
 593              		.global	_ZN10OledDriver9printTextEPKchht
 594              		.syntax unified
 595              		.thumb
 596              		.thumb_func
 597              		.fpu softvfp
 599              	_ZN10OledDriver9printTextEPKchht:
 600              	.LFB1779:
 197:src/Impl/oled_driver.cpp ****     uint8_t symbolIndex = (y / 8) * 12 + x / 8;
 601              		.loc 1 197 0
 602              		.cfi_startproc
 603              		@ args = 4, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              	.LVL47:
 606 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 607              		.cfi_def_cfa_offset 24
 608              		.cfi_offset 4, -24
 609              		.cfi_offset 5, -20
 610              		.cfi_offset 6, -16
 611              		.cfi_offset 7, -12
 612              		.cfi_offset 8, -8
 613              		.cfi_offset 14, -4
 198:src/Impl/oled_driver.cpp ****     uint8_t index = 0;
 614              		.loc 1 198 0
 615 0004 DB08     		lsrs	r3, r3, #3
 616              	.LVL48:
 617 0006 03EB4303 		add	r3, r3, r3, lsl #1
 618 000a D208     		lsrs	r2, r2, #3
 619              	.LVL49:
 620 000c 02EB8303 		add	r3, r2, r3, lsl #2
 621 0010 DCB2     		uxtb	r4, r3
 622              	.LVL50:
 197:src/Impl/oled_driver.cpp ****     uint8_t symbolIndex = (y / 8) * 12 + x / 8;
 623              		.loc 1 197 0
 624 0012 82B0     		sub	sp, sp, #8
 625              		.cfi_def_cfa_offset 32
 200:src/Impl/oled_driver.cpp ****     {
 626              		.loc 1 200 0
 627 0014 5F2C     		cmp	r4, #95
 197:src/Impl/oled_driver.cpp ****     uint8_t symbolIndex = (y / 8) * 12 + x / 8;
ARM GAS  /tmp/ccPpoULl.s 			page 17


 628              		.loc 1 197 0
 629 0016 BDF82070 		ldrh	r7, [sp, #32]
 200:src/Impl/oled_driver.cpp ****     {
 630              		.loc 1 200 0
 631 001a 24D8     		bhi	.L31
 632 001c 0D46     		mov	r5, r1
 633 001e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 634              	.LVL51:
 635 0020 09B3     		cbz	r1, .L31
 636 0022 0646     		mov	r6, r0
 637              	.LBB91:
 202:src/Impl/oled_driver.cpp ****         uint8_t s_x = (symbolIndex % 12) * 8;
 638              		.loc 1 202 0
 639 0024 DFF84480 		ldr	r8, .L48
 640 0028 06E0     		b	.L34
 641              	.LVL52:
 642              	.L35:
 205:src/Impl/oled_driver.cpp ****         index++;
 643              		.loc 1 205 0
 644 002a 0134     		adds	r4, r4, #1
 645              	.LVL53:
 646 002c E4B2     		uxtb	r4, r4
 647              	.LVL54:
 648              	.LBE91:
 200:src/Impl/oled_driver.cpp ****     {
 649              		.loc 1 200 0
 650 002e 602C     		cmp	r4, #96
 651 0030 19D0     		beq	.L31
 652              	.L46:
 200:src/Impl/oled_driver.cpp ****     {
 653              		.loc 1 200 0 is_stmt 0 discriminator 1
 654 0032 15F8011F 		ldrb	r1, [r5, #1]!	@ zero_extendqisi2
 655 0036 B1B1     		cbz	r1, .L31
 656              	.LVL55:
 657              	.L34:
 658              	.LBB99:
 659              	.LBB92:
 660              	.LBB93:
 661              	.LBB94:
 174:src/Impl/oled_driver.cpp ****     {
 662              		.loc 1 174 0 is_stmt 1
 663 0038 A1F12003 		sub	r3, r1, #32
 664 003c 5E2B     		cmp	r3, #94
 665 003e F4D8     		bhi	.L35
 666              	.LBE94:
 667              	.LBE93:
 668              	.LBE92:
 202:src/Impl/oled_driver.cpp ****         uint8_t s_x = (symbolIndex % 12) * 8;
 669              		.loc 1 202 0
 670 0040 A8FB0423 		umull	r2, r3, r8, r4
 671 0044 DB08     		lsrs	r3, r3, #3
 203:src/Impl/oled_driver.cpp ****         drawSymbol(text[index], s_x, s_y, color);
 672              		.loc 1 203 0
 673 0046 03EB4302 		add	r2, r3, r3, lsl #1
 674 004a A4EB8202 		sub	r2, r4, r2, lsl #2
 675 004e D200     		lsls	r2, r2, #3
 205:src/Impl/oled_driver.cpp ****         index++;
ARM GAS  /tmp/ccPpoULl.s 			page 18


 676              		.loc 1 205 0
 677 0050 0134     		adds	r4, r4, #1
 678              	.LVL56:
 679              	.LBB97:
 680              	.LBB95:
 681 0052 0097     		str	r7, [sp]
 682 0054 02F0F802 		and	r2, r2, #248
 683 0058 DB00     		lsls	r3, r3, #3
 684 005a 3046     		mov	r0, r6
 685              	.LBE95:
 686              	.LBE97:
 687 005c E4B2     		uxtb	r4, r4
 688              	.LBB98:
 689              	.LBB96:
 690 005e FFF7FEFF 		bl	_ZN10OledDriver10drawSymbolEchht.part.0
 691              	.LVL57:
 692              	.LBE96:
 693              	.LBE98:
 694              	.LBE99:
 200:src/Impl/oled_driver.cpp ****     {
 695              		.loc 1 200 0
 696 0062 602C     		cmp	r4, #96
 697 0064 E5D1     		bne	.L46
 698              	.LVL58:
 699              	.L31:
 208:src/Impl/oled_driver.cpp **** 
 700              		.loc 1 208 0
 701 0066 02B0     		add	sp, sp, #8
 702              		.cfi_def_cfa_offset 24
 703              		@ sp needed
 704 0068 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 705              	.LVL59:
 706              	.L49:
 707              		.align	2
 708              	.L48:
 709 006c ABAAAAAA 		.word	-1431655765
 710              		.cfi_endproc
 711              	.LFE1779:
 713              		.section	.text._ZN10OledDriver8sendDataEh,"ax",%progbits
 714              		.align	1
 715              		.p2align 2,,3
 716              		.global	_ZN10OledDriver8sendDataEh
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 720              		.fpu softvfp
 722              	_ZN10OledDriver8sendDataEh:
 723              	.LFB1782:
 234:src/Impl/oled_driver.cpp ****     setDC(HIGH);
 724              		.loc 1 234 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              	.LVL60:
 729 0000 70B5     		push	{r4, r5, r6, lr}
 730              		.cfi_def_cfa_offset 16
 731              		.cfi_offset 4, -16
ARM GAS  /tmp/ccPpoULl.s 			page 19


 732              		.cfi_offset 5, -12
 733              		.cfi_offset 6, -8
 734              		.cfi_offset 14, -4
 234:src/Impl/oled_driver.cpp ****     setDC(HIGH);
 735              		.loc 1 234 0
 736 0002 0446     		mov	r4, r0
 737              	.LVL61:
 738              	.LBB100:
 739              	.LBB101:
 740              		.loc 1 254 0
 741 0004 0F4D     		ldr	r5, .L52
 742              	.LBE101:
 743              	.LBE100:
 234:src/Impl/oled_driver.cpp ****     setDC(HIGH);
 744              		.loc 1 234 0
 745 0006 0E46     		mov	r6, r1
 746              	.LBB103:
 747              	.LBB102:
 748              		.loc 1 254 0
 749 0008 2846     		mov	r0, r5
 750              	.LVL62:
 751 000a 0122     		movs	r2, #1
 752 000c 4FF48061 		mov	r1, #1024
 753              	.LVL63:
 754 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 755              	.LVL64:
 756              	.LBE102:
 757              	.LBE103:
 758              	.LBB104:
 759              	.LBB105:
 249:src/Impl/oled_driver.cpp **** }
 760              		.loc 1 249 0
 761 0014 2846     		mov	r0, r5
 762 0016 0022     		movs	r2, #0
 763 0018 4FF40061 		mov	r1, #2048
 764 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 765              	.LVL65:
 766              	.LBE105:
 767              	.LBE104:
 768              	.LBB106:
 769              	.LBB107:
 243:src/Impl/oled_driver.cpp ****     HAL_SPI_Transmit(&hspi1, &spiBuffer, 1, 1000);
 770              		.loc 1 243 0
 771 0020 2146     		mov	r1, r4
 244:src/Impl/oled_driver.cpp **** }
 772              		.loc 1 244 0
 773 0022 0122     		movs	r2, #1
 243:src/Impl/oled_driver.cpp ****     HAL_SPI_Transmit(&hspi1, &spiBuffer, 1, 1000);
 774              		.loc 1 243 0
 775 0024 01F8016F 		strb	r6, [r1, #1]!
 244:src/Impl/oled_driver.cpp **** }
 776              		.loc 1 244 0
 777 0028 4FF47A73 		mov	r3, #1000
 778 002c 0648     		ldr	r0, .L52+4
 779 002e FFF7FEFF 		bl	HAL_SPI_Transmit
 780              	.LVL66:
 781              	.LBE107:
ARM GAS  /tmp/ccPpoULl.s 			page 20


 782              	.LBE106:
 783              	.LBB108:
 784              	.LBB109:
 249:src/Impl/oled_driver.cpp **** }
 785              		.loc 1 249 0
 786 0032 2846     		mov	r0, r5
 787              	.LBE109:
 788              	.LBE108:
 239:src/Impl/oled_driver.cpp **** 
 789              		.loc 1 239 0
 790 0034 BDE87040 		pop	{r4, r5, r6, lr}
 791              		.cfi_restore 14
 792              		.cfi_restore 6
 793              		.cfi_restore 5
 794              		.cfi_restore 4
 795              		.cfi_def_cfa_offset 0
 796              	.LVL67:
 797              	.LBB111:
 798              	.LBB110:
 249:src/Impl/oled_driver.cpp **** }
 799              		.loc 1 249 0
 800 0038 0122     		movs	r2, #1
 801 003a 4FF40061 		mov	r1, #2048
 802 003e FFF7FEBF 		b	HAL_GPIO_WritePin
 803              	.LVL68:
 804              	.L53:
 805 0042 00BF     		.align	2
 806              	.L52:
 807 0044 000C0140 		.word	1073810432
 808 0048 00000000 		.word	hspi1
 809              	.LBE110:
 810              	.LBE111:
 811              		.cfi_endproc
 812              	.LFE1782:
 814              		.section	.text._ZN10OledDriver11transmitSpiEh,"ax",%progbits
 815              		.align	1
 816              		.p2align 2,,3
 817              		.global	_ZN10OledDriver11transmitSpiEh
 818              		.syntax unified
 819              		.thumb
 820              		.thumb_func
 821              		.fpu softvfp
 823              	_ZN10OledDriver11transmitSpiEh:
 824              	.LFB1783:
 242:src/Impl/oled_driver.cpp ****     spiBuffer = data;
 825              		.loc 1 242 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829              		@ link register save eliminated.
 830              	.LVL69:
 243:src/Impl/oled_driver.cpp ****     HAL_SPI_Transmit(&hspi1, &spiBuffer, 1, 1000);
 831              		.loc 1 243 0
 832 0000 00F8011F 		strb	r1, [r0, #1]!
 833              	.LVL70:
 244:src/Impl/oled_driver.cpp **** }
 834              		.loc 1 244 0
ARM GAS  /tmp/ccPpoULl.s 			page 21


 835 0004 0146     		mov	r1, r0
 836              	.LVL71:
 837 0006 4FF47A73 		mov	r3, #1000
 838 000a 0122     		movs	r2, #1
 839 000c 0148     		ldr	r0, .L55
 840              	.LVL72:
 841 000e FFF7FEBF 		b	HAL_SPI_Transmit
 842              	.LVL73:
 843              	.L56:
 844 0012 00BF     		.align	2
 845              	.L55:
 846 0014 00000000 		.word	hspi1
 847              		.cfi_endproc
 848              	.LFE1783:
 850              		.section	.text._ZN10OledDriver5setCSENS_8PinStateE,"ax",%progbits
 851              		.align	1
 852              		.p2align 2,,3
 853              		.global	_ZN10OledDriver5setCSENS_8PinStateE
 854              		.syntax unified
 855              		.thumb
 856              		.thumb_func
 857              		.fpu softvfp
 859              	_ZN10OledDriver5setCSENS_8PinStateE:
 860              	.LFB1784:
 248:src/Impl/oled_driver.cpp ****     HAL_GPIO_WritePin(Dsp_CS_GPIO_Port, Dsp_CS_Pin, (GPIO_PinState)state);
 861              		.loc 1 248 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 0
 864              		@ frame_needed = 0, uses_anonymous_args = 0
 865              		@ link register save eliminated.
 866              	.LVL74:
 249:src/Impl/oled_driver.cpp **** }
 867              		.loc 1 249 0
 868 0000 0A46     		mov	r2, r1
 869 0002 0248     		ldr	r0, .L58
 870              	.LVL75:
 871 0004 4FF40061 		mov	r1, #2048
 872              	.LVL76:
 873 0008 FFF7FEBF 		b	HAL_GPIO_WritePin
 874              	.LVL77:
 875              	.L59:
 876              		.align	2
 877              	.L58:
 878 000c 000C0140 		.word	1073810432
 879              		.cfi_endproc
 880              	.LFE1784:
 882              		.section	.text._ZN10OledDriver5setDCENS_8PinStateE,"ax",%progbits
 883              		.align	1
 884              		.p2align 2,,3
 885              		.global	_ZN10OledDriver5setDCENS_8PinStateE
 886              		.syntax unified
 887              		.thumb
 888              		.thumb_func
 889              		.fpu softvfp
 891              	_ZN10OledDriver5setDCENS_8PinStateE:
 892              	.LFB1785:
 253:src/Impl/oled_driver.cpp ****     HAL_GPIO_WritePin(Dsp_DC_GPIO_Port, Dsp_DC_Pin, (GPIO_PinState)state);
ARM GAS  /tmp/ccPpoULl.s 			page 22


 893              		.loc 1 253 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 0
 896              		@ frame_needed = 0, uses_anonymous_args = 0
 897              		@ link register save eliminated.
 898              	.LVL78:
 899              		.loc 1 254 0
 900 0000 0A46     		mov	r2, r1
 901 0002 0248     		ldr	r0, .L61
 902              	.LVL79:
 903 0004 4FF48061 		mov	r1, #1024
 904              	.LVL80:
 905 0008 FFF7FEBF 		b	HAL_GPIO_WritePin
 906              	.LVL81:
 907              	.L62:
 908              		.align	2
 909              	.L61:
 910 000c 000C0140 		.word	1073810432
 911              		.cfi_endproc
 912              	.LFE1785:
 914              		.section	.text._ZN10OledDriver6setRSTENS_8PinStateE,"ax",%progbits
 915              		.align	1
 916              		.p2align 2,,3
 917              		.global	_ZN10OledDriver6setRSTENS_8PinStateE
 918              		.syntax unified
 919              		.thumb
 920              		.thumb_func
 921              		.fpu softvfp
 923              	_ZN10OledDriver6setRSTENS_8PinStateE:
 924              	.LFB1786:
 255:src/Impl/oled_driver.cpp **** }
 256:src/Impl/oled_driver.cpp **** 
 257:src/Impl/oled_driver.cpp **** void OledDriver::setRST(const OledDriver::PinState state)
 258:src/Impl/oled_driver.cpp **** {
 925              		.loc 1 258 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              		@ link register save eliminated.
 930              	.LVL82:
 259:src/Impl/oled_driver.cpp ****     HAL_GPIO_WritePin(Dsp_RST_GPIO_Port, Dsp_RST_Pin, (GPIO_PinState)state);
 931              		.loc 1 259 0
 932 0000 0A46     		mov	r2, r1
 933 0002 0248     		ldr	r0, .L64
 934              	.LVL83:
 935 0004 0421     		movs	r1, #4
 936              	.LVL84:
 937 0006 FFF7FEBF 		b	HAL_GPIO_WritePin
 938              	.LVL85:
 939              	.L65:
 940 000a 00BF     		.align	2
 941              	.L64:
 942 000c 000C0140 		.word	1073810432
 943              		.cfi_endproc
 944              	.LFE1786:
 946              		.section	.text._ZN10OledDriver5resetEv,"ax",%progbits
 947              		.align	1
ARM GAS  /tmp/ccPpoULl.s 			page 23


 948              		.p2align 2,,3
 949              		.global	_ZN10OledDriver5resetEv
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 953              		.fpu softvfp
 955              	_ZN10OledDriver5resetEv:
 956              	.LFB1787:
 260:src/Impl/oled_driver.cpp **** }
 261:src/Impl/oled_driver.cpp **** 
 262:src/Impl/oled_driver.cpp **** void OledDriver::reset()
 263:src/Impl/oled_driver.cpp **** {
 957              		.loc 1 263 0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961              	.LVL86:
 962 0000 10B5     		push	{r4, lr}
 963              		.cfi_def_cfa_offset 8
 964              		.cfi_offset 4, -8
 965              		.cfi_offset 14, -4
 966              	.LBB112:
 967              	.LBB113:
 259:src/Impl/oled_driver.cpp ****     HAL_GPIO_WritePin(Dsp_RST_GPIO_Port, Dsp_RST_Pin, (GPIO_PinState)state);
 968              		.loc 1 259 0
 969 0002 094C     		ldr	r4, .L68
 970 0004 0122     		movs	r2, #1
 971 0006 2046     		mov	r0, r4
 972              	.LVL87:
 973 0008 0421     		movs	r1, #4
 974 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 975              	.LVL88:
 976              	.LBE113:
 977              	.LBE112:
 978              	.LBB114:
 979              	.LBB115:
 980 000e 2046     		mov	r0, r4
 981 0010 0022     		movs	r2, #0
 982 0012 0421     		movs	r1, #4
 983 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 984              	.LVL89:
 985              	.LBE115:
 986              	.LBE114:
 987              	.LBB116:
 988              	.LBB117:
 989 0018 2046     		mov	r0, r4
 990              	.LBE117:
 991              	.LBE116:
 264:src/Impl/oled_driver.cpp ****     setRST(HIGH);
 265:src/Impl/oled_driver.cpp ****     setRST(LOW);
 266:src/Impl/oled_driver.cpp ****     setRST(HIGH);
 267:src/Impl/oled_driver.cpp **** }
 992              		.loc 1 267 0
 993 001a BDE81040 		pop	{r4, lr}
 994              		.cfi_restore 14
 995              		.cfi_restore 4
 996              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccPpoULl.s 			page 24


 997              	.LBB119:
 998              	.LBB118:
 259:src/Impl/oled_driver.cpp **** }
 999              		.loc 1 259 0
 1000 001e 0122     		movs	r2, #1
 1001 0020 0421     		movs	r1, #4
 1002 0022 FFF7FEBF 		b	HAL_GPIO_WritePin
 1003              	.LVL90:
 1004              	.L69:
 1005 0026 00BF     		.align	2
 1006              	.L68:
 1007 0028 000C0140 		.word	1073810432
 1008              	.LBE118:
 1009              	.LBE119:
 1010              		.cfi_endproc
 1011              	.LFE1787:
 1013              		.section	.text._ZN10OledDriver9pushColorEt,"ax",%progbits
 1014              		.align	1
 1015              		.p2align 2,,3
 1016              		.global	_ZN10OledDriver9pushColorEt
 1017              		.syntax unified
 1018              		.thumb
 1019              		.thumb_func
 1020              		.fpu softvfp
 1022              	_ZN10OledDriver9pushColorEt:
 1023              	.LFB1788:
 268:src/Impl/oled_driver.cpp **** 
 269:src/Impl/oled_driver.cpp **** void OledDriver::pushColor(const uint16_t color)
 270:src/Impl/oled_driver.cpp **** {
 1024              		.loc 1 270 0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028              	.LVL91:
 1029 0000 38B5     		push	{r3, r4, r5, lr}
 1030              		.cfi_def_cfa_offset 16
 1031              		.cfi_offset 3, -16
 1032              		.cfi_offset 4, -12
 1033              		.cfi_offset 5, -8
 1034              		.cfi_offset 14, -4
 1035              		.loc 1 270 0
 1036 0002 0C46     		mov	r4, r1
 1037 0004 0546     		mov	r5, r0
 271:src/Impl/oled_driver.cpp ****     sendCommand((uint8_t)((color >> 11) << 1));
 1038              		.loc 1 271 0
 1039 0006 C912     		asrs	r1, r1, #11
 1040              	.LVL92:
 1041 0008 4900     		lsls	r1, r1, #1
 1042 000a FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1043              	.LVL93:
 272:src/Impl/oled_driver.cpp ****     sendCommand((uint8_t)((color >> 5) & 0x3F));
 1044              		.loc 1 272 0
 1045 000e C4F34511 		ubfx	r1, r4, #5, #6
 1046 0012 2846     		mov	r0, r5
 1047 0014 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1048              	.LVL94:
 273:src/Impl/oled_driver.cpp ****     sendCommand((uint8_t)((color << 1) & 0x3F));
ARM GAS  /tmp/ccPpoULl.s 			page 25


 1049              		.loc 1 273 0
 1050 0018 6100     		lsls	r1, r4, #1
 1051 001a 2846     		mov	r0, r5
 274:src/Impl/oled_driver.cpp **** }
 1052              		.loc 1 274 0
 1053 001c BDE83840 		pop	{r3, r4, r5, lr}
 1054              		.cfi_restore 14
 1055              		.cfi_restore 5
 1056              		.cfi_restore 4
 1057              		.cfi_restore 3
 1058              		.cfi_def_cfa_offset 0
 1059              	.LVL95:
 273:src/Impl/oled_driver.cpp ****     sendCommand((uint8_t)((color << 1) & 0x3F));
 1060              		.loc 1 273 0
 1061 0020 01F03E01 		and	r1, r1, #62
 1062 0024 FFF7FEBF 		b	_ZN10OledDriver11sendCommandEh
 1063              	.LVL96:
 1064              		.cfi_endproc
 1065              	.LFE1788:
 1067              		.section	.text._ZN10OledDriver17drawFillRectangleEhhhhtt,"ax",%progbits
 1068              		.align	1
 1069              		.p2align 2,,3
 1070              		.global	_ZN10OledDriver17drawFillRectangleEhhhhtt
 1071              		.syntax unified
 1072              		.thumb
 1073              		.thumb_func
 1074              		.fpu softvfp
 1076              	_ZN10OledDriver17drawFillRectangleEhhhhtt:
 1077              	.LFB1774:
 131:src/Impl/oled_driver.cpp **** 
 1078              		.loc 1 131 0
 1079              		.cfi_startproc
 1080              		@ args = 12, pretend = 0, frame = 0
 1081              		@ frame_needed = 0, uses_anonymous_args = 0
 1082              	.LVL97:
 1083 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1084              		.cfi_def_cfa_offset 32
 1085              		.cfi_offset 4, -32
 1086              		.cfi_offset 5, -28
 1087              		.cfi_offset 6, -24
 1088              		.cfi_offset 7, -20
 1089              		.cfi_offset 8, -16
 1090              		.cfi_offset 9, -12
 1091              		.cfi_offset 10, -8
 1092              		.cfi_offset 14, -4
 131:src/Impl/oled_driver.cpp **** 
 1093              		.loc 1 131 0
 1094 0004 0446     		mov	r4, r0
 1095 0006 0E46     		mov	r6, r1
 1096 0008 1546     		mov	r5, r2
 1097 000a 9A46     		mov	r10, r3
 133:src/Impl/oled_driver.cpp ****     sendCommand(x);
 1098              		.loc 1 133 0
 1099 000c 2221     		movs	r1, #34
 1100              	.LVL98:
 131:src/Impl/oled_driver.cpp **** 
 1101              		.loc 1 131 0
ARM GAS  /tmp/ccPpoULl.s 			page 26


 1102 000e 9DF82090 		ldrb	r9, [sp, #32]	@ zero_extendqisi2
 1103 0012 BDF82480 		ldrh	r8, [sp, #36]
 1104 0016 BDF82870 		ldrh	r7, [sp, #40]
 133:src/Impl/oled_driver.cpp ****     sendCommand(x);
 1105              		.loc 1 133 0
 1106 001a FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1107              	.LVL99:
 134:src/Impl/oled_driver.cpp ****     sendCommand(y);
 1108              		.loc 1 134 0
 1109 001e 3146     		mov	r1, r6
 1110 0020 2046     		mov	r0, r4
 1111 0022 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1112              	.LVL100:
 135:src/Impl/oled_driver.cpp ****     sendCommand(x + width);
 1113              		.loc 1 135 0
 1114 0026 2946     		mov	r1, r5
 1115 0028 2046     		mov	r0, r4
 1116 002a FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1117              	.LVL101:
 136:src/Impl/oled_driver.cpp ****     sendCommand(y + height);
 1118              		.loc 1 136 0
 1119 002e 06EB0A01 		add	r1, r6, r10
 1120 0032 2046     		mov	r0, r4
 1121 0034 C9B2     		uxtb	r1, r1
 1122 0036 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1123              	.LVL102:
 137:src/Impl/oled_driver.cpp **** 
 1124              		.loc 1 137 0
 1125 003a 05EB0901 		add	r1, r5, r9
 1126 003e 2046     		mov	r0, r4
 1127 0040 C9B2     		uxtb	r1, r1
 1128 0042 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1129              	.LVL103:
 141:src/Impl/oled_driver.cpp **** 
 1130              		.loc 1 141 0
 1131 0046 4146     		mov	r1, r8
 1132 0048 2046     		mov	r0, r4
 1133 004a FFF7FEFF 		bl	_ZN10OledDriver9pushColorEt
 1134              	.LVL104:
 144:src/Impl/oled_driver.cpp **** 
 1135              		.loc 1 144 0
 1136 004e 3946     		mov	r1, r7
 1137 0050 2046     		mov	r0, r4
 148:src/Impl/oled_driver.cpp **** 
 1138              		.loc 1 148 0
 1139 0052 BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 1140              		.cfi_restore 14
 1141              		.cfi_restore 10
 1142              		.cfi_restore 9
 1143              		.cfi_restore 8
 1144              		.cfi_restore 7
 1145              		.cfi_restore 6
 1146              		.cfi_restore 5
 1147              		.cfi_restore 4
 1148              		.cfi_def_cfa_offset 0
 1149              	.LVL105:
 144:src/Impl/oled_driver.cpp **** 
ARM GAS  /tmp/ccPpoULl.s 			page 27


 1150              		.loc 1 144 0
 1151 0056 FFF7FEBF 		b	_ZN10OledDriver9pushColorEt
 1152              	.LVL106:
 1153              		.cfi_endproc
 1154              	.LFE1774:
 1156 005a 00BF     		.section	.text._ZN10OledDriver17drawFillRectangleEhhhht,"ax",%progbits
 1157              		.align	1
 1158              		.p2align 2,,3
 1159              		.global	_ZN10OledDriver17drawFillRectangleEhhhht
 1160              		.syntax unified
 1161              		.thumb
 1162              		.thumb_func
 1163              		.fpu softvfp
 1165              	_ZN10OledDriver17drawFillRectangleEhhhht:
 1166              	.LFB1775:
 151:src/Impl/oled_driver.cpp ****     drawFillRectangle(x, y, width, height, color, color);
 1167              		.loc 1 151 0
 1168              		.cfi_startproc
 1169              		@ args = 8, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171              	.LVL107:
 1172 0000 30B5     		push	{r4, r5, lr}
 1173              		.cfi_def_cfa_offset 12
 1174              		.cfi_offset 4, -12
 1175              		.cfi_offset 5, -8
 1176              		.cfi_offset 14, -4
 1177 0002 85B0     		sub	sp, sp, #20
 1178              		.cfi_def_cfa_offset 32
 151:src/Impl/oled_driver.cpp ****     drawFillRectangle(x, y, width, height, color, color);
 1179              		.loc 1 151 0
 1180 0004 BDF82440 		ldrh	r4, [sp, #36]
 1181 0008 9DF82050 		ldrb	r5, [sp, #32]	@ zero_extendqisi2
 152:src/Impl/oled_driver.cpp **** }
 1182              		.loc 1 152 0
 1183 000c 0294     		str	r4, [sp, #8]
 1184 000e 0095     		str	r5, [sp]
 1185 0010 0194     		str	r4, [sp, #4]
 1186 0012 FFF7FEFF 		bl	_ZN10OledDriver17drawFillRectangleEhhhhtt
 1187              	.LVL108:
 153:src/Impl/oled_driver.cpp **** 
 1188              		.loc 1 153 0
 1189 0016 05B0     		add	sp, sp, #20
 1190              		.cfi_def_cfa_offset 12
 1191              		@ sp needed
 1192 0018 30BD     		pop	{r4, r5, pc}
 1193              		.cfi_endproc
 1194              	.LFE1775:
 1196 001a 00BF     		.section	.text._ZN10OledDriver10fillScreenEt,"ax",%progbits
 1197              		.align	1
 1198              		.p2align 2,,3
 1199              		.global	_ZN10OledDriver10fillScreenEt
 1200              		.syntax unified
 1201              		.thumb
 1202              		.thumb_func
 1203              		.fpu softvfp
 1205              	_ZN10OledDriver10fillScreenEt:
 1206              	.LFB1771:
ARM GAS  /tmp/ccPpoULl.s 			page 28


  79:src/Impl/oled_driver.cpp ****     backgroundColor = color;
 1207              		.loc 1 79 0
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 0
 1210              		@ frame_needed = 0, uses_anonymous_args = 0
 1211              	.LVL109:
 1212 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1213              		.cfi_def_cfa_offset 24
 1214              		.cfi_offset 4, -24
 1215              		.cfi_offset 5, -20
 1216              		.cfi_offset 6, -16
 1217              		.cfi_offset 7, -12
 1218              		.cfi_offset 8, -8
 1219              		.cfi_offset 14, -4
 1220 0004 0746     		mov	r7, r0
 1221 0006 0D46     		mov	r5, r1
  80:src/Impl/oled_driver.cpp ****     for (uint8_t y = 0; y < 64; y += 16)
 1222              		.loc 1 80 0
 1223 0008 0026     		movs	r6, #0
 1224              	.LBB120:
 1225              	.LBB121:
 1226              	.LBB122:
 1227              	.LBB123:
 152:src/Impl/oled_driver.cpp **** }
 1228              		.loc 1 152 0
 1229 000a 4FF01008 		mov	r8, #16
 1230              	.LBE123:
 1231              	.LBE122:
 1232              	.LBE121:
 1233              	.LBE120:
  79:src/Impl/oled_driver.cpp ****     backgroundColor = color;
 1234              		.loc 1 79 0
 1235 000e 84B0     		sub	sp, sp, #16
 1236              		.cfi_def_cfa_offset 40
  80:src/Impl/oled_driver.cpp ****     for (uint8_t y = 0; y < 64; y += 16)
 1237              		.loc 1 80 0
 1238 0010 7980     		strh	r1, [r7, #2]	@ movhi
 1239              	.LVL110:
 1240              	.L78:
  80:src/Impl/oled_driver.cpp ****     for (uint8_t y = 0; y < 64; y += 16)
 1241              		.loc 1 80 0 is_stmt 0 discriminator 3
 1242 0012 0024     		movs	r4, #0
 1243              	.LVL111:
 1244              	.L77:
 1245              	.LBB131:
 1246              	.LBB130:
 1247              	.LBB127:
 1248              	.LBB124:
 152:src/Impl/oled_driver.cpp **** }
 1249              		.loc 1 152 0 is_stmt 1
 1250 0014 2146     		mov	r1, r4
 1251              	.LBE124:
 1252              	.LBE127:
  83:src/Impl/oled_driver.cpp ****         {
 1253              		.loc 1 83 0
 1254 0016 1034     		adds	r4, r4, #16
 1255              	.LVL112:
ARM GAS  /tmp/ccPpoULl.s 			page 29


 1256              	.LBB128:
 1257              	.LBB125:
 152:src/Impl/oled_driver.cpp **** }
 1258              		.loc 1 152 0
 1259 0018 0295     		str	r5, [sp, #8]
 1260 001a 0195     		str	r5, [sp, #4]
 1261 001c CDF80080 		str	r8, [sp]
 1262 0020 1023     		movs	r3, #16
 1263 0022 3246     		mov	r2, r6
 1264 0024 3846     		mov	r0, r7
 1265              	.LBE125:
 1266              	.LBE128:
  83:src/Impl/oled_driver.cpp ****         {
 1267              		.loc 1 83 0
 1268 0026 E4B2     		uxtb	r4, r4
 1269              	.LBB129:
 1270              	.LBB126:
 152:src/Impl/oled_driver.cpp **** }
 1271              		.loc 1 152 0
 1272 0028 FFF7FEFF 		bl	_ZN10OledDriver17drawFillRectangleEhhhhtt
 1273              	.LVL113:
 1274              	.LBE126:
 1275              	.LBE129:
  83:src/Impl/oled_driver.cpp ****         {
 1276              		.loc 1 83 0
 1277 002c 602C     		cmp	r4, #96
 1278 002e F1D1     		bne	.L77
 1279              	.LBE130:
  81:src/Impl/oled_driver.cpp ****     {
 1280              		.loc 1 81 0 discriminator 2
 1281 0030 1036     		adds	r6, r6, #16
 1282              	.LVL114:
 1283 0032 F6B2     		uxtb	r6, r6
 1284              	.LVL115:
 1285 0034 402E     		cmp	r6, #64
 1286 0036 ECD1     		bne	.L78
 1287              	.LBE131:
  88:src/Impl/oled_driver.cpp **** 
 1288              		.loc 1 88 0
 1289 0038 04B0     		add	sp, sp, #16
 1290              		.cfi_def_cfa_offset 24
 1291              		@ sp needed
 1292 003a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1293              		.cfi_endproc
 1294              	.LFE1771:
 1296 003e 00BF     		.section	.text._ZN10OledDriver4initEt,"ax",%progbits
 1297              		.align	1
 1298              		.p2align 2,,3
 1299              		.global	_ZN10OledDriver4initEt
 1300              		.syntax unified
 1301              		.thumb
 1302              		.thumb_func
 1303              		.fpu softvfp
 1305              	_ZN10OledDriver4initEt:
 1306              	.LFB1768:
  18:src/Impl/oled_driver.cpp ****     reset();
 1307              		.loc 1 18 0
ARM GAS  /tmp/ccPpoULl.s 			page 30


 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              	.LVL116:
 1312 0000 38B5     		push	{r3, r4, r5, lr}
 1313              		.cfi_def_cfa_offset 16
 1314              		.cfi_offset 3, -16
 1315              		.cfi_offset 4, -12
 1316              		.cfi_offset 5, -8
 1317              		.cfi_offset 14, -4
  18:src/Impl/oled_driver.cpp ****     reset();
 1318              		.loc 1 18 0
 1319 0002 0446     		mov	r4, r0
 1320 0004 0D46     		mov	r5, r1
  19:src/Impl/oled_driver.cpp **** 
 1321              		.loc 1 19 0
 1322 0006 FFF7FEFF 		bl	_ZN10OledDriver5resetEv
 1323              	.LVL117:
  21:src/Impl/oled_driver.cpp ****     sendCommand(CLEAR_WINDOW);
 1324              		.loc 1 21 0
 1325 000a 2046     		mov	r0, r4
 1326 000c AE21     		movs	r1, #174
 1327 000e FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1328              	.LVL118:
  22:src/Impl/oled_driver.cpp ****     sendCommand(SET_CONTRAST_A);
 1329              		.loc 1 22 0
 1330 0012 2046     		mov	r0, r4
 1331 0014 2521     		movs	r1, #37
 1332 0016 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1333              	.LVL119:
  23:src/Impl/oled_driver.cpp ****     sendCommand(0x80);
 1334              		.loc 1 23 0
 1335 001a 2046     		mov	r0, r4
 1336 001c 8121     		movs	r1, #129
 1337 001e FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1338              	.LVL120:
  24:src/Impl/oled_driver.cpp ****     sendCommand(SET_CONTRAST_B);
 1339              		.loc 1 24 0
 1340 0022 2046     		mov	r0, r4
 1341 0024 8021     		movs	r1, #128
 1342 0026 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1343              	.LVL121:
  25:src/Impl/oled_driver.cpp ****     sendCommand(0x80);
 1344              		.loc 1 25 0
 1345 002a 2046     		mov	r0, r4
 1346 002c 8221     		movs	r1, #130
 1347 002e FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1348              	.LVL122:
  26:src/Impl/oled_driver.cpp ****     sendCommand(SET_CONTRAST_C);
 1349              		.loc 1 26 0
 1350 0032 2046     		mov	r0, r4
 1351 0034 8021     		movs	r1, #128
 1352 0036 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1353              	.LVL123:
  27:src/Impl/oled_driver.cpp ****     sendCommand(0x80);
 1354              		.loc 1 27 0
 1355 003a 2046     		mov	r0, r4
ARM GAS  /tmp/ccPpoULl.s 			page 31


 1356 003c 8321     		movs	r1, #131
 1357 003e FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1358              	.LVL124:
  28:src/Impl/oled_driver.cpp ****     sendCommand(MASTER_CURRENT_CONTROL);
 1359              		.loc 1 28 0
 1360 0042 2046     		mov	r0, r4
 1361 0044 8021     		movs	r1, #128
 1362 0046 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1363              	.LVL125:
  29:src/Impl/oled_driver.cpp ****     sendCommand(12);
 1364              		.loc 1 29 0
 1365 004a 2046     		mov	r0, r4
 1366 004c 8721     		movs	r1, #135
 1367 004e FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1368              	.LVL126:
  30:src/Impl/oled_driver.cpp ****     sendCommand(SET_PRECHARGE_SPEED_A);
 1369              		.loc 1 30 0
 1370 0052 2046     		mov	r0, r4
 1371 0054 0C21     		movs	r1, #12
 1372 0056 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1373              	.LVL127:
  31:src/Impl/oled_driver.cpp ****     sendCommand(0x64);
 1374              		.loc 1 31 0
 1375 005a 2046     		mov	r0, r4
 1376 005c 8A21     		movs	r1, #138
 1377 005e FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1378              	.LVL128:
  32:src/Impl/oled_driver.cpp ****     sendCommand(SET_PRECHARGE_SPEED_B);
 1379              		.loc 1 32 0
 1380 0062 2046     		mov	r0, r4
 1381 0064 6421     		movs	r1, #100
 1382 0066 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1383              	.LVL129:
  33:src/Impl/oled_driver.cpp ****     sendCommand(0x78);
 1384              		.loc 1 33 0
 1385 006a 2046     		mov	r0, r4
 1386 006c 8B21     		movs	r1, #139
 1387 006e FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1388              	.LVL130:
  34:src/Impl/oled_driver.cpp ****     sendCommand(SET_PRECHARGE_SPEED_C);
 1389              		.loc 1 34 0
 1390 0072 2046     		mov	r0, r4
 1391 0074 7821     		movs	r1, #120
 1392 0076 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1393              	.LVL131:
  35:src/Impl/oled_driver.cpp ****     sendCommand(0x64);
 1394              		.loc 1 35 0
 1395 007a 2046     		mov	r0, r4
 1396 007c 8C21     		movs	r1, #140
 1397 007e FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1398              	.LVL132:
  36:src/Impl/oled_driver.cpp ****     sendCommand(SET_REMAP);
 1399              		.loc 1 36 0
 1400 0082 2046     		mov	r0, r4
 1401 0084 6421     		movs	r1, #100
 1402 0086 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1403              	.LVL133:
ARM GAS  /tmp/ccPpoULl.s 			page 32


  37:src/Impl/oled_driver.cpp ****     sendCommand(0B01110010);
 1404              		.loc 1 37 0
 1405 008a 2046     		mov	r0, r4
 1406 008c A021     		movs	r1, #160
 1407 008e FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1408              	.LVL134:
  38:src/Impl/oled_driver.cpp ****     sendCommand(SET_DISPLAY_START_LINE);
 1409              		.loc 1 38 0
 1410 0092 2046     		mov	r0, r4
 1411 0094 7221     		movs	r1, #114
 1412 0096 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1413              	.LVL135:
  39:src/Impl/oled_driver.cpp ****     sendCommand(0x0);
 1414              		.loc 1 39 0
 1415 009a 2046     		mov	r0, r4
 1416 009c A121     		movs	r1, #161
 1417 009e FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1418              	.LVL136:
  40:src/Impl/oled_driver.cpp ****     sendCommand(SET_DISPLAY_OFFSET);
 1419              		.loc 1 40 0
 1420 00a2 2046     		mov	r0, r4
 1421 00a4 0021     		movs	r1, #0
 1422 00a6 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1423              	.LVL137:
  41:src/Impl/oled_driver.cpp ****     sendCommand(0x0);
 1424              		.loc 1 41 0
 1425 00aa 2046     		mov	r0, r4
 1426 00ac A221     		movs	r1, #162
 1427 00ae FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1428              	.LVL138:
  42:src/Impl/oled_driver.cpp ****     sendCommand(NORMAL_DISPLAY);
 1429              		.loc 1 42 0
 1430 00b2 2046     		mov	r0, r4
 1431 00b4 0021     		movs	r1, #0
 1432 00b6 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1433              	.LVL139:
  43:src/Impl/oled_driver.cpp ****     sendCommand(SET_MULTIPLEX_RATIO);
 1434              		.loc 1 43 0
 1435 00ba 2046     		mov	r0, r4
 1436 00bc A421     		movs	r1, #164
 1437 00be FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1438              	.LVL140:
  44:src/Impl/oled_driver.cpp ****     sendCommand(0x3F);
 1439              		.loc 1 44 0
 1440 00c2 2046     		mov	r0, r4
 1441 00c4 A821     		movs	r1, #168
 1442 00c6 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1443              	.LVL141:
  45:src/Impl/oled_driver.cpp ****     sendCommand(SET_MASTER_CONFIGURE);
 1444              		.loc 1 45 0
 1445 00ca 2046     		mov	r0, r4
 1446 00cc 3F21     		movs	r1, #63
 1447 00ce FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1448              	.LVL142:
  46:src/Impl/oled_driver.cpp ****     sendCommand(0x8E);
 1449              		.loc 1 46 0
 1450 00d2 2046     		mov	r0, r4
ARM GAS  /tmp/ccPpoULl.s 			page 33


 1451 00d4 AD21     		movs	r1, #173
 1452 00d6 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1453              	.LVL143:
  47:src/Impl/oled_driver.cpp ****     sendCommand(POWER_SAVE_MODE);
 1454              		.loc 1 47 0
 1455 00da 2046     		mov	r0, r4
 1456 00dc 8E21     		movs	r1, #142
 1457 00de FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1458              	.LVL144:
  48:src/Impl/oled_driver.cpp ****     sendCommand(0x01);
 1459              		.loc 1 48 0
 1460 00e2 2046     		mov	r0, r4
 1461 00e4 B021     		movs	r1, #176
 1462 00e6 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1463              	.LVL145:
  49:src/Impl/oled_driver.cpp ****     sendCommand(PHASE_PERIOD_ADJUSTMENT);
 1464              		.loc 1 49 0
 1465 00ea 2046     		mov	r0, r4
 1466 00ec 0121     		movs	r1, #1
 1467 00ee FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1468              	.LVL146:
  50:src/Impl/oled_driver.cpp ****     sendCommand(0x31);
 1469              		.loc 1 50 0
 1470 00f2 2046     		mov	r0, r4
 1471 00f4 B121     		movs	r1, #177
 1472 00f6 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1473              	.LVL147:
  51:src/Impl/oled_driver.cpp ****     sendCommand(DISPLAY_CLOCK_DIV);
 1474              		.loc 1 51 0
 1475 00fa 2046     		mov	r0, r4
 1476 00fc 3121     		movs	r1, #49
 1477 00fe FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1478              	.LVL148:
  52:src/Impl/oled_driver.cpp ****     sendCommand(0xF0);
 1479              		.loc 1 52 0
 1480 0102 2046     		mov	r0, r4
 1481 0104 B321     		movs	r1, #179
 1482 0106 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1483              	.LVL149:
  53:src/Impl/oled_driver.cpp ****     sendCommand(SET_PRECHARGE_VOLTAGE);
 1484              		.loc 1 53 0
 1485 010a 2046     		mov	r0, r4
 1486 010c F021     		movs	r1, #240
 1487 010e FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1488              	.LVL150:
  54:src/Impl/oled_driver.cpp ****     sendCommand(0x3A);
 1489              		.loc 1 54 0
 1490 0112 2046     		mov	r0, r4
 1491 0114 BB21     		movs	r1, #187
 1492 0116 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1493              	.LVL151:
  55:src/Impl/oled_driver.cpp ****     sendCommand(SET_V_VOLTAGE);
 1494              		.loc 1 55 0
 1495 011a 2046     		mov	r0, r4
 1496 011c 3A21     		movs	r1, #58
 1497 011e FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1498              	.LVL152:
ARM GAS  /tmp/ccPpoULl.s 			page 34


  56:src/Impl/oled_driver.cpp ****     sendCommand(0x3E);
 1499              		.loc 1 56 0
 1500 0122 2046     		mov	r0, r4
 1501 0124 BE21     		movs	r1, #190
 1502 0126 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1503              	.LVL153:
  57:src/Impl/oled_driver.cpp ****     sendCommand(DEACTIVE_SCROLLING);
 1504              		.loc 1 57 0
 1505 012a 2046     		mov	r0, r4
 1506 012c 3E21     		movs	r1, #62
 1507 012e FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1508              	.LVL154:
  58:src/Impl/oled_driver.cpp ****     sendCommand(NORMAL_BRIGHTNESS_DISPLAY_ON);
 1509              		.loc 1 58 0
 1510 0132 2046     		mov	r0, r4
 1511 0134 2E21     		movs	r1, #46
 1512 0136 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1513              	.LVL155:
  59:src/Impl/oled_driver.cpp ****     sendCommand(FILL_WINDOW);
 1514              		.loc 1 59 0
 1515 013a 2046     		mov	r0, r4
 1516 013c AF21     		movs	r1, #175
 1517 013e FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1518              	.LVL156:
  60:src/Impl/oled_driver.cpp ****     sendCommand(0x01);
 1519              		.loc 1 60 0
 1520 0142 2046     		mov	r0, r4
 1521 0144 2621     		movs	r1, #38
 1522 0146 FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1523              	.LVL157:
  61:src/Impl/oled_driver.cpp **** 
 1524              		.loc 1 61 0
 1525 014a 2046     		mov	r0, r4
 1526 014c 0121     		movs	r1, #1
 1527 014e FFF7FEFF 		bl	_ZN10OledDriver11sendCommandEh
 1528              	.LVL158:
  63:src/Impl/oled_driver.cpp **** 
 1529              		.loc 1 63 0
 1530 0152 2946     		mov	r1, r5
 1531 0154 2046     		mov	r0, r4
 1532 0156 FFF7FEFF 		bl	_ZN10OledDriver10fillScreenEt
 1533              	.LVL159:
  65:src/Impl/oled_driver.cpp **** }
 1534              		.loc 1 65 0
 1535 015a 0123     		movs	r3, #1
 1536 015c 2370     		strb	r3, [r4]
 1537 015e 38BD     		pop	{r3, r4, r5, pc}
 1538              		.cfi_endproc
 1539              	.LFE1768:
 1541              		.section	.text._ZN10OledDriver10drawSymbolEchhtt,"ax",%progbits
 1542              		.align	1
 1543              		.p2align 2,,3
 1544              		.global	_ZN10OledDriver10drawSymbolEchhtt
 1545              		.syntax unified
 1546              		.thumb
 1547              		.thumb_func
 1548              		.fpu softvfp
ARM GAS  /tmp/ccPpoULl.s 			page 35


 1550              	_ZN10OledDriver10drawSymbolEchhtt:
 1551              	.LFB1778:
 191:src/Impl/oled_driver.cpp ****     drawFillRectangle(x, y, 8, 8, backColor);
 1552              		.loc 1 191 0
 1553              		.cfi_startproc
 1554              		@ args = 8, pretend = 0, frame = 0
 1555              		@ frame_needed = 0, uses_anonymous_args = 0
 1556              	.LVL160:
 1557 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1558              		.cfi_def_cfa_offset 24
 1559              		.cfi_offset 4, -24
 1560              		.cfi_offset 5, -20
 1561              		.cfi_offset 6, -16
 1562              		.cfi_offset 7, -12
 1563              		.cfi_offset 8, -8
 1564              		.cfi_offset 14, -4
 1565 0004 1646     		mov	r6, r2
 1566 0006 1F46     		mov	r7, r3
 1567              	.LBB132:
 1568              	.LBB133:
 152:src/Impl/oled_driver.cpp **** }
 1569              		.loc 1 152 0
 1570 0008 0823     		movs	r3, #8
 1571              	.LVL161:
 1572              	.LBE133:
 1573              	.LBE132:
 191:src/Impl/oled_driver.cpp ****     drawFillRectangle(x, y, 8, 8, backColor);
 1574              		.loc 1 191 0
 1575 000a 0D46     		mov	r5, r1
 1576 000c 84B0     		sub	sp, sp, #16
 1577              		.cfi_def_cfa_offset 40
 191:src/Impl/oled_driver.cpp ****     drawFillRectangle(x, y, 8, 8, backColor);
 1578              		.loc 1 191 0
 1579 000e BDF82C40 		ldrh	r4, [sp, #44]
 1580              	.LBB136:
 1581              	.LBB134:
 152:src/Impl/oled_driver.cpp **** }
 1582              		.loc 1 152 0
 1583 0012 0093     		str	r3, [sp]
 1584 0014 0294     		str	r4, [sp, #8]
 1585 0016 0194     		str	r4, [sp, #4]
 1586 0018 3A46     		mov	r2, r7
 1587              	.LVL162:
 1588 001a 3146     		mov	r1, r6
 1589              	.LVL163:
 1590              	.LBE134:
 1591              	.LBE136:
 191:src/Impl/oled_driver.cpp ****     drawFillRectangle(x, y, 8, 8, backColor);
 1592              		.loc 1 191 0
 1593 001c 0446     		mov	r4, r0
 1594              	.LVL164:
 1595 001e BDF82880 		ldrh	r8, [sp, #40]
 1596              	.LBB137:
 1597              	.LBB135:
 152:src/Impl/oled_driver.cpp **** }
 1598              		.loc 1 152 0
 1599 0022 FFF7FEFF 		bl	_ZN10OledDriver17drawFillRectangleEhhhhtt
ARM GAS  /tmp/ccPpoULl.s 			page 36


 1600              	.LVL165:
 1601              	.LBE135:
 1602              	.LBE137:
 1603              	.LBB138:
 1604              	.LBB139:
 1605              	.LBB140:
 174:src/Impl/oled_driver.cpp ****     {
 1606              		.loc 1 174 0
 1607 0026 A5F12003 		sub	r3, r5, #32
 1608 002a 5E2B     		cmp	r3, #94
 1609 002c 02D9     		bls	.L87
 1610              	.LBE140:
 1611              	.LBE139:
 1612              	.LBE138:
 194:src/Impl/oled_driver.cpp **** 
 1613              		.loc 1 194 0
 1614 002e 04B0     		add	sp, sp, #16
 1615              		.cfi_remember_state
 1616              		.cfi_def_cfa_offset 24
 1617              		@ sp needed
 1618 0030 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1619              	.LVL166:
 1620              	.L87:
 1621              		.cfi_restore_state
 1622              	.LBB143:
 1623              	.LBB141:
 1624 0034 3B46     		mov	r3, r7
 1625 0036 3246     		mov	r2, r6
 1626 0038 2946     		mov	r1, r5
 1627 003a 2046     		mov	r0, r4
 1628 003c CDF82880 		str	r8, [sp, #40]
 1629              	.LVL167:
 1630              	.LBE141:
 1631              	.LBE143:
 1632 0040 04B0     		add	sp, sp, #16
 1633              		.cfi_def_cfa_offset 24
 1634              		@ sp needed
 1635 0042 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 1636              		.cfi_restore 14
 1637              		.cfi_restore 8
 1638              		.cfi_restore 7
 1639              		.cfi_restore 6
 1640              		.cfi_restore 5
 1641              		.cfi_restore 4
 1642              		.cfi_def_cfa_offset 0
 1643              	.LVL168:
 1644              	.LBB144:
 1645              	.LBB142:
 1646 0046 FFF7FEBF 		b	_ZN10OledDriver10drawSymbolEchht.part.0
 1647              	.LVL169:
 1648              	.LBE142:
 1649              	.LBE144:
 1650              		.cfi_endproc
 1651              	.LFE1778:
 1653 004a 00BF     		.section	.text._ZN10OledDriver9printTextEPKchhtt,"ax",%progbits
 1654              		.align	1
 1655              		.p2align 2,,3
ARM GAS  /tmp/ccPpoULl.s 			page 37


 1656              		.global	_ZN10OledDriver9printTextEPKchhtt
 1657              		.syntax unified
 1658              		.thumb
 1659              		.thumb_func
 1660              		.fpu softvfp
 1662              	_ZN10OledDriver9printTextEPKchhtt:
 1663              	.LFB1780:
 211:src/Impl/oled_driver.cpp ****     uint8_t symbolIndex = (y / 8) * 12 + x / 8;
 1664              		.loc 1 211 0
 1665              		.cfi_startproc
 1666              		@ args = 8, pretend = 0, frame = 0
 1667              		@ frame_needed = 0, uses_anonymous_args = 0
 1668              	.LVL170:
 1669 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1670              		.cfi_def_cfa_offset 28
 1671              		.cfi_offset 4, -28
 1672              		.cfi_offset 5, -24
 1673              		.cfi_offset 6, -20
 1674              		.cfi_offset 7, -16
 1675              		.cfi_offset 8, -12
 1676              		.cfi_offset 9, -8
 1677              		.cfi_offset 14, -4
 212:src/Impl/oled_driver.cpp ****     uint8_t index = 0;
 1678              		.loc 1 212 0
 1679 0004 DB08     		lsrs	r3, r3, #3
 1680              	.LVL171:
 1681 0006 03EB4303 		add	r3, r3, r3, lsl #1
 1682 000a D208     		lsrs	r2, r2, #3
 1683              	.LVL172:
 1684 000c 02EB8303 		add	r3, r2, r3, lsl #2
 1685 0010 DCB2     		uxtb	r4, r3
 1686              	.LVL173:
 211:src/Impl/oled_driver.cpp ****     uint8_t symbolIndex = (y / 8) * 12 + x / 8;
 1687              		.loc 1 211 0
 1688 0012 83B0     		sub	sp, sp, #12
 1689              		.cfi_def_cfa_offset 40
 214:src/Impl/oled_driver.cpp ****     {
 1690              		.loc 1 214 0
 1691 0014 5F2C     		cmp	r4, #95
 211:src/Impl/oled_driver.cpp ****     uint8_t symbolIndex = (y / 8) * 12 + x / 8;
 1692              		.loc 1 211 0
 1693 0016 BDF82870 		ldrh	r7, [sp, #40]
 1694 001a BDF82C80 		ldrh	r8, [sp, #44]
 214:src/Impl/oled_driver.cpp ****     {
 1695              		.loc 1 214 0
 1696 001e 1DD8     		bhi	.L88
 1697 0020 0D46     		mov	r5, r1
 1698 0022 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1699              	.LVL174:
 1700 0024 D1B1     		cbz	r1, .L88
 1701 0026 0646     		mov	r6, r0
 1702              	.LBB145:
 216:src/Impl/oled_driver.cpp ****         uint8_t s_x = (symbolIndex % 12) * 8;
 1703              		.loc 1 216 0
 1704 0028 DFF83890 		ldr	r9, .L104
 1705 002c 02E0     		b	.L91
 1706              	.LVL175:
ARM GAS  /tmp/ccPpoULl.s 			page 38


 1707              	.L102:
 1708              	.LBE145:
 214:src/Impl/oled_driver.cpp ****     {
 1709              		.loc 1 214 0 discriminator 1
 1710 002e 15F8011F 		ldrb	r1, [r5, #1]!	@ zero_extendqisi2
 1711 0032 99B1     		cbz	r1, .L88
 1712              	.LVL176:
 1713              	.L91:
 1714              	.LBB146:
 216:src/Impl/oled_driver.cpp ****         uint8_t s_x = (symbolIndex % 12) * 8;
 1715              		.loc 1 216 0
 1716 0034 A9FB0423 		umull	r2, r3, r9, r4
 1717 0038 DB08     		lsrs	r3, r3, #3
 217:src/Impl/oled_driver.cpp ****         drawSymbol(text[index], s_x, s_y, color, backColor);
 1718              		.loc 1 217 0
 1719 003a 03EB4302 		add	r2, r3, r3, lsl #1
 1720 003e A4EB8202 		sub	r2, r4, r2, lsl #2
 1721 0042 D200     		lsls	r2, r2, #3
 219:src/Impl/oled_driver.cpp ****         index++;
 1722              		.loc 1 219 0
 1723 0044 0134     		adds	r4, r4, #1
 1724              	.LVL177:
 218:src/Impl/oled_driver.cpp ****         symbolIndex++;
 1725              		.loc 1 218 0
 1726 0046 8DE88001 		stm	sp, {r7, r8}
 1727 004a 02F0F802 		and	r2, r2, #248
 1728 004e DB00     		lsls	r3, r3, #3
 1729 0050 3046     		mov	r0, r6
 219:src/Impl/oled_driver.cpp ****         index++;
 1730              		.loc 1 219 0
 1731 0052 E4B2     		uxtb	r4, r4
 218:src/Impl/oled_driver.cpp ****         symbolIndex++;
 1732              		.loc 1 218 0
 1733 0054 FFF7FEFF 		bl	_ZN10OledDriver10drawSymbolEchhtt
 1734              	.LVL178:
 1735              	.LBE146:
 214:src/Impl/oled_driver.cpp ****     {
 1736              		.loc 1 214 0
 1737 0058 602C     		cmp	r4, #96
 1738 005a E8D1     		bne	.L102
 1739              	.LVL179:
 1740              	.L88:
 223:src/Impl/oled_driver.cpp **** 
 1741              		.loc 1 223 0
 1742 005c 03B0     		add	sp, sp, #12
 1743              		.cfi_def_cfa_offset 28
 1744              		@ sp needed
 1745 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1746              	.LVL180:
 1747              	.L105:
 1748 0062 00BF     		.align	2
 1749              	.L104:
 1750 0064 ABAAAAAA 		.word	-1431655765
 1751              		.cfi_endproc
 1752              	.LFE1780:
 1754              		.text
 1755              	.Letext0:
ARM GAS  /tmp/ccPpoULl.s 			page 39


 1756              		.file 2 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/
 1757              		.file 3 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/
 1758              		.file 4 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/
 1759              		.file 5 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/
 1760              		.file 6 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/
 1761              		.file 7 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/
 1762              		.file 8 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/
 1763              		.file 9 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++/
 1764              		.file 10 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++
 1765              		.file 11 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++
 1766              		.file 12 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++
 1767              		.file 13 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++
 1768              		.file 14 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++
 1769              		.file 15 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++
 1770              		.file 16 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++
 1771              		.file 17 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++
 1772              		.file 18 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++
 1773              		.file 19 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++
 1774              		.file 20 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/c++
 1775              		.file 21 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3
 1776              		.file 22 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys
 1777              		.file 23 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys
 1778              		.file 24 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys
 1779              		.file 25 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3
 1780              		.file 26 "<built-in>"
 1781              		.file 27 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/wch
 1782              		.file 28 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3
 1783              		.file 29 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/loc
 1784              		.file 30 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/cty
 1785              		.file 31 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/std
 1786              		.file 32 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/std
 1787              		.file 33 "/home/vdykyy/Install/STM-32/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys
 1788              		.file 34 "drivers/CMSIS/Include/core_cm3.h"
 1789              		.file 35 "drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1790              		.file 36 "drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1791              		.file 37 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1792              		.file 38 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1793              		.file 39 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1794              		.file 40 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1795              		.file 41 "drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1796              		.file 42 "src/HAL/spi.h"
 1797              		.file 43 "src/Impl/oled_driver.h"
 1798              		.file 44 "src/HAL/tim.h"
 1799              		.file 45 "src/Impl/oledfont.h"
ARM GAS  /tmp/ccPpoULl.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 oled_driver.cpp
     /tmp/ccPpoULl.s:16     .text._ZN10OledDriverC2Ev:0000000000000000 $t
     /tmp/ccPpoULl.s:24     .text._ZN10OledDriverC2Ev:0000000000000000 _ZN10OledDriverC2Ev
     /tmp/ccPpoULl.s:24     .text._ZN10OledDriverC2Ev:0000000000000000 _ZN10OledDriverC1Ev
     /tmp/ccPpoULl.s:48     .text._ZN10OledDriverD2Ev:0000000000000000 $t
     /tmp/ccPpoULl.s:56     .text._ZN10OledDriverD2Ev:0000000000000000 _ZN10OledDriverD2Ev
     /tmp/ccPpoULl.s:56     .text._ZN10OledDriverD2Ev:0000000000000000 _ZN10OledDriverD1Ev
     /tmp/ccPpoULl.s:72     .text._ZNK10OledDriver14getInitializedEv:0000000000000000 $t
     /tmp/ccPpoULl.s:80     .text._ZNK10OledDriver14getInitializedEv:0000000000000000 _ZNK10OledDriver14getInitializedEv
     /tmp/ccPpoULl.s:96     .text._ZNK10OledDriver18getBackgroundColorEv:0000000000000000 $t
     /tmp/ccPpoULl.s:104    .text._ZNK10OledDriver18getBackgroundColorEv:0000000000000000 _ZNK10OledDriver18getBackgroundColorEv
     /tmp/ccPpoULl.s:120    .text._ZN10OledDriver8drawLineEhhhht:0000000000000000 $t
     /tmp/ccPpoULl.s:128    .text._ZN10OledDriver8drawLineEhhhht:0000000000000000 _ZN10OledDriver8drawLineEhhhht
     /tmp/ccPpoULl.s:139    .text._ZN10OledDriver13drawRectangleEhhhht:0000000000000000 $t
     /tmp/ccPpoULl.s:147    .text._ZN10OledDriver13drawRectangleEhhhht:0000000000000000 _ZN10OledDriver13drawRectangleEhhhht
     /tmp/ccPpoULl.s:160    .text._ZN10OledDriver11sendCommandEh:0000000000000000 $t
     /tmp/ccPpoULl.s:168    .text._ZN10OledDriver11sendCommandEh:0000000000000000 _ZN10OledDriver11sendCommandEh
     /tmp/ccPpoULl.s:254    .text._ZN10OledDriver11sendCommandEh:0000000000000044 $d
     /tmp/ccPpoULl.s:262    .text._ZN10OledDriver9drawPixelEhht:0000000000000000 $t
     /tmp/ccPpoULl.s:270    .text._ZN10OledDriver9drawPixelEhht:0000000000000000 _ZN10OledDriver9drawPixelEhht
     /tmp/ccPpoULl.s:412    .text._ZN10OledDriver9drawPixelEhht:0000000000000090 $d
     /tmp/ccPpoULl.s:420    .text._ZN10OledDriver10drawSymbolEchht.part.0:0000000000000000 $t
     /tmp/ccPpoULl.s:427    .text._ZN10OledDriver10drawSymbolEchht.part.0:0000000000000000 _ZN10OledDriver10drawSymbolEchht.part.0
     /tmp/ccPpoULl.s:537    .text._ZN10OledDriver10drawSymbolEchht:0000000000000000 $t
     /tmp/ccPpoULl.s:545    .text._ZN10OledDriver10drawSymbolEchht:0000000000000000 _ZN10OledDriver10drawSymbolEchht
     /tmp/ccPpoULl.s:591    .text._ZN10OledDriver9printTextEPKchht:0000000000000000 $t
     /tmp/ccPpoULl.s:599    .text._ZN10OledDriver9printTextEPKchht:0000000000000000 _ZN10OledDriver9printTextEPKchht
     /tmp/ccPpoULl.s:709    .text._ZN10OledDriver9printTextEPKchht:000000000000006c $d
     /tmp/ccPpoULl.s:714    .text._ZN10OledDriver8sendDataEh:0000000000000000 $t
     /tmp/ccPpoULl.s:722    .text._ZN10OledDriver8sendDataEh:0000000000000000 _ZN10OledDriver8sendDataEh
     /tmp/ccPpoULl.s:807    .text._ZN10OledDriver8sendDataEh:0000000000000044 $d
     /tmp/ccPpoULl.s:815    .text._ZN10OledDriver11transmitSpiEh:0000000000000000 $t
     /tmp/ccPpoULl.s:823    .text._ZN10OledDriver11transmitSpiEh:0000000000000000 _ZN10OledDriver11transmitSpiEh
     /tmp/ccPpoULl.s:846    .text._ZN10OledDriver11transmitSpiEh:0000000000000014 $d
     /tmp/ccPpoULl.s:851    .text._ZN10OledDriver5setCSENS_8PinStateE:0000000000000000 $t
     /tmp/ccPpoULl.s:859    .text._ZN10OledDriver5setCSENS_8PinStateE:0000000000000000 _ZN10OledDriver5setCSENS_8PinStateE
     /tmp/ccPpoULl.s:878    .text._ZN10OledDriver5setCSENS_8PinStateE:000000000000000c $d
     /tmp/ccPpoULl.s:883    .text._ZN10OledDriver5setDCENS_8PinStateE:0000000000000000 $t
     /tmp/ccPpoULl.s:891    .text._ZN10OledDriver5setDCENS_8PinStateE:0000000000000000 _ZN10OledDriver5setDCENS_8PinStateE
     /tmp/ccPpoULl.s:910    .text._ZN10OledDriver5setDCENS_8PinStateE:000000000000000c $d
     /tmp/ccPpoULl.s:915    .text._ZN10OledDriver6setRSTENS_8PinStateE:0000000000000000 $t
     /tmp/ccPpoULl.s:923    .text._ZN10OledDriver6setRSTENS_8PinStateE:0000000000000000 _ZN10OledDriver6setRSTENS_8PinStateE
     /tmp/ccPpoULl.s:942    .text._ZN10OledDriver6setRSTENS_8PinStateE:000000000000000c $d
     /tmp/ccPpoULl.s:947    .text._ZN10OledDriver5resetEv:0000000000000000 $t
     /tmp/ccPpoULl.s:955    .text._ZN10OledDriver5resetEv:0000000000000000 _ZN10OledDriver5resetEv
     /tmp/ccPpoULl.s:1007   .text._ZN10OledDriver5resetEv:0000000000000028 $d
     /tmp/ccPpoULl.s:1014   .text._ZN10OledDriver9pushColorEt:0000000000000000 $t
     /tmp/ccPpoULl.s:1022   .text._ZN10OledDriver9pushColorEt:0000000000000000 _ZN10OledDriver9pushColorEt
     /tmp/ccPpoULl.s:1068   .text._ZN10OledDriver17drawFillRectangleEhhhhtt:0000000000000000 $t
     /tmp/ccPpoULl.s:1076   .text._ZN10OledDriver17drawFillRectangleEhhhhtt:0000000000000000 _ZN10OledDriver17drawFillRectangleEhhhhtt
     /tmp/ccPpoULl.s:1157   .text._ZN10OledDriver17drawFillRectangleEhhhht:0000000000000000 $t
     /tmp/ccPpoULl.s:1165   .text._ZN10OledDriver17drawFillRectangleEhhhht:0000000000000000 _ZN10OledDriver17drawFillRectangleEhhhht
     /tmp/ccPpoULl.s:1197   .text._ZN10OledDriver10fillScreenEt:0000000000000000 $t
     /tmp/ccPpoULl.s:1205   .text._ZN10OledDriver10fillScreenEt:0000000000000000 _ZN10OledDriver10fillScreenEt
     /tmp/ccPpoULl.s:1297   .text._ZN10OledDriver4initEt:0000000000000000 $t
     /tmp/ccPpoULl.s:1305   .text._ZN10OledDriver4initEt:0000000000000000 _ZN10OledDriver4initEt
ARM GAS  /tmp/ccPpoULl.s 			page 41


     /tmp/ccPpoULl.s:1542   .text._ZN10OledDriver10drawSymbolEchhtt:0000000000000000 $t
     /tmp/ccPpoULl.s:1550   .text._ZN10OledDriver10drawSymbolEchhtt:0000000000000000 _ZN10OledDriver10drawSymbolEchhtt
     /tmp/ccPpoULl.s:1654   .text._ZN10OledDriver9printTextEPKchhtt:0000000000000000 $t
     /tmp/ccPpoULl.s:1662   .text._ZN10OledDriver9printTextEPKchhtt:0000000000000000 _ZN10OledDriver9printTextEPKchhtt
     /tmp/ccPpoULl.s:1750   .text._ZN10OledDriver9printTextEPKchhtt:0000000000000064 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.a61368914fa3edc7c0e5283a5c096c94
                           .group:0000000000000000 wm4.cconfig.h.31.26800e7737adfbebc8022e055efd14f3
                           .group:0000000000000000 wm4.cpu_defines.h.31.bf53b50a3b7882b34c717ebded187478
                           .group:0000000000000000 wm4.cconfig.h.515.5e729db314ae74226e291b4ae081e353
                           .group:0000000000000000 wm4.exception_defines.h.31.b944334bb23842f2d39bb0d8b467613a
                           .group:0000000000000000 wm4.cpp_type_traits.h.33.9f2bfd8c4471a9a299f6da3ec24c745c
                           .group:0000000000000000 wm4.numeric_traits.h.30.aa01a98564b7e55086aad9e53c7e5c53
                           .group:0000000000000000 wm4.concept_check.h.31.f19605d278e56917c68a56d378be308c
                           .group:0000000000000000 wm4.type_traits.30.e36453f87b820f8c5d2743e7313ad763
                           .group:0000000000000000 wm4.move.h.152.41d7b9e6779674d169b7813982cfa003
                           .group:0000000000000000 wm4.assertions.h.30.51d443923f0d242550e04246a7819b39
                           .group:0000000000000000 wm4.stl_iterator.h.1250.45f349a262f1b0d836d8edbc4b7b98ff
                           .group:0000000000000000 wm4.debug.h.30.5c1f223b12199e851d4d42805b788ccf
                           .group:0000000000000000 wm4.stl_algobase.h.491.aa250b69c90aafa2a0a62b8c58cd5f30
                           .group:0000000000000000 wm4.atomic_lockfree_defines.h.31.d5c6334fb1e95c9462b052951f1411df
                           .group:0000000000000000 wm4.allocator.h.52.0ceafb36dc1b82dbfa6b05003082e3f5
                           .group:0000000000000000 wm4.alloc_traits.h.31.c41c7c4789404962122a4e991dfa3abf
                           .group:0000000000000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:0000000000000000 wm4.newlib.h.21.59901f4bf241ab46c63694665baa7297
                           .group:0000000000000000 wm4.features.h.22.5cdadbb3efe495d1c9e38350b8c376c7
                           .group:0000000000000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:0000000000000000 wm4._ansi.h.23.1ee1144430bedaab1a14c7b57a6c8384
                           .group:0000000000000000 wm4.stddef.h.39.fa2e86d241f4df50b9327c72832885e1
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.7e98c9c86da0ed2d27af2ef92af7d013
                           .group:0000000000000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:0000000000000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:0000000000000000 wm4.wchar.h.8.acdef4366e64def8c588421024712d23
                           .group:0000000000000000 wm4.stddef.h.161.9f48187563b2a85291a91832aa425498
                           .group:0000000000000000 wm4.cdefs.h.47.9bc8274c84fddbf05edd550eb0bf48cd
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.wchar.h.29.7ec19a1c094c7903732828676a0a91b2
                           .group:0000000000000000 wm4.wchar.h.76.90478bd2c784f576b769c4535c98839d
                           .group:0000000000000000 wm4.cwchar.48.c4e882638bf84f6da89479dda6fe8e17
                           .group:0000000000000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.stddef.h.161.38688f2eb958a8ed58fdb61ffe554c94
                           .group:0000000000000000 wm4.locale.h.16.90d16f662e7119f5b192650a45179c6c
                           .group:0000000000000000 wm4.clocale.45.c36d2d5b631a875aa5273176b54fdf0f
                           .group:0000000000000000 wm4.ctype.h.2.cf64fe4c5e8c0ac0f52f1143312d4909
                           .group:0000000000000000 wm4.cctype.45.0da5714876b0be7f2d816b53d9670403
                           .group:0000000000000000 wm4.gthr.h.27.ceb1c66b926f052afcba57e8784df0d4
                           .group:0000000000000000 wm4.gthrdefault.h.27.edc94d4398c0534988962be77dc3c2e1
                           .group:0000000000000000 wm4.atomic_word.h.30.9e0ac69fd462d5e650933e05133b4afa
                           .group:0000000000000000 wm4.cstdlib.44.52c5efdfb0f3c176bd11e611a0b94959
                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.56.d4493cd3736e51e9d56335045f26df45
                           .group:0000000000000000 wm4.cstdlib.76.ae666499c8f9b0ace1b4b23fe143da2c
                           .group:0000000000000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
ARM GAS  /tmp/ccPpoULl.s 			page 42


                           .group:0000000000000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.30.bbece7fa40993a78092dcc5805132560
                           .group:0000000000000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.edc2fd66146f9635463a729e8fe0add3
                           .group:0000000000000000 wm4.cstdio.45.ba8d321feb18bfc8923454067605c368
                           .group:0000000000000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:0000000000000000 wm4.errno.h.9.1ecd7b1049497a0ab61da0f6cbd4b0c6
                           .group:0000000000000000 wm4.functional_hash.h.98.3bf7680ffcc8d24d09fa83ac1339c79d
                           .group:0000000000000000 wm4.typeinfo.30.04014f5b1b4fb021c5662653bc27c750
                           .group:0000000000000000 wm4.functional.549.0bc5b448cf999863d3841495cd6fe920
                           .group:0000000000000000 wm4.main.h.40.6fe808b6568aa38f66585b648d7167ef
                           .group:0000000000000000 wm4.stm32f1xx_hal_conf.h.52.96cb61986c8bfeb3a4fa629a7a7441f6
                           .group:0000000000000000 wm4.stm32f1xx.h.57.c2a10934f4c6830aeb7e4997f02806f1
                           .group:0000000000000000 wm4.stm32f103xb.h.56.66305a77cea9d5300aac997a78930076
                           .group:0000000000000000 wm4.core_cm3.h.42.2a8e0c96b09547b9973a4a18db1ac16e
                           .group:0000000000000000 wm4.cmsis_gcc.h.36.67d2dcde6a14ff518eedc1d545d89a76
                           .group:0000000000000000 wm4.core_cm3.h.175.d7cd6dade235c83ca1d82d6b92541a74
                           .group:0000000000000000 wm4.stm32f103xb.h.619.382b3c85cac6f0350ee5bfaff32e1ebc
                           .group:0000000000000000 wm4.stm32f1xx.h.180.c0013e6ebd6ad07f67c298190b8eac92
                           .group:0000000000000000 wm4.stm32f1xx_hal_def.h.77.f54bfbbe3e3696aae97b05a3f338caf7
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.112.09261d6ad0eef5abae6b9147d0cf5cbf
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc_ex.h.40.bb785d717afc4d2d2b63a3608cb5a0c5
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.1219.902328474751456408f7d18f6caace93
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.40.f1cf5d2dd589e1675a9fcd6b008c2bb6
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio_ex.h.40.30d74584c89dcd3d86d10bdbbb06cc31
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.281.b26a95114b989e6edaf48d72c8710b9d
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.40.b1d5b41c58b583c31c61335e4c8e1bdd
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma_ex.h.40.7ac05bbf95f5a25a3f4a9b9c2a14f835
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.427.daddf65c60854feb2dc9660a62f55b8c
                           .group:0000000000000000 wm4.stm32f1xx_hal_cortex.h.40.4f649a8bf316b7aa5d02077abd9b8999
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc.h.40.3ad40e622f0cef64228eb182e4bbe00f
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc_ex.h.40.3118796521817cc82626257e9c7ab79c
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash.h.40.12aaef98e1fbb85e3a8f79f98532d04a
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash_ex.h.40.ad66c77e153bc5a4a1d60e46727f4ae5
                           .group:0000000000000000 wm4.stm32f1xx_hal_pwr.h.40.ecccf9071314b0ab3f6ffcfd7c596e95
                           .group:0000000000000000 wm4.stm32f1xx_hal_spi.h.40.5dd367ee94b0bb430a3842862fe7d7da
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim.h.40.ac3feb225ff72b119eeddfe8acac07a3
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim_ex.h.40.9b926a51c24898708ad2e47fd5ff9d32
                           .group:0000000000000000 wm4.stm32f1xx_hal_uart.h.40.9914ca79b81d8b23b4e5425c156b0acd
                           .group:0000000000000000 wm4.stm32f1xx_hal.h.82.f2fd9c01c6f8c9e676a37d84eb9dc553
                           .group:0000000000000000 wm4.oled_driver.h.11.acf278f082752b2ed8ba23ec4648c16a

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_SPI_Transmit
hspi1
_ZN8OledFont7getDataEc
